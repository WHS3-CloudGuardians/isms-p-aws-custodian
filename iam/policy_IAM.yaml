# name too long: check_id를 줄였다
# action: 자동조치

policies:
  # 1) iam_administrator_access_with_mfa
  # ISMS-P: 2.4.x Multi-Factor Authentication
  # PURPOSE: Ensure users with AdministratorAccess have MFA enabled
  # ACTION PLAN: Invoke remediation Lambda, then send Slack notification
  - name: iam_administrator_access_with_mfa
    description: |
      Detects IAM users with AdministratorAccess but no MFA,
      then posts a Slack notification (no automatic enforcement).
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: value
        key: AttachedManagedPolicies[].PolicyName
        op: contains
        value: AdministratorAccess
      - type: value
        key: MfaDevices
        op: eq
        value: 0
        value_type: size
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: |
          *** CHECKID: iam_administrator_access_with_mfa ***
          • 관리자 권한이 있는 IAM 사용자에 MFA(다중 인증)가 미설정되어 있습니다.
        action_desc: |
          1. 해당 사용자의 MFA를 즉시 활성화해 주세요.
          2. 모든 관리자 권한 계정은 MFA 필수 설정이 필요합니다.
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue


  # 2) iam_avoid_root_usage
  # ISMS-P: 2.1.3 Identity Management
  # PURPOSE: Avoid use of the root account
  # ACTION PLAN: Invoke remediation Lambda, then send Slack notification
  - name: iam_avoid_root_usage
    description: |
      Detects any API/CLI calls made with root credentials,
      then posts a Slack notification (no automatic revocation).
    resource: aws.account
    mode:
      type: periodic
      schedule: "rate(20 days)"
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: value
        key: RootAccountUsage
        op: eq
        value: true
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: |
          *** CHECKID: iam_avoid_root_usage ***
          • 루트 계정이 사용되었습니다.
        action_desc: |
          1. 루트 계정 사용을 즉시 중단해 주세요.
          2. 루트 계정은 비상용으로만 사용하며, 평상시에는 비활성화해 주세요.
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  # 3) iam_aws_attached_policy_no_administrative_privileges   # name too long 
# ISMS-P: 2.4.3 Access Management
# PURPOSE: Disallow AWS-managed policies granting full admin privileges
# ACTION PLAN: Send Slack notification when violation detected
  - name: iam_aws_attached_policy_no_admin_privs
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: rate(7 days)
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: value
        key: AttachedManagedPolicies[].PolicyArn
        op: contains
        value: arn:aws:iam::aws:policy/AdministratorAccess
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: |
          *** CHECKID: iam_aws_attached_policy_no_admin_privs ***
          • AWS에서 제공하는 AdministratorAccess 정책이 사용자에 연결되어 있습니다.
        action_desc: |
          1. 불필요한 관리자 권한 정책은 즉시 분리해 주세요.
          2. 관리자 권한이 필요한 경우 최소 권한 정책을 적용해 주세요.
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue


  # 4) iam_check_saml_providers_sts
  # ISMS-P: 2.3.5 Federation & SSO
  # PURPOSE: Ensure SAML providers support STS
  # ACTION PLAN: Update trust policy, then send Slack notification
  - name: iam_check_saml_providers_sts
    description: |
      Detects SAML providers whose ARN does not include sts.amazonaws.com,
      then posts a Slack notification.
    resource: aws.iam-saml-provider
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: value
        key: Arn
        op: not-in
        value: "sts.amazonaws.com"
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: |
          *** CHECKID: iam_check_saml_providers_sts ***
          • SAML Provider에 sts.amazonaws.com 신뢰정책이 포함되어 있지 않습니다.
        action_desc: |
          1. SAML Provider 신뢰정책에 sts.amazonaws.com을 추가해 주세요.
          2. 정책 수정 후 정상 동작 여부를 확인해 주세요.
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

# 5) iam_customer_attached_policy_no_administrative_privileges     # name too long 
# ISMS-P: 2.4.3 Access Management
# PURPOSE: Disallow customer-managed policies with full admin privileges when attached
# ACTION PLAN: Send Slack notification when violation detected
  - name: iam_cust_attached_no_admin
    description: |
      Detects customer-managed policies with “*:*” privileges that are attached,
      then posts a Slack notification.
    resource: aws.iam-policy
    mode:
      type: periodic
      schedule: rate(7 days)
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: value
        key: Arn
        op: contains
        value: ":policy/"
      - type: value
        key: AttachmentCount
        op: gt
        value: 0
      - type: value
        key: PolicyDocument.Statement[].Action
        op: contains
        value: "*:*"
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: |
          *** CHECKID: iam_cust_attached_no_admin ***
          • 고객 관리형 정책에 전체 권한("*:*")이 허용된 상태로 연결되어 있습니다.
        action_desc: |
          1. 해당 정책의 전체 권한("*:*") 부여 여부를 점검해 주세요.
          2. 필요시 최소 권한 원칙에 맞게 정책을 수정 또는 분리해 주세요.
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  ## action
  # 6) iam_customer_unattached_policy_no_administrative_privileges     # name too long 
  # ISMS-P: 2.4.3 Access Management
  # PURPOSE: Disallow customer-managed policies with full admin privileges when unattached
  # ACTION PLAN: Delete policy, then send Slack notification
  # - name: iam_cust_unattached_no_admin
  #   description: |
  #     Detects unattached customer-managed policies that allow all actions,
  #     deletes the policy, then posts a Slack notification.
  #   resource: aws.iam-policy
  #   mode:
  #     type: periodic
  #     schedule: "rate(7 days)"
  #     role: arn:aws:iam::311278774159:role/custodian-my-role
  #   filters:
  #     - type: has-allow-all
  #     - type: value
  #       key: AttachmentCount
  #       op: eq
  #       value: 0
  #   actions:
  #     - type: delete
  #     - type: notify
  #       template: default
  #       template_format: slack
  #       violation_desc: "Unattached customer-managed policy with admin privileges found."
  #       action_desc: "Policy was automatically deleted by Custodian."
  #       to:
  #         - "${SLACK_WEBHOOK_URL}"
  #       transport:
  #         type: sqs
  #         queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  ## action
  # 7) iam_group_administrator_access_policy
  # ISMS-P: 2.4.3 Access Management
  # PURPOSE: Prevent AdministratorAccess from being attached to any IAM group
  # ACTION PLAN: Invoke remediation Lambda, then send Slack notification
  # - name: iam_group_administrator_access_policy
  #   description: |
  #     Detects IAM groups with AdministratorAccess attached,
  #     invokes a Lambda to detach it,
  #     then posts a Slack notification.
  #   resource: aws.iam-group
  #   mode:
  #     type: periodic
  #     schedule: "rate(7 days)"
  #     role: arn:aws:iam::311278774159:role/custodian-my-role
  #   filters:
  #     - type: value
  #       key: AttachedManagedPolicies[].PolicyName
  #       op: contains
  #       value: AdministratorAccess
  #   actions:
  #     - type: invoke-lambda
  #       function: arn:aws:lambda:ap-northeast-2:311278774159:function:iam_group_administrator_access_policy
  #     - type: notify
  #       template: default
  #       template_format: slack
  #       violation_desc: "Group with AdministratorAccess found."
  #       action_desc: |
  #         1) Invoked iam_group_administrator_access_policy remediation.
  #         2) Confirm detach in IAM console.
  #       to:
  #         - "${SLACK_WEBHOOK_URL}"
  #       transport:
  #         type: sqs
  #         queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  # 8) iam_inline_policy_allows_privilege_escalation
  # ISMS-P: 2.4.3 Access Management
  # PURPOSE: Disallow inline policies that allow privilege escalation
  # ACTION PLAN: Send Slack notification when violation detected
  - name: iam_inline_policy_allows_privilege_escalation
    description: |
      Detects IAM users whose inline policies include iam:PassRole,
      then posts a Slack notification.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: rate(7 days)
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: value
        key: InlinePolicies[].PolicyDocument.Statement[].Action
        op: contains
        value: iam:PassRole
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: |
          *** CHECKID: iam_inline_policy_allows_privilege_escalation ***
          • iam:PassRole 권한이 포함된 인라인 정책이 감지되었습니다.
        action_desc: |
          1. 불필요한 iam:PassRole 권한을 점검해 주세요.
          2. 계정 권한 남용 및 특권 상승이 발생하지 않도록 조치해 주세요.
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

   # 9) iam_inline_policy_no_administrative_privileges      # name too long 
  # ISMS-P: 2.4.3 Access Management
  # PURPOSE: Disallow inline policies granting full administrative privileges
  # ACTION PLAN: Send Slack notification when violation detected
  - name: iam_inline_no_admin_privs
    description: |
      Detects inline policies with “*:*” actions,
      then posts a Slack notification.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: rate(7 days)
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: value
        key: InlinePolicies[].PolicyDocument.Statement[].Action
        op: contains
        value: "*:*"
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: |
          *** CHECKID: iam_inline_no_admin_privs ***
          • 인라인 정책에 전체 권한("*:*")이 허용되어 있습니다.
        action_desc: |
          1. 인라인 정책의 전체 권한("*:*") 허용 여부를 즉시 점검해 주세요.
          2. 불필요한 경우 정책을 최소 권한으로 수정하거나 삭제해 주세요.
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  # 10) iam_inline_policy_no_full_access_to_cloudtrail
  # ISMS-P: 2.4.3 Access Management
  # PURPOSE: Disallow inline policies granting cloudtrail:* privileges
  # ACTION PLAN: Invoke a Lambda to remove offending statements, then Slack notification
  - name: iam_inline_policy_no_full_access_to_cloudtrail
    description: |
      Detects inline policies with cloudtrail:* privileges,
      then posts a Slack notification.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: value
        key: InlinePolicies[].PolicyDocument.Statement[].Action
        op: contains
        value: cloudtrail:*
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: |
          *** CHECKID: iam_inline_policy_no_full_access_to_cloudtrail ***
          • 인라인 정책에 cloudtrail:* 권한이 허용되어 있습니다.
        action_desc: |
          1. cloudtrail:* 권한이 인라인 정책에 포함된 경우 즉시 제거해 주세요.
          2. 불필요한 경우 정책을 최소 권한 원칙에 따라 수정해 주세요.
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  # 11) iam_inline_policy_no_full_access_to_kms
  # ISMS-P: 2.5.3 Key Management
  # PURPOSE: Disallow inline policies granting kms:* privileges
  # ACTION PLAN: Slack notification only
  - name: iam_inline_policy_no_full_access_to_kms
    description: |
      Detects inline policies with kms:* privileges,
      then posts a Slack notification.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: value
        key: InlinePolicies[].PolicyDocument.Statement[].Action
        op: contains
        value: kms:*
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: |
          *** CHECKID: iam_inline_policy_no_full_access_to_kms ***
          • 인라인 정책에 kms:* 권한이 허용되어 있습니다.
        action_desc: |
          1. kms:* 권한이 인라인 정책에 포함된 경우 즉시 제거해 주세요.
          2. 불필요한 경우 정책을 최소 권한 원칙에 따라 수정해 주세요.
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  ## action
  # 12) iam_no_custom_policy_permissive_role_assumption      # name too long 
  # ISMS-P: 2.4.3 Access Management
  # PURPOSE: Disallow custom policies that allow sts:AssumeRole on *
  # ACTION PLAN: Invoke remediation Lambda, then send Slack notification
  # - name: iam_no_custom_permissive_role_assumption   
  #   description: |
  #     Detects custom policies that allow sts:AssumeRole on *,
  #     invokes a Lambda to remove or tighten them,
  #     then posts a Slack notification.
  #   resource: aws.iam-policy
  #   mode:
  #     type: periodic
  #     schedule: "rate(7 days)"
  #     role: arn:aws:iam::311278774159:role/custodian-my-role
  #   filters:
  #     - type: value
  #       key: PolicyDocument.Statement[].Action
  #       op: contains
  #       value: sts:AssumeRole
  #   actions:
  #     - type: invoke-lambda
  #       function: arn:aws:lambda:ap-northeast-2:311278774159:function:iam_no_custom_permissive_role_assumption
  #     - type: notify
  #       template: default
  #       template_format: slack
  #       violation_desc: |
  #         *** CHECKID: iam_no_custom_permissive_role_assumption ***
  #         • sts:AssumeRole 권한이 "*" 대상으로 허용된 커스텀 정책이 감지되었습니다.
  #       action_desc: |
  #         1. sts:AssumeRole 권한을 최소화하여 불필요한 계정/서비스의 역할 획득을 방지해 주세요.
  #         2. 정책 수정 또는 제거 후 IAM 콘솔에서 정상 반영 여부를 확인해 주세요.
  #       to:
  #         - "${SLACK_WEBHOOK_URL}"
  #       transport:
  #         type: sqs
  #         queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  # 13) iam_no_root_access_key
  # ISMS-P: 2.1.3 Identity Management
  # PURPOSE: Ensure no root account access key exists
  # ACTION PLAN: Invoke remediation Lambda, then send Slack notification
  - name: iam_no_root_access_key
    description: |
      Detects any access keys on the root account,
      then posts a Slack notification.
    resource: aws.account
    mode:
      type: periodic
      schedule: "rate(20 days)"
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: value
        key: RootAccessKeys
        op: gt
        value: 0
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: |
          *** CHECKID: iam_no_root_access_key ***
          • 루트 계정에 액세스 키가 존재합니다.
        action_desc: |
          1. 루트 계정에 생성된 액세스 키를 즉시 삭제해 주세요.
          2. 루트 계정은 절대 액세스 키를 사용하지 않도록 관리해 주세요.
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  # 14) iam_password_policy_expires_passwords_within_90_days_or_less    # name too long 
  # ISMS-P: 2.4.1 Identity Management
  # PURPOSE: Ensure password expiration ≤ 90 days
  # ACTION PLAN: Enforce 90-day password rotation when violation detected
  - name: iam_pwd_exp_90d
    description: |
      Detects password policies that do not expire passwords within 90 days.
    resource: aws.account
    filters:
      - type: value
        key: PasswordPolicy.ExpirePasswords
        op: eq
        value: false
    actions: []

  # 15) iam_password_policy_lowercase
  # ISMS-P: 2.4.1 Identity Management
  # PURPOSE: Ensure password contains at least one lowercase character
  # ACTION PLAN: Slack notification only
  - name: iam_password_policy_lowercase
    description: |
      Detects password policies that do not require lowercase characters.
    resource: aws.account
    filters:
      - type: value
        key: PasswordPolicy.RequireLowercaseCharacters
        op: eq
        value: false

  # 16) iam_password_policy_minimum_length_14
  # ISMS-P: 2.4.1 Identity Management
  # PURPOSE: Ensure password length is ≥ 14 characters
  # ACTION PLAN: Slack notification only
  - name: iam_password_policy_minimum_length_14
    description: |
      Detects password policies enforcing less than 14 characters,
      then posts a Slack notification.
    resource: aws.account
    filters:
      - type: value
        key: PasswordPolicy.MinimumPasswordLength
        op: lt
        value: 14
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: |
          *** CHECKID: iam_password_policy_minimum_length_14 ***
          • 비밀번호 최소 길이가 14자 미만으로 설정되어 있습니다.
        action_desc: |
          1. 비밀번호 최소 길이를 14자 이상으로 설정해 주세요.
          2. 비밀번호 정책을 최신 보안 기준에 맞게 적용해 주세요.
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  # 17) iam_password_policy_number
  # ISMS-P: 2.4.1 Identity Management
  # PURPOSE: Ensure password contains at least one numeric character
  # ACTION PLAN: Slack notification only
  - name: iam_password_policy_number
    description: |
      Detects password policies that do not require numbers,
      then posts a Slack notification.
    resource: aws.account
    filters:
      - type: value
        key: PasswordPolicy.RequireNumbers
        op: eq
        value: false
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: |
          *** CHECKID: iam_password_policy_number ***
          • 비밀번호에 숫자(0~9) 포함 요구가 설정되어 있지 않습니다.
        action_desc: |
          1. 비밀번호 정책에 숫자(0~9) 1자 이상 포함이 필수로 설정되었는지 확인해 주세요.
          2. 정책 미적용 시 즉시 수정해 주세요.
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  # 18) iam_password_policy_reuse_24
  # ISMS-P: 2.4.1 Identity Management
  # PURPOSE: Ensure password reuse prevention count ≥ 24
  # ACTION PLAN: Slack notification only
  - name: iam_password_policy_reuse_24
    description: |
      Detects password policies allowing reuse fewer than 24 times,
      then posts a Slack notification.
    resource: aws.account
    filters:
      - type: value
        key: PasswordPolicy.PasswordReusePrevention
        op: lt
        value: 24
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: |
          *** CHECKID: iam_password_policy_reuse_24 ***
          • 비밀번호 재사용 방지 횟수가 24회 미만으로 설정되어 있습니다.
        action_desc: |
          1. 비밀번호 재사용 방지 횟수를 24회 이상으로 설정해 주세요.
          2. 기존 정책 미적용 시 즉시 수정해 주세요.
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  # 19) iam_password_policy_symbol
  # ISMS-P: 2.4.1 Identity Management
  # PURPOSE: Ensure password contains at least one symbol
  # ACTION PLAN: Slack notification only
  - name: iam_password_policy_symbol
    description: |
      Detects password policies that do not require symbols,
      then posts a Slack notification.
    resource: aws.account
    filters:
      - type: value
        key: PasswordPolicy.RequireSymbols
        op: eq
        value: false
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: |
          *** CHECKID: iam_password_policy_symbol ***
          • 비밀번호에 특수문자 포함 요구가 설정되어 있지 않습니다.
        action_desc: |
          1. 비밀번호 정책에 특수문자(예: !, @, # 등) 1자 이상 포함이 필수로 설정되었는지 확인해 주세요.
          2. 정책 미적용 시 즉시 수정해 주세요.
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  # 20) iam_password_policy_uppercase
  # ISMS-P: 2.4.1 Identity Management
  # PURPOSE: Ensure password contains at least one uppercase character
  # ACTION PLAN: Slack notification only
  - name: iam_password_policy_uppercase
    description: |
      Detects password policies that do not require uppercase letters.
    resource: aws.account
    filters:
      - type: value
        key: PasswordPolicy.RequireUppercaseCharacters
        op: eq
        value: false

  # 21) iam_policy_allows_privilege_escalation
  # ISMS-P: 2.4.3 Access Management
  # PURPOSE: Disallow policies that allow privilege escalation (PassRole)
  # ACTION PLAN: Slack notification only
  - name: iam_policy_allows_privilege_escalation
    description: |
      Detects IAM policies that include iam:PassRole.
    resource: aws.iam-policy
    filters:
      - type: value
        key: PolicyDocument.Statement[].Action
        op: contains
        value: iam:PassRole

  ## action
  # 22) iam_policy_attached_only_to_group_or_roles
  # ISMS-P: 2.4.3 Access Management
  # PURPOSE: Ensure policies are only attached to groups or roles
  # ACTION: Notify only
  # - name: iam_policy_attached_only_to_group_or_roles
  #   description: |
  #     Detects IAM policies attached directly to individual users or groups,
  #     then posts a Slack notification for manual review.
  #   resource: aws.iam-policy
  #   mode:
  #     type: periodic
  #     schedule: "rate(50 days)"
  #     role: arn:aws:iam::311278774159:role/custodian-my-role
  #   filters:
  #     - type: value
  #       key: AttachedUsers
  #       op: greater-than
  #       value: 0
  #       value_type: size
  #     - type: value
  #       key: AttachedGroups
  #       op: greater-than
  #       value: 0
  #       value_type: size
  #   actions:
  #     - type: notify
  #       template: default
  #       template_format: slack
  #       violation_desc: "Policy attached to users or groups detected."
  #       action_desc: |
  #          Review which users or groups have this policy attached
  #          and manually detach it for remediation.
  #       to:
  #         - "${SLACK_WEBHOOK_URL}"
  #       transport:
  #         type: sqs
  #         queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue


  # 23) iam_policy_no_full_access_to_cloudtrail
  # ISMS-P: 2.2.1 Audit Logging
  # PURPOSE: Disallow policies granting cloudtrail:* privileges
  # ACTION PLAN: Slack notification only
  - name: iam_policy_no_full_access_to_cloudtrail
    description: |
      Detects IAM policies that grant full CloudTrail privileges.
    resource: aws.iam-policy
    filters:
      - type: value
        key: PolicyDocument.Statement[].Action
        op: contains
        value: cloudtrail:*

  # 24) iam_policy_no_full_access_to_kms
  # ISMS-P: 2.5.3 Key Management
  # PURPOSE: Disallow policies granting kms:* privileges
  # ACTION PLAN: Slack notification only
  - name: iam_policy_no_full_access_to_kms
    description: |
      Detects IAM policies that grant full KMS privileges.
    resource: aws.iam-policy
    filters:
      - type: value
        key: PolicyDocument.Statement[].Action
        op: contains
        value: kms:*

  # 25) iam_role_cross_service_confused_deputy_prevention
  # ISMS-P: 2.4.3 Access Management
  # PURPOSE: Prevent confused-deputy via cross-service role trust policy
  # ACTION PLAN: Slack notification only
  - name: iam_role_cross_service_confused_deputy_prevention
    description: |
      Detects IAM roles whose trust policy omits StringEquals condition.
    resource: aws.iam-role
    filters:
      - type: value
        key: AssumeRolePolicyDocument.Statement[].Condition
        op: not-in
        value: StringEquals

  # 26) iam_root_hardware_mfa_enabled
  # ISMS-P: 2.1.3 Identity Management
  # PURPOSE: Ensure root hardware MFA is enabled
  # ACTION PLAN: Slack notification only
  - name: iam_root_hardware_mfa_enabled
    description: |
      Detects if the root account has no hardware MFA configured,
      then posts a Slack notification.
    resource: aws.account
    mode:
      type: periodic
      schedule: "rate(50 days)"
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: value
        key: MFADevices
        op: eq
        value: 0
        value_type: size
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: "Root hardware MFA not enabled."
        action_desc: |
          Confirm hardware MFA is configured in the account settings.
        to: ["${SLACK_WEBHOOK_URL}"]
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue


  # 27) iam_root_mfa_enabled
  # ISMS-P: 2.1.3 Identity Management
  # PURPOSE: Ensure root account has any MFA
  # ACTION PLAN: Slack notification only
  - name: iam_root_mfa_enabled
    description: |
      Detects if the root account has no MFA devices at all,
      then posts a Slack notification.
    resource: aws.account
    mode:
      type: periodic
      schedule: "rate(20 days)"
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: value
        key: MFADevices
        op: eq
        value: 0
        value_type: size
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: "Root MFA not enabled."
        action_desc: "Please configure MFA (hardware or virtual) for root account."
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  # 28) iam_rotate_access_key_90_days
  # ISMS-P: 2.1.3 Identity Management
  # PURPOSE: Ensure access keys are rotated every 90 days
  # ACTION PLAN: Slack notification only
  - name: iam_rotate_access_key_90_days
    description: |
      Detects IAM user access keys last rotated over 90 days ago,
      then posts a Slack notification.
    resource: aws.iam-user
    filters:
      - type: credential
        key: access_keys.last_rotated
        op: gt
        value: 90
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: "Access key last rotated over 90 days detected."
        action_desc: "Please rotate access keys to comply with 90-day policy."
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  # 29) iam_securityaudit_role_created
  # ISMS-P: 2.1.3 Identity Management
  # PURPOSE: Ensure SecurityAudit role exists
  # ACTION PLAN: Slack notification only
  - name: iam_securityaudit_role_created
    description: |
      Detects absence of the SecurityAudit role,
      then posts a Slack notification.
    resource: aws.iam-role
    mode:
      type: periodic
      schedule: "rate(50 days)"
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: value
        key: RoleName
        op: ne
        value: SecurityAudit
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: "SecurityAudit role missing."
        action_desc: "Please create SecurityAudit role with correct permissions."
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  # 30) iam_support_role_created
  # ISMS-P: 2.1.3 Identity Management
  # PURPOSE: Ensure Support role exists
  # ACTION PLAN: Slack notification only
  - name: iam_support_role_created
    description: |
      Detects absence of the IAM Support role,
      then posts a Slack notification.
    resource: aws.iam-role
    mode:
      type: periodic
      schedule: "rate(50 days)"
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: value
        key: RoleName
        op: ne
        value: Support
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: "Support role missing."
        action_desc: "Please create Support role with correct permissions."
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  # 31) iam_user_accesskey_unused
  # ISMS-P: 2.4.1 Identity Management
  # PURPOSE: Ensure access keys are used regularly
  # ACTION PLAN: Slack notification only
  - name: iam_user_accesskey_unused
    description: |
      Detects IAM users whose access keys have not been used for over 90 days,
      then posts a Slack notification.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(20 days)"
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: credential
        key: access_keys.last_used_date
        op: lt
        value: 90
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: "Access key unused for > 90 days."
        action_desc: "Please review and deactivate unused access keys."
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  ## action
  # 32) iam_user_administrator_access_policy
  # ISMS-P: 2.4.3 Access Management
  # PURPOSE: Ensure no IAM user has AdministratorAccess
  # ACTION: Detach policy & notify
  # - name: iam_user_administrator_access_policy
  #   description: |
  #     Detects IAM users with the AdministratorAccess policy,
  #     invokes a Lambda to detach it,
  #     then posts a Slack notification.
  #   resource: aws.iam-user
  #   mode:
  #     type: periodic
  #     schedule: "rate(5 minutes)"
  #     role: arn:aws:iam::311278774159:role/custodian-my-role
  #   filters:
  #     - type: value
  #       key: AttachedManagedPolicies[].PolicyName
  #       op: contains
  #       value: AdministratorAccess
  #   actions:
  #     - type: invoke-lambda
  #       function: arn:aws:lambda:ap-northeast-2:311278774159:function:iam_user_administrator_access_policy
  #     - type: notify
  #       template: default
  #       template_format: slack
  #       violation_desc: "User with AdministratorAccess detected."
  #       action_desc: |
  #         1) Invoked iam_user_administrator_access_policy remediation.
  #         2) Confirm detach in IAM console.
  #       to:
  #         - "${SLACK_WEBHOOK_URL}"
  #       transport:
  #         type: sqs
  #         queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  # 33) iam_user_hardware_mfa_enabled
  # ISMS-P: 2.4.2 Multi-Factor Authentication
  # PURPOSE: Ensure IAM users have hardware MFA
  # ACTION: 감지-only (알림·자동조치 없음)
  - name: iam_user_hardware_mfa_enabled
    description: |
      Detects IAM users without any hardware MFA device,
      then posts a Slack notification.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(20 days)"
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: value
        key: MfaDevices
        op: eq
        value: 0
        value_type: size
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: "User without hardware MFA detected."
        action_desc: |
          Confirm hardware MFA is enrolled for this user in the IAM console.
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  # 34) iam_user_mfa_enabled_console_access
  # ISMS-P: 2.4.2 Multi-Factor Authentication
  # PURPOSE: Enforce MFA for console access
  # ACTION: 감지-only (알림·자동조치 없음)
  - name: iam_user_mfa_enabled_console_access
    description: |
      Detects IAM users without any active MFA devices.
    resource: aws.iam-user
    filters:
      - type: credential
        key: mfa_active
        op: equal
        value: false

  # 35) iam_user_no_setup_initial_access_key
  # ISMS-P: 2.4.1 Identity Management
  # PURPOSE: Prevent initial access key setup for console users
  # ACTION PLAN: Slack notification only
  - name: iam_user_no_setup_initial_access_key
    description: |
      Detects IAM users created with initial access keys,
      then posts a Slack notification.
    resource: aws.iam-user
    filters:
      - type: value
        key: AccessKeyMetadata
        op: gt
        value: 0
        value_type: size
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: "Initial access key detected."
        action_desc: "Please remove initial access keys from new users."
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue

  # 36) iam_user_two_active_access_key
  # ISMS-P: 2.4.1 Identity Management
  # PURPOSE: Prevent users from having two active access keys
  # ACTION: 감지-only (알림·자동조치 없음)
  - name: iam_user_two_active_access_key
    description: |
      Detects IAM users with two active access keys.
    resource: aws.iam-user
    filters:
      - type: credential
        key: access_keys.active
        op: gt
        value: 1
        value_type: size

  # 37) iam_user_console_access_unused
  # ISMS-P: 2.4.1 Identity Management
  # PURPOSE: Flag console-only users
  # ACTION: 감지-only (알림·자동조치 없음)
  - name: iam_user_console_access_unused
    description: |
      Detects IAM users who have console access but have never used their access keys,
      then posts a Slack notification.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(20 days)"
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: credential
        key: access_keys.active
        op: eq
        value: null
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: "Console-only user detected (no access key usage)."
        action_desc: |
          Notify that this user has console-only access without key usage.
          Please review and disable or flag as appropriate in the IAM console.
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue


  # 38) iam_user_with_temporary_credentials
  # ISMS-P: 2.4.2 Multi-Factor Authentication & Temporary Credentials
  # PURPOSE: Identify users with STS credentials
  # ACTION: 감지-only (알림·자동조치 없음)
  - name: iam_user_with_temporary_credentials
    description: |
      Detects IAM users who have active temporary credentials (STS),
      then posts a Slack notification.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(20 days)"
      role: arn:aws:iam::311278774159:role/custodian-my-role
    filters:
      - type: credential
        key: access_keys.active
        op: contains
        value: "STS"
    actions:
      - type: notify
        template: default
        template_format: slack
        violation_desc: "User with temporary STS credentials detected."
        action_desc: |
          Temporary STS credentials detected for this user.
          Please audit or revoke them in the IAM console.
        to:
          - "${SLACK_WEBHOOK_URL}"
        transport:
          type: sqs
          queue: https://sqs.ap-northeast-2.amazonaws.com/311278774159/custodian-notify-queue


  # 39) rds_instance_iam_authentication_enabled
  # ISMS-P: 2.7.2 Database Access Control
  # PURPOSE: Ensure RDS instances enforce IAM authentication
  # ACTION PLAN: Slack notification only
  - name: rds_instance_iam_authentication_enabled
    description: |
      Detects RDS instances without IAM authentication enabled.
    resource: aws.rds
    filters:
      - type: value
        key: IAMDatabaseAuthenticationEnabled
        op: eq
        value: false
