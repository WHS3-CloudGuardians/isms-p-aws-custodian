# name too long
# action

policies:
  # CHECKID: iam_administrator_access_with_mfa
  # ACTIONPLAN: AdministratorAccess가 할당된 IAM 사용자 중 MFA 미적용 계정 탐지 시 Slack 알림 발송
  - name: iam_administrator_access_with_mfa
    description: Detect IAM users with AdministratorAccess but no MFA, then send Slack alert.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)" 
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: AttachedManagedPolicies[].PolicyName
        op: contains
        value: AdministratorAccess
      - type: value
        key: MfaDevices
        op: eq
        value: 0
        value_type: size
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_administrator_access_with_mfa ***
          • MFA가 미적용된 AdministratorAccess 계정이 탐지되었습니다.
        action_desc: |
          1. 해당 계정에 MFA를 즉시 등록하세요.
          2. MFA 미적용 시 중요 권한 탈취 위험이 큽니다.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_avoid_root_usage
  # ACTIONPLAN: Root 계정 사용 이력 발생 시 Slack 경고 알림 발송
  - name: iam_avoid_root_usage
    description: Detect AWS root account usage and send Slack alert for review.
    resource: aws.account
    mode:
      type: periodic
      schedule: "rate(1 day)"   
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: RootAccountUsage
        op: eq
        value: true
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_avoid_root_usage ***
          • AWS root 계정 사용 이력이 탐지되었습니다.
        action_desc: |
          1. 불필요한 root 사용을 즉시 중지하고, 계정 접근 이력을 점검하세요.
          2. 모든 작업은 개별 IAM 계정으로 수행하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_aws_attached_policy_no_administrative_privileges
  # ACTIONPLAN: AWS 관리형 관리자 권한 정책이 붙은 사용자 탐지 시 Slack 알림 발송
  - name: iam_aws_attached_policy_no_admin_privs
    description: Detect users with AWS-managed AdministratorAccess and send Slack alert.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: AttachedManagedPolicies[].PolicyArn
        op: contains
        value: arn:aws:iam::aws:policy/AdministratorAccess
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_aws_attached_policy_no_administrative_privileges ***
          • AWS 관리형 AdministratorAccess 정책이 할당된 사용자가 탐지되었습니다.
        action_desc: |
          1. 해당 계정의 필요성 검토 후, 정책을 해제하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_check_saml_providers_sts
  # ACTIONPLAN: sts.amazonaws.com 미포함 SAML Provider 탐지 시 Slack 알림 발송
  - name: iam_check_saml_providers_sts
    description: Detect SAML providers without sts.amazonaws.com in ARN, then send Slack alert.
    resource: aws.iam-saml-provider
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: Arn
        op: not-in
        value: "sts.amazonaws.com"
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_check_saml_providers_sts ***
          • sts.amazonaws.com이 포함되지 않은 SAML Provider가 탐지되었습니다.
        action_desc: |
          1. 트러스트 정책을 수정하여 sts.amazonaws.com을 포함시키세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_customer_attached_policy_no_administrative_privileges
  # ACTIONPLAN: 관리자 권한(*:*)이 포함된 고객 관리형 정책이 부착된 경우 Slack 알림 발송
  - name: iam_cust_attached_no_admin
    description: Detect attached customer-managed policies with '*:*' privilege, then send Slack alert.
    resource: aws.iam-policy
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: Arn
        op: contains
        value: ":policy/"
      - type: value
        key: AttachmentCount
        op: gt
        value: 0
      - type: value
        key: PolicyDocument.Statement[].Action
        op: contains
        value: "*:*"
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_customer_attached_policy_no_administrative_privileges ***
          • 관리자 권한(*:*)이 부여된 고객 관리형 정책이 부착된 상태로 탐지되었습니다.
        action_desc: |
          1. 불필요한 전체 권한 정책은 분리 및 삭제를 권고합니다.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_customer_unattached_policy_no_administrative_privileges
  # ACTIONPLAN: 관리자 권한(*:*)이 포함된 고객 관리형 정책이 미부착(Unattached) 상태로 탐지 시 Slack 알림 발송
  - name: iam_cust_unattached_no_admin
    description: Detect unattached customer-managed policies that allow all actions, then send Slack alert.
    resource: aws.iam-policy
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: has-allow-all
      - type: value
        key: AttachmentCount
        op: eq
        value: 0
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_customer_unattached_policy_no_administrative_privileges ***
          • 관리자 권한(*:*)이 부여된 고객 관리형 정책이 미부착 상태로 탐지되었습니다.
        action_desc: |
          1. 해당 정책의 필요성을 재검토하고, 불필요시 삭제하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}


  # CHECKID: iam_group_administrator_access_policy
  # ACTIONPLAN: AdministratorAccess가 부착된 IAM 그룹 탐지 시 Slack 경고 알림 발송
  - name: iam_group_administrator_access_policy
    description: Detect IAM groups with AdministratorAccess attached and send Slack alert.
    resource: aws.iam-group
    mode:
      type: periodic
      schedule: "rate(7 days)" 
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: AttachedManagedPolicies[].PolicyName
        op: contains
        value: AdministratorAccess
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_group_administrator_access_policy ***
          • AdministratorAccess가 부착된 IAM 그룹이 탐지되었습니다.
        action_desc: |
          1. 그룹에서 해당 정책을 분리하거나, 필요성 재검토 후 최소 권한으로 조정하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_inline_policy_allows_privilege_escalation
  # ACTIONPLAN: iam:PassRole 등 권한 상승이 가능한 인라인 정책 탐지 시 Slack 알림 발송
  - name: iam_inline_policy_allows_privilege_escalation
    description: Detect IAM users whose inline policies allow privilege escalation (e.g., iam:PassRole), then send Slack alert.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: InlinePolicies[].PolicyDocument.Statement[].Action
        op: contains
        value: iam:PassRole
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_inline_policy_allows_privilege_escalation ***
          • iam:PassRole 권한(권한 상승 가능)이 포함된 인라인 정책이 탐지되었습니다.
        action_desc: |
          1. 인라인 정책에서 iam:PassRole 등 권한 상승 항목을 제거하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_inline_policy_no_administrative_privileges
  # ACTIONPLAN: *:* 권한이 포함된 인라인 정책 탐지 시 Slack 알림 발송
  - name: iam_inline_no_admin_privs
    description: Detect inline policies with '*:*' actions and send Slack alert.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: InlinePolicies[].PolicyDocument.Statement[].Action
        op: contains
        value: "*:*"
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_inline_policy_no_administrative_privileges ***
          • 전체 권한(*:*)이 부여된 인라인 정책이 탐지되었습니다.
        action_desc: |
          1. 필요 없는 전체 권한 정책은 반드시 삭제하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_inline_policy_no_full_access_to_cloudtrail
  # ACTIONPLAN: cloudtrail:* 권한이 부여된 인라인 정책 탐지 시 Slack 알림 발송
  - name: iam_inline_policy_no_full_access_to_cloudtrail
    description: Detect inline policies with cloudtrail:* privileges and send Slack alert.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: InlinePolicies[].PolicyDocument.Statement[].Action
        op: contains
        value: cloudtrail:*
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_inline_policy_no_full_access_to_cloudtrail ***
          • cloudtrail:* 권한이 부여된 인라인 정책이 탐지되었습니다.
        action_desc: |
          1. cloudtrail:* 권한은 최소한으로 제한하고, 불필요시 정책에서 삭제하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_inline_policy_no_full_access_to_kms
  # ACTIONPLAN: kms:* 권한이 부여된 인라인 정책 탐지 시 Slack 알림 발송
  - name: iam_inline_policy_no_full_access_to_kms
    description: Detect inline policies with kms:* privileges and send Slack alert.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: InlinePolicies[].PolicyDocument.Statement[].Action
        op: contains
        value: kms:*
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_inline_policy_no_full_access_to_kms ***
          • kms:* 권한이 부여된 인라인 정책이 탐지되었습니다.
        action_desc: |
          1. 인라인 정책에서 kms:* 권한을 최소 권한 원칙에 따라 제한하거나 삭제하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_no_custom_policy_permissive_role_assumption
  # ACTIONPLAN: sts:AssumeRole을 *에 허용하는 커스텀 정책을 탐지해 Slack 알림 발송
  - name: iam_no_custom_permissive_role_assumption
    description: Detect custom IAM policies that allow sts:AssumeRole on all resources, then send Slack alert.
    resource: aws.iam-policy
    mode:
      type: periodic
      schedule: "rate(7 days)" 
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: PolicyDocument.Statement[].Action
        op: contains
        value: sts:AssumeRole
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_no_custom_policy_permissive_role_assumption ***
          • sts:AssumeRole을 모든 리소스(*)에 허용하는 커스텀 정책이 탐지되었습니다.
        action_desc: |
          1. 정책 범위를 최소한으로 제한하고, 불필요한 전체 리소스 허용은 즉시 제거하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_no_root_access_key
  # ACTIONPLAN: 루트 계정에 Access Key 존재 시 Slack 경고 알림 발송
  - name: iam_no_root_access_key
    description: Detect AWS root account with active access key(s), then send Slack alert.
    resource: aws.account
    mode:
      type: periodic
      schedule: "rate(1 day)"  # 루트 계정 키는 반드시 1일 주기로 점검 추천
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: RootAccessKeys
        op: gt
        value: 0
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_no_root_access_key ***
          • AWS 루트 계정에 Access Key가 존재합니다.
        action_desc: |
          1. 모든 루트 Access Key를 즉시 삭제하세요.
          2. 루트 계정은 MFA만 활성화하고 키는 절대 사용하지 마세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_password_policy_expires_passwords_within_90_days_or_less
  # ACTIONPLAN: 비밀번호 만료 주기가 90일 초과된 경우 Slack 경고 알림 발송
  - name: iam_pwd_exp_90d
    description: Detect AWS account password policies that do not expire passwords within 90 days, then send Slack alert.
    resource: aws.account
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: PasswordPolicy.ExpirePasswords
        op: eq
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_password_policy_expires_passwords_within_90_days_or_less ***
          • 비밀번호 만료 주기가 90일을 초과하는 패스워드 정책이 탐지되었습니다.
        action_desc: |
          1. 비밀번호 만료 주기를 90일 이하로 강제하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_password_policy_lowercase
  # ACTIONPLAN: 패스워드에 소문자 필수 조건이 비활성화된 경우 Slack 알림 발송
  - name: iam_password_policy_lowercase
    description: Detect AWS account password policies that do not require lowercase characters, then send Slack alert.
    resource: aws.account
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: PasswordPolicy.RequireLowercaseCharacters
        op: eq
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_password_policy_lowercase ***
          • 비밀번호에 소문자 포함 조건이 비활성화된 패스워드 정책이 탐지되었습니다.
        action_desc: |
          1. 소문자 포함 필수 조건을 반드시 활성화하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_password_policy_minimum_length_14
  # ACTIONPLAN: 최소 14자 미만 패스워드 정책 탐지 시 Slack 알림 발송
  - name: iam_password_policy_minimum_length_14
    description: Detect AWS account password policies with minimum length less than 14 and send Slack alert.
    resource: aws.account
    mode:
      type: periodic
      schedule: "rate(7 days)" 
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: PasswordPolicy.MinimumPasswordLength
        op: lt
        value: 14
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_password_policy_minimum_length_14 ***
          • 비밀번호 최소 길이가 14자 미만으로 설정된 정책이 탐지되었습니다.
        action_desc: |
          1. 최소 14자 이상으로 패스워드 길이 정책을 강화하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_password_policy_number
  # ACTIONPLAN: 숫자 필수 조건 없는 패스워드 정책 탐지 시 Slack 알림 발송
  - name: iam_password_policy_number
    description: Detect AWS account password policies that do not require numbers and send Slack alert.
    resource: aws.account
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: PasswordPolicy.RequireNumbers
        op: eq
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_password_policy_number ***
          • 비밀번호에 숫자 필수 조건이 없는 정책이 탐지되었습니다.
        action_desc: |
          1. 비밀번호에 숫자 포함 필수 조건을 반드시 활성화하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_password_policy_reuse_24
  # ACTIONPLAN: 24회 미만 재사용 제한 정책 탐지 시 Slack 알림 발송
  - name: iam_password_policy_reuse_24
    description: Detect AWS account password policies allowing reuse fewer than 24 times and send Slack alert.
    resource: aws.account
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: PasswordPolicy.PasswordReusePrevention
        op: lt
        value: 24
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_password_policy_reuse_24 ***
          • 패스워드 재사용 방지 횟수가 24회 미만인 정책이 탐지되었습니다.
        action_desc: |
          1. 패스워드 재사용 방지 횟수를 24회 이상으로 설정하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_password_policy_symbol
  # ACTIONPLAN: 특수문자 필수 조건 없는 패스워드 정책 탐지 시 Slack 알림 발송
  - name: iam_password_policy_symbol
    description: Detect AWS account password policies that do not require symbols and send Slack alert.
    resource: aws.account
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: PasswordPolicy.RequireSymbols
        op: eq
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_password_policy_symbol ***
          • 비밀번호에 특수문자 필수 조건이 없는 정책이 탐지되었습니다.
        action_desc: |
          1. 비밀번호에 특수문자 포함 필수 조건을 활성화하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_password_policy_uppercase
  # ACTIONPLAN: 대문자 필수 조건 없는 패스워드 정책 탐지 시 Slack 알림 발송
  - name: iam_password_policy_uppercase
    description: Detect AWS account password policies that do not require uppercase letters and send Slack alert.
    resource: aws.account
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: PasswordPolicy.RequireUppercaseCharacters
        op: eq
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_password_policy_uppercase ***
          • 비밀번호에 대문자 필수 조건이 없는 정책이 탐지되었습니다.
        action_desc: |
          1. 비밀번호에 대문자 포함 필수 조건을 반드시 활성화하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_policy_allows_privilege_escalation
  # ACTIONPLAN: iam:PassRole 권한 상승 허용 정책 탐지 시 Slack 알림 발송
  - name: iam_policy_allows_privilege_escalation
    description: Detect IAM policies that include iam:PassRole and send Slack alert.
    resource: aws.iam-policy
    mode:
      type: periodic
      schedule: "rate(7 days)" 
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: PolicyDocument.Statement[].Action
        op: contains
        value: iam:PassRole
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_policy_allows_privilege_escalation ***
          • iam:PassRole(권한 상승)이 허용된 정책이 탐지되었습니다.
        action_desc: |
          1. 권한 상승이 불필요한 정책에서 iam:PassRole 항목을 반드시 제거하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_policy_attached_only_to_group_or_roles
  # ACTIONPLAN: 정책이 그룹/사용자에 직접 부착된 경우 Slack 알림 발송
  - name: iam_policy_attached_only_to_group_or_roles
    description: Detect IAM policies attached directly to users or groups and send Slack alert.
    resource: aws.iam-policy
    mode:
      type: periodic
      schedule: "rate(7 days)" 
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: AttachedUsers
        op: greater-than
        value: 0
        value_type: size
      - type: value
        key: AttachedGroups
        op: greater-than
        value: 0
        value_type: size
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_policy_attached_only_to_group_or_roles ***
          • 정책이 사용자 또는 그룹에 직접 부착된 사례가 탐지되었습니다.
        action_desc: |
          1. 정책을 사용자/그룹이 아닌 역할(roles)에만 부착하도록 조정하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_policy_no_full_access_to_cloudtrail
  # ACTIONPLAN: cloudtrail:* 전체권한 허용 정책 탐지 시 Slack 알림 발송
  - name: iam_policy_no_full_access_to_cloudtrail
    description: Detect IAM policies that grant full CloudTrail privileges and send Slack alert.
    resource: aws.iam-policy
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: PolicyDocument.Statement[].Action
        op: contains
        value: cloudtrail:*
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_policy_no_full_access_to_cloudtrail ***
          • cloudtrail:* 전체 권한이 허용된 정책이 탐지되었습니다.
        action_desc: |
          1. cloudtrail 전체 권한이 필요한지 검토하고 최소 권한으로 수정하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_policy_no_full_access_to_kms
  # ACTIONPLAN: kms:* 전체권한 허용 정책 탐지 시 Slack 알림 발송
  - name: iam_policy_no_full_access_to_kms
    description: Detect IAM policies that grant full KMS privileges and send Slack alert.
    resource: aws.iam-policy
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: PolicyDocument.Statement[].Action
        op: contains
        value: kms:*
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_policy_no_full_access_to_kms ***
          • kms:* 전체 권한이 허용된 정책이 탐지되었습니다.
        action_desc: |
          1. kms 전체 권한이 반드시 필요한지 검토하고, 최소 권한 원칙을 적용하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_role_cross_service_confused_deputy_prevention
  # ACTIONPLAN: trust policy에 StringEquals 조건이 없는 cross-service 역할 탐지 시 Slack 알림 발송
  - name: iam_role_cross_service_confused_deputy_prevention
    description: Detect IAM roles whose trust policy omits StringEquals condition and send Slack alert (confused deputy prevention).
    resource: aws.iam-role
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: AssumeRolePolicyDocument.Statement[].Condition
        op: not-in
        value: StringEquals
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_role_cross_service_confused_deputy_prevention ***
          • cross-service trust policy에 StringEquals 조건이 없는 역할이 탐지되었습니다.
        action_desc: |
          1. confused deputy 방지를 위해 StringEquals(SrcAccount 등) 조건을 반드시 추가하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_root_hardware_mfa_enabled
  # ACTIONPLAN: 루트 계정에 하드웨어 MFA가 미설정된 경우 Slack 알림 발송
  - name: iam_root_hardware_mfa_enabled
    description: Detect root account without hardware MFA and send Slack alert.
    resource: aws.account
    mode:
      type: periodic
      schedule: "rate(7 days)"  
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: MFADevices
        op: eq
        value: 0
        value_type: size
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_root_hardware_mfa_enabled ***
          • 루트 계정에 하드웨어 MFA가 설정되어 있지 않습니다.
        action_desc: |
          1. 루트 계정에 하드웨어 MFA를 즉시 설정하세요.
        to: 
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_root_mfa_enabled
  # ACTIONPLAN: 루트 계정에 MFA가 미설정된 경우 Slack 알림 발송
  - name: iam_root_mfa_enabled
    description: Detect root account without any MFA and send Slack alert.
    resource: aws.account
    mode:
      type: periodic
      schedule: "rate(7 days)" 
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: MFADevices
        op: eq
        value: 0
        value_type: size
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_root_mfa_enabled ***
          • 루트 계정에 MFA가 설정되어 있지 않습니다.
        action_desc: |
          1. 루트 계정에 가상 또는 하드웨어 MFA를 반드시 설정하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_rotate_access_key_90_days
  # ACTIONPLAN: 90일 초과 사용 중인 IAM Access Key 탐지 시 Slack 알림 발송
  - name: iam_rotate_access_key_90_days
    description: Detect IAM user access keys last rotated over 90 days ago and send Slack alert.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: credential
        key: access_keys.last_rotated
        op: gt
        value: 90
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_rotate_access_key_90_days ***
          • 90일 초과 사용된 Access Key가 탐지되었습니다.
        action_desc: |
          1. 해당 Access Key를 즉시 교체(회전)하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_securityaudit_role_created
  # ACTIONPLAN: SecurityAudit 역할이 없을 경우 Lambda로 자동 생성 후 Slack 알림 발송
  # [주의] lambda 폴더에 있는 람다를 배포하여 자동조치 가능
  # 자동조치를 완료했으므로 warning에서 good으로 변경
  - name: iam_securityaudit_role_created
    description: Detect absence of SecurityAudit role, create if missing, then send Slack alert.
    resource: aws.iam-role
    mode:
      type: periodic
      schedule: "rate(7 days)" 
      role: ${LAMBDA_ROLE}
    filters: []
    actions:
      # - type: invoke-lambda
      #   function: arn:aws:lambda:${AWS_REGION}:${ACCOUNT_ID}:function:ensureSecurityAuditFunction
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: iam_securityaudit_role_created ***
          • SecurityAudit 역할이 존재하지 않아 자동으로 생성하였습니다.
        action_desc: |
          1. SecurityAudit 역할이 정상적으로 생성/유지되고 있는지 관리하세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_support_role_created
  # ACTIONPLAN: Support 역할이 없을 경우 Lambda로 자동 생성 후 Slack 알림 발송
  # [주의] lambda 폴더에 있는 람다를 배포하여 자동조치 가능
  # 자동조치를 완료했으므로 warning에서 good으로 변경
  - name: iam_support_role_created
    description: Detect absence of Support role, create if missing, then send Slack alert.
    resource: aws.iam-role
    mode:
      type: periodic
      schedule: "rate(7 days)" 
      role: ${LAMBDA_ROLE}
    filters: []
    actions:
      # - type: invoke-lambda
      #   function: arn:aws:lambda:${AWS_REGION}:${ACCOUNT_ID}:function:ensureSupportRoleFunction
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: iam_support_role_created ***
          • Support 역할이 존재하지 않아 자동으로 생성하였습니다.
        action_desc: |
          1. Support 역할이 정상적으로 생성/유지되고 있는지 관리하세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_user_accesskey_unused
  # ACTIONPLAN: 90일 이상 미사용 Access Key가 있는 IAM 사용자 탐지 시 Slack 알림 발송
  - name: iam_user_accesskey_unused
    description: Detect IAM users with access keys unused for over 90 days and send Slack alert.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)" 
      role: ${LAMBDA_ROLE}
    filters:
      - type: credential
        key: access_keys.last_used_date
        op: lt
        value: 90
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_user_accesskey_unused ***
          • 90일 이상 미사용 Access Key가 탐지된 계정이 있습니다.
        action_desc: |
          1. 미사용 Access Key는 즉시 비활성화 또는 삭제하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_user_administrator_access_policy
  # ACTIONPLAN: AdministratorAccess가 부여된 IAM 사용자 탐지 시 Slack 알림 발송
  - name: iam_user_administrator_access_policy
    description: Detect IAM users with AdministratorAccess policy and send Slack alert.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)" 
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: AttachedManagedPolicies[].PolicyName
        op: contains
        value: AdministratorAccess
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_user_administrator_access_policy ***
          • AdministratorAccess 권한이 할당된 IAM 사용자가 탐지되었습니다.
        action_desc: |
          1. 해당 계정에 불필요한 경우 AdministratorAccess 정책을 해제하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_user_hardware_mfa_enabled
  # ACTIONPLAN: 하드웨어 MFA 미설정 IAM 사용자 탐지 시 Slack 알림 발송
  - name: iam_user_hardware_mfa_enabled
    description: Detect IAM users without hardware MFA and send Slack alert.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: MfaDevices
        op: eq
        value: 0
        value_type: size
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_user_hardware_mfa_enabled ***
          • 하드웨어 MFA가 등록되지 않은 사용자가 탐지되었습니다.
        action_desc: |
          1. IAM 사용자에 하드웨어 MFA를 등록하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_user_mfa_enabled_console_access
  # ACTIONPLAN: 콘솔 접속시 MFA 미설정 사용자 탐지 시 Slack 알림 발송
  - name: iam_user_mfa_enabled_console_access
    description: Detect IAM users with console access and no active MFA and send Slack alert.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: credential
        key: mfa_active
        op: equal
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_user_mfa_enabled_console_access ***
          • 콘솔 접속이 가능하나 MFA가 미설정된 사용자가 탐지되었습니다.
        action_desc: |
          1. 모든 콘솔 사용자에 대해 MFA 등록을 필수화하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_user_no_setup_initial_access_key
  # ACTIONPLAN: 콘솔 계정이 최초 Access Key를 계속 보유 중인 경우 Slack 알림 발송
  - name: iam_user_no_setup_initial_access_key
    description: Detect console users retaining initial access keys and send Slack alert.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)"  
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: AccessKeyMetadata
        op: gt
        value: 0
        value_type: size
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_user_no_setup_initial_access_key ***
          • 콘솔 사용자 계정에 초기 Access Key가 그대로 남아 있습니다.
        action_desc: |
          1. 불필요한 Access Key는 반드시 삭제하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_user_two_active_access_key
  # ACTIONPLAN: 2개 이상의 활성 Access Key를 가진 사용자 탐지 시 Slack 알림 발송
  - name: iam_user_two_active_access_key
    description: Detect IAM users with two or more active access keys and send Slack alert.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)"   
      role: ${LAMBDA_ROLE}
    filters:
      - type: credential
        key: access_keys.active
        op: gt
        value: 1
        value_type: size
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_user_two_active_access_key ***
          • 2개 이상의 활성 Access Key를 가진 IAM 사용자가 탐지되었습니다.
        action_desc: |
          1. 한 사용자가 2개 이상 Access Key를 가질 필요가 있는지 점검 후 불필요한 키는 비활성화/삭제하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_user_console_access_unused
  # ACTIONPLAN: 콘솔 전용(Access Key 미사용) 사용자 탐지 시 Slack 알림 발송
  - name: iam_user_console_access_unused
    description: Detect console-only IAM users (no access key usage) and send Slack alert.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)" 
      role: ${LAMBDA_ROLE}
    filters:
      - type: credential
        key: access_keys.active
        op: eq
        value: null
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_user_console_access_unused ***
          • 콘솔 전용(Access Key 미사용) IAM 사용자가 탐지되었습니다.
        action_desc: |
          1. 콘솔만 사용하는 계정인지 확인 후, 불필요시 비활성화 또는 삭제하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_user_with_temporary_credentials
  # ACTIONPLAN: STS 임시 자격증명(Temporary Credentials) 사용 사용자 탐지 시 Slack 알림 발송
  - name: iam_user_with_temporary_credentials
    description: Detect IAM users with active temporary (STS) credentials and send Slack alert.
    resource: aws.iam-user
    mode:
      type: periodic
      schedule: "rate(7 days)" 
      role: ${LAMBDA_ROLE}
    filters:
      - type: credential
        key: access_keys.active
        op: contains
        value: "STS"
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_user_with_temporary_credentials ***
          • STS 임시 자격증명(Temporary Credentials)이 활성화된 사용자가 탐지되었습니다.
        action_desc: |
          1. 해당 사용자의 임시 자격증명이 정상 업무 목적인지 반드시 확인하세요.
          2. 불필요시 즉시 취소(회수) 또는 계정 권한을 조정하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}
