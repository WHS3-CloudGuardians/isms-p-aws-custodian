policies:

  # CHECKID: accessanalyzer_enabled
  # ACTIONPLAN: Access Analyzer가 비활성화 상태일 경우 Lambda로 자동 활성화 조치 후, Slack 알림을 전송하고 담당자가 활성화 상태를 직접 확인하도록 안내 (자동조치 + 알림)
  - name: accessanalyzer_enabled
    description: |
      If AWS Access Analyzer is not active, send a Slack notification
    resource: aws.account
    filters:
      - type: access-analyzer
        key: status
        op: ne
        value: ACTIVE
    actions:
      # Cloud Custodian으로 조치가 어려워 우회 필요. 람다를 배포하고 주석을 풀어 활성화하세요.
      # - type: invoke-lambda
      #   function: arn:aws:lambda:${AWS_REGION}:${ACCOUNT_ID}:function:accessanalyzer_enabled
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: accessanalyzer_enabled ***
          • AWS Access Analyzer가 활성화되어 있지 않습니다.
        action_desc: |
          1. Access Analyzer를 활성화 하세요.
          2. 외부 접근 통제 및 ISMS-P(2.3.6) 준수를 위해 항상 활성화 상태를 주기적으로 점검/유지해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: account_maintain_current_contact_details
  # ACTIONPLAN: AWS 계정의 연락처 정보가 최신이 아닌 경우, 즉시 업데이트하고 유효성을 정기적으로 확인합니다.
  #- name: account_maintain_current_contact_details
  #  description: |
  #    Verify that the root email of the AWS account is included in the predefined, up-to-date contact list. If it does not match, notify the security team and record the validation timestamp in the LastContactValidation tag
  #  resource: aws.org-account
  #  filters:
  #    - type: value
  #      key: Email
  #      op: not-in
  #      value: "example@example.com"   # ← 실제 허용 이메일 리스트로 교체 필요
  #  actions:
  #    - type: notify
  #      slack_template: slack_default
  #      slack_msg_color: warning
  #      violation_desc: |
  #        *** CHECKID: account_maintain_current_contact_details ***
  #        • AWS 계정의 연락처 정보가 최신이 아닙니다.
  #      action_desc: |
  #        1. AWS 계정의 연락처 정보를 즉시 업데이트하고 유효성을 정기적으로 확인하세요.
  #      to:
  #        - ${WARNING_SLACK}
  #      transport:
  #        type: sqs
  #        queue: ${QUEUE_URL}

  # CHECKID: account_maintain_different_contact_details_to_security_billing_and_operations
  # ACTIONPLAN: 보안, 결제, 운영 담당 팀의 연락처 세부 정보가 동일하다면, 각 역할에 맞는 개별 연락처를 등록합니다.
  #- name: account_maintain_different_contact_details_to #이름 길이가 64자를 넘어서 줄임
  #  description: |
  #    If the contact information for the Security, Billing, and Operations teams is identical, detect it using the policy below and immediately notify the Security team
  #  resource: aws.org-account
  #  filters:
  #    - or:
  #        - type: value
  #          key: ContactInformation.SecurityContact
  #          op: eq
  #          value: "security1@example.com"
  #        - type: value
  #          key: ContactInformation.BillingContact
  #          op: eq
  #          value: "security2@example.com"
  #        - type: value
  #          key: ContactInformation.OperationsContact
  #          op: eq
  #          value: "security3@example.com"
  #  actions:
  #    - type: notify
  #      slack_template: slack_default
  #      slack_msg_color: warning
  #      violation_desc: |
  #        *** CHECKID: account_maintain_different_contact_details_to_security_billing_and_operations ***
  #        • 보안, 결제, 운영 담당 팀의 연락처 세부 정보가 동일합니다.
  #      action_desc: |
  #        1. 보안, 결제, 운영 담당 팀에 맞는 개별 연락처를 등록하세요.
  #      to:
  #        - ${WARNING_SLACK}
  #      transport:
  #        type: sqs
  #        queue: ${QUEUE_URL}

  # CHECKID: account_security_contact_information_is_registered
  # ACTIONPLAN: AWS 계정에 보안 연락처 정보가 등록되지 않은 경우, 정확한 정보를 등록하여 비상시 중요한 보안 알림을 받도록 합니다.
  - name: account_security_contact_information_is_registered
    description: |
      Detect accounts where the `ContactInformation.SecurityContact` field is empty or missing, notify the Security team for each violating account, and request immediate registration
    resource: aws.org-account
    filters:
      - type: value
        key: ContactInformation.SecurityContact
        op: eq
        value: ""
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: account_security_contact_information_is_registered ***
          • AWS 계정에 보안 연락처 정보가 등록되지 않았습니다.
        action_desc: |
          1. AWS 계정에 정확한 보안 연락처 정보를 등록하여 비상시 중요한 보안 알림을 받도록 하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: account_security_questions_are_registered_in_the_aws_account
  # ACTIONPLAN: AWS 계정에 보안 질문이 설정되지 않았다면, 질문을 설정하고 답변을 안전하게 보관하여 계정 복구 시 활용합니다.
  - name: account_security_questions_are_registered_in_account
    description: |
      Detect accounts where the `ContactInformation.SecurityQuestion` field is empty or missing, notify the Security team for each violating account, and request immediate configuration of the security question
    resource: aws.org-account
    filters:
      - type: value
        key: ContactInformation.SecurityQuestion
        op: eq
        value: ""
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: account_security_questions_are_registered_in_the_aws_account ***
          • AWS 계정에 보안 질문이 설정되지 않았습니다.
        action_desc: |
          AWS 계정에 보안 질문을 설정하고 답변을 안전하게 보관하여 계정 복구 시 활용하도록 설정하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: apigateway_restapi_client_certificate_enabled
  # ACTIONPLAN: 클라이언트 인증서가 적용되지 않은 API Gateway REST API 탐지 시, 담당자에게 알림 전송 및 Client Certificate Required 활성화 권고
  - name: apigateway_restapi_client_certificate_enabled
    resource: aws.rest-api
    description: |
      Ensure API Gateway REST APIs have client certificate required.
    filters:
      - type: value
        key: RequireClientCertificate
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: apigateway_restapi_client_certificate_enabled ***
          • API Gateway REST API에서 클라이언트 인증서 미적용이 감지되었습니다.
        action_desc: |
          1. 민감 API 또는 인증이 필요한 엔드포인트는 반드시 'Client Certificate Required'를 활성화해 주세요.
          2. 신규 배포/템플릿/IaC에서도 인증서 누락이 반복되지 않도록 주기적으로 점검해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: apigateway_restapi_logging_enabled
  # ACTIONPLAN: 접근 로그 미설정 REST API 탐지 시 담당자에게 알림, 로그 활성화 및 CloudWatch Logs 연동 권고
  - name: apigateway_restapi_logging_enabled
    resource: aws.rest-api
    description: |
      Ensure API Gateway REST APIs have access logging enabled.
    filters:
      - type: value
        key: AccessLogSettings.DestinationArn
        value: null
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: apigateway_restapi_logging_enabled ***
          • API Gateway REST API에서 접근 로그 미설정이 감지되었습니다.
        action_desc: |
          1. CloudWatch Logs 등 로그 그룹을 지정하여 접근 로그를 활성화해 주세요.
          2. 감사/운영 요구 사항에 맞게 로그 정책을 주기적으로 점검해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: apigateway_restapi_public
  # ACTIONPLAN: 퍼블릭/크로스계정 접근 허용 REST API 탐지 시 담당자 알림, 리소스 정책 제한 권고
  - name: apigateway_restapi_public
    resource: aws.rest-api
    description: |
      Detect API Gateway REST APIs that are publicly accessible by resource policy.
    filters:
      - type: cross-account
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: apigateway_restapi_public ***
          • API Gateway REST API가 퍼블릭/외부에 노출된 상태가 감지되었습니다.
        action_desc: |
          1. 리소스 정책을 반드시 검토하여 불필요한 퍼블릭/크로스계정 접근을 차단해 주세요.
          2. 신규 배포, 운영 중에도 외부 노출이 재발되지 않도록 주기적으로 점검해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: athena_workgroup_encryption
  #ACTIONPLAN: Athena 워크그룹이 쿼리 결과 암호화를 사용하지 않는 경우, 활성화하여 민감한 데이터가 저장 시 보호되도록 합니다.
  - name: athena_workgroup_encryption
    resource: aws.athena-work-group
    description: |
      The query result encryption settings of Athena Workgroups identify disabled workgroups and enable SSE_S3 encryption
    filters:
      - type: value
        key: Configuration.ResultConfiguration.EncryptionConfiguration.EncryptionOption
        op: ne
        value: SSE_S3
    actions:
      - type: update
        config:
          EnforceWorkGroupConfiguration: true
        # s3 버킷 생성 후 주석을 풀고 활성화 하세요.
        #  ResultConfigurationUpdates:
        #    OutputLocation: "s3://noncompl-athena-no-encryption/results/"
        #    EncryptionConfiguration:
        #      EncryptionOption: SSE_S3
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: athena_workgroup_encryption ***
           • Athena 워크그룹이 쿼리 결과 암호화를 사용하지 않고 있습니다.
        action_desc: |
          1. Athena 워크그룹이 쿼리 결과 암호화를 활성화하여 민감한 데이터가 저장 시 보호되도록 합니다.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: athena_workgroup_enforce_configuration
  #ACTIONPLAN: Athena 워크그룹이 구성 적용 옵션을 사용하지 않는 경우, 활성화하여 모든 사용자가 워크그룹 설정을 따르도록 강제합니다.
  - name: athena_workgroup_enforce_configuration
    resource: aws.athena-work-group
    description: |
      enforce_work_group_configuration activates previously disabled workgroups
    filters:
      - type: value
        key: Configuration.EnforceWorkGroupConfiguration
        op: eq
        value: false
    actions:
      - type: update
        config:
          EnforceWorkGroupConfiguration: true
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: athena_workgroup_enforce_configuration ***
          • Athena 워크그룹이 구성 적용 옵션을 사용하지 않습니다.
        action_desc: |
          1. Athena Workgroup이 구성 적용 옵션을 활성화하여 모든 사용자가 Workgroup 설정을 따르도록 강제합니다.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}
        
  # CHECKID: autoscaling_group_multiple_az
  # ACTIONPLAN: Auto Scaling Group이 단일 AZ에만 구성된 경우, 여러 가용 영역에 걸쳐 인스턴스를 분산하도록 알림
  - name: autoscaling_group_multiple_az
    description: Ensure Auto Scaling Groups span multiple Availability Zones
    resource: aws.asg
    filters:
      - type: value
        key: AvailabilityZones
        value_type: size
        op: eq
        value: 1
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: autoscaling_group_multiple_az ***
          • Auto Scaling Group이 단일 가용 영역에만 구성된 상태가 **탐지**되었습니다.
        action_desc: |
          1. 서비스 고가용성 확보를 위해 ASG를 2개 이상의 AZ에 분산 배포해 주세요.
          2. 배포 템플릿/IaC에서도 AZ 분산이 누락되지 않도록 점검해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: backup_plans_exist
  # ACTIONPLAN: AWS Backup 계획 미존재 시 Lambda 자동 점검 및 Slack 알림
  - name: backup_plans_exist
    resource: aws.backup-plan
    description: "Alert: No Backup Plan"
    filters:
      - type: value
        value_type: resource_count
        op: eq
        value: 0
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: backup_plans_exist ***
          • AWS Backup 계획이 존재하지 않습니다.
        action_desc: |
          1. 백업 플랜을 최소 한 개 이상 생성하세요.
          2. 미설정 리소스가 있다면 백업 플랜을 추가 적용하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # # CHECKID: backup_reportplans_exist
  # # ACTIONPLAN: AWS Backup 리포트 플랜 미존재 시 Lambda 자동 점검 및 Slack 알림
  # lambda 폴더에 있는 람다를 배포해 조치 가능
  #- name: backup_reportplans_exist
  #  resource: aws.account
  #  description: "Alert: No Backup Report Plan"
  #  actions:
  #    # 람다 함수를 배포하고 주석을 풀어 활성화하세요.
  #    # - type: invoke-lambda
  #    #   function: arn:aws:lambda:ap-northeast-2:${ACCOUNT_ID}:function:custodian-backup-reportplans-exist-2
  #    - type: notify
  #      slack_template: slack_default
  #      slack_msg_color: warning
  #      violation_desc: |
  #        *** CHECKID: backup_reportplans_exist ***
  #        • AWS Backup Report Plan이 미존재하여 백업 실행/결과 보고가 누락될 수 있습니다.
  #      action_desc: |
  #        1. Lambda를 호출하여 Report Plan 존재여부를 자동 점검하도록 합니다.
  #        2. 미설정 리소스가 있다면 Report Plan을 추가 적용하세요.
  #      to:
  #        - ${WARNING_SLACK}
  #      transport:
  #        type: sqs
  #        queue: ${QUEUE_URL}

  # CHECKID: backup_vaults_exist
  # ACTIONPLAN: Vault 미연결 Backup Plan 탐지 시 Slack 알림, 수동 조치 유도
  - name: bbackup_vaults_exist
    resource: aws.backup-plan
    description: "Alert: Backup Plan Without Vault"
    filters:
      - type: value
        key: Rules[].TargetBackupVaultName
        op: eq
        value: ""
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: backup_vaults_exist ***
          • Vault가 연결되지 않은 Backup Plan이 탐지되었습니다.
        action_desc: |
          1. Backup Plan에 반드시 Backup Vault를 연결하여 백업 데이터 저장소를 확보하세요.
          2. Vault 연결 변경 후 백업 정책이 정상적으로 적용되는지 주기적으로 점검하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: backup_vaults_encrypted
  # ACTIONPLAN: KMS 암호화 미설정 Backup Vault 탐지 시 Slack 알림, 수동 암호화 적용 유도
  - name: backup-vaults-encrypted
    resource: aws.backup-vault
    description: "Alert: Backup Vault Without Encryption"
    filters:
      - or:
        - type: value
          key: EncryptionKeyArn
          op: eq
          value: ""
        - type: value
          key: EncryptionKeyArn
          op: contains
          value: "alias/aws/backup"
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: backup_vaults_encrypted ***
          • 기본 암호화(또는 미설정) Backup Vault가 탐지되었습니다.
        action_desc: |
          1. Backup Vault에 반드시 고객 관리형 KMS 암호화 키를 적용해 백업 데이터의 보안성을 강화하세요.
          2. 암호화 설정 변경 후 정상 적용 및 권한 정책도 반드시 점검하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudfront_distributions_field_level_encryption_enabled
  # ACTIONPLAN: CloudFront 필드 수준 암호화 설정 누락 시 보완
  - name: cloudfront_distributions_field_level_encrypt_enabled
    description: CloudFront distributions field level encryption disabled alert
    resource: aws.distribution
    filters:
      - type: value
        key: DefaultCacheBehavior.FieldLevelEncryptionId
        value: ""
        op: eq
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudfront_distributions_field_level_encryption_enabled ***
          • CloudFront 배포에 필드 수준 암호화 누락이 감지되었습니다.
        action_desc: |
          1. 해당 배포에 필드 수준 암호화(Field Level Encryption) 설정을 적용해 주세요.
          2. 향후 신규 배포/변경 시에도 암호화가 누락되지 않도록 배포 스크립트 및 운영 프로세스를 점검해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudfront_distributions_geo_restrictions_enabled
  # ACTIONPLAN: CloudFront 배포에 대해 지리적 제한이 활성화되지 않은 경우 탐지하고 태깅, 경고
  - name: cloudfront_distributions_geo_restrictions_enabled
    description: cloudfront distributions geo restrictions disabled alert
    resource: aws.distribution
    filters:
      - type: value
        key: Restrictions.GeoRestriction.RestrictionType
        value: none
        op: eq
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: cloudfront_distributions_geo_restrictions_enabled ***
          • CloudFront 배포에 Geo Restriction 누락이 감지되었습니다.
        action_desc: |
          1. 해당 배포에 지리적 제한(Geo Restriction)을 필요에 따라 활성화해 주세요.
          2. 서비스 목적/보안정책에 맞게 불필요한 국가/지역 차단을 검토해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudfront_distributions_https_enabled
  # ACTIONPLAN: CloudFront HTTPS 설정 누락 시 정책 위반 알림
  # ACTIONPLAN: CloudFront 배포에 HTTPS가 설정되지 않은 경우 SSL 인증서 강제 적용
  # ACTIONPLAN: CloudFront 배포에 대해 HTTPS만 허용하도록 'Viewer Protocol Policy'를 Redirect to HTTPS로 설정
  - name: cloudfront_distributions_https_enabled
    description: cloudfront distributions https disabled alert
    resource: aws.distribution
    filters:
      - type: value
        key: DefaultCacheBehavior.ViewerProtocolPolicy
        value: allow-all
        op: eq
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudfront_distributions_https_enabled ***
          • CloudFront 배포에 HTTPS 미설정이 감지되었습니다.
        action_desc: |
          1. Viewer Protocol Policy를 'Redirect to HTTPS'로 변경하고, SSL 인증서를 적용해 주세요.
          2. 신규 배포/변경 시에도 항상 HTTPS만 허용되도록 점검해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudfront_distributions_logging_enabled
  # ACTIONPLAN: CloudFront 배포에서 로그 설정이 꺼져 있는 경우, 활성화 설정 적용
  - name: cloudfront_distributions_logging_enabled
    description: cloudfront distributions logging disabled alert
    resource: aws.distribution
    filters:
      - type: distribution-config
        key: Logging.Enabled
        value: false
        op: eq
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc:  |
          *** CHECKID: cloudfront_distributions_logging_enabled ***
          • CloudFront 배포에 로그 설정 누락이 감지되었습니다.
        action_desc: |
          1. S3 버킷을 지정해 CloudFront 로그 설정을 활성화해 주세요.
          2. 장기 운영/감사 대비 정기적으로 로그 수집 정책을 점검해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}
        # 특정 이름의 버킷을 로깅에 설정 가능

# CHECKID: cloudfront_distributions_using_deprecated_ssl_protocols
# ACTIONPLAN: CloudFront에서 구식 SSL 프로토콜 사용 시 제거 유도
# ACTIONPLAN: 지원 종료된 SSL/TLS 프로토콜 사용 중지 및 최신 버전 설정
# ACTIONPLAN: CloudFront에서 SSL 프로토콜을 TLS 1.2 이상으로 강제 설정
# ACTIONPLAN: CloudFront 배포에서 지원 중단된 SSL 프로토콜을 제거하고 TLS 1.2 이상으로 설정
  - name: cloudfront_distributions_using_deprecated_ssl_protocol
    description: cloudfront distributions using legacy ssl protocols alert
    resource: aws.distribution
    filters:
      - type: value
        key: ViewerCertificate.MinimumProtocolVersion
        op: in
        value: ["SSLv3", "TLSv1", "TLSv1_2016", "TLSv1.1_2016"]
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: cloudfront_distributions_using_deprecated_ssl_protocols ***
          • CloudFront 배포에 구식 SSL 프로토콜 사용이 감지되었습니다.
        action_desc: |
          1. ViewerCertificate의 MinimumProtocolVersion을 TLS 1.2 이상으로 직접 변경해 주세요.
          2. 배포 스크립트/템플릿에서도 최신 버전을 기본값으로 적용해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudfront_distributions_using_waf
  # ACTIONPLAN: CloudFront 배포에 AWS WAF를 연결하여 웹 공격 차단 정책 적용
  # ACTIONPLAN: WAF가 연결되지 않은 CloudFront 배포에 WebACL 자동 적용
  - name: cloudfront_distributions_using_waf
    description: cloudfront distributions using none waf alert
    resource: aws.distribution
    filters:
      - or:
          - type: value
            key: WebACLId
            value: null
          - type: value
            key: WebACLId
            value: ""
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: cloudfront_distributions_using_waf ***
          • CloudFront 배포에 WAF 미적용이 감지되었습니다.
        action_desc: |
          1. CloudFront 배포에 AWS WAF(Web ACL)를 직접 연결해 주세요.
          2. 신규 배포/운영 시에도 반드시 WAF가 적용되도록 관리해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudtrail_bucket_requires_mfa_delete
  # ACTIONPLAN: MFA Delete 비활성 S3 버킷 탐지 시 Slack 알림, 수동 조치 유도
  - name: cloudtrail_bucket_requires_mfa_delete
    description: Detect S3 buckets with MFA Delete disabled and send alerts to Slack
    resource: aws.s3
    filters:
      - type: value
        key: Versioning.MFADelete
        value: "Disabled"
      - type: value
        key: Versioning.Status
        value: "Enabled"
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_bucket_requires_mfa_delete ***
          • MFA Delete가 비활성화된 S3 버킷이 탐지되었습니다.
        action_desc: |
          1. 해당 버킷이 CloudTrail 로그용이라면 반드시 객체 잠금 또는 보존 정책을 설정하세요.
          2. MFA Delete는 버킷 생성 시에만 설정할 수 있으니 신규 버킷 배포 시 사전 적용을 검토하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudtrail_cloudwatch_logging_enabled
  # ACTIONPLAN: CloudTrail 트레일의 CloudWatch 연동·로깅 미설정 시 자동 활성화 후 알림
  # 여러 정책을 동시에 배포하면 Lambda 함수 충돌(ResourceConflictException)이 발생할 수 있으니, 에러 시 1~2분 후 해당 정책만 재실행하세요.
  - name: cloudtrail_cloudwatch_logging_enabled
    description: If a CloudTrail trail is not integrated with CloudWatch Logs or logging is disabled, automatically configure the integration and send a Slack notification.
    resource: aws.cloudtrail
    filters:
      - type: value
        key: CloudWatchLogsLogGroupArn
        value: absent
      - type: status
        key: IsLogging
        value: false
    actions:
    # 원하는 경우 Arn을 채워넣고 활성화 하세요.
    #  - type: update-trail
    #    attributes:
    #      CloudWatchLogsLogGroupArn: arn:aws:logs:
    #      CloudWatchLogsRoleArn: arn:aws:iam::
      - type: set-logging
        enabled: true
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: cloudtrail_cloudwatch_logging_enabled ***
          • CloudTrail 트레일이 CloudWatch Logs와 연동되지 않고 로깅이 비활성화된 상태로 탐지되어, 로깅을 자동으로 활성화하였습니다.
        action_desc: |
          1. CloudWatch와 연동하고 CloudWatch Logs 및 로깅 상태가 정상적으로 활성화되었는지 점검하세요.
          2. 연동 해제/오류 발생 시 보안팀에 즉시 공유하고, 연동 설정을 정기적으로 재점검하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}


  # CHECKID: cloudtrail_insights_exist
  # ACTIONPLAN: CloudTrail Insights 미설정 시 Slack 알림, 수동 활성화 유도
  - name: cloudtrail_insights_exist
    description: Detect and notify when CloudTrail Insights is disabled
    resource: aws.cloudtrail
    filters:
      - type: value
        key: HasInsightSelectors
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_insights_exist ***
          • CloudTrail Insights 기능이 비활성화된 상태로 탐지되었습니다.
        action_desc: |
          1. CloudTrail Insights를 활성화하여 이상 API 호출 패턴 탐지 기능을 추가하세요.
          2. Trail 생성/변경 시 Insights 옵션을 반드시 점검하고 활성화 상태를 주기적으로 검토하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudtrail_kms_encryption_enabled
  # ACTIONPLAN: CloudTrail 로그 KMS 미암호화 탐지 시 Slack 알림, 수동 설정 유도
  - name: cloudtrail_kms_encryption_enabled
    description: Detect CloudTrails that are not encrypted with KMS
    resource: aws.cloudtrail
    filters:
      - type: value
        key: KmsKeyId
        value: absent
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_kms_encryption_enabled ***
          • CloudTrail 로그가 KMS 키로 암호화되지 않은 상태로 탐지되었습니다.
        action_desc: |
          1. CloudTrail 설정에서 반드시 KMS 암호화를 활성화하고 적절한 키를 지정하세요.
          2. 설정 변경 시 로깅 중단 위험, 암호화 키 관리·접근권한도 함께 점검하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudtrail_log_file_validation_enabled
  # ACTIONPLAN: CloudTrail 로그 무결성 검증 미설정 시 Slack 알림, 수동 점검 유도
  - name: cloudtrail_log_file_validation_enabled
    description: Send Slack notification when CloudTrail log file validation is disabled
    resource: aws.cloudtrail
    filters:
      - type: value
        key: HasLogFileValidationEnabled
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_log_file_validation_enabled ***
          • CloudTrail 로그 무결성 검증(Log File Validation) 기능이 비활성화된 상태로 탐지되었습니다.
        action_desc: |
          1. CloudTrail 설정에서 로그 무결성 검증을 활성화하세요.
          2. 설정 변경 시 로깅 중단 가능성 등 영향도를 사전 검토하고, 정책 반영 후 정상 동작 여부를 주기적으로 점검하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudtrail_logs_s3_bucket_access_logging_enabled
  # ACTIONPLAN: S3 Access Logging 비활성 버킷 탐지 시 Slack 알림, 수동 설정 유도
  - name: cloudtrail_logs_s3_bucket_access_logging_enabled
    description: Notify when S3 bucket access logging is disabled
    resource: aws.s3
    filters:
      - type: value
        key: Logging.Enabled
        value: false
      - not:
          - type: value
            key: Name
            value: cloudtrail-access-log-bucket-${ACCOUNT_ID}
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_logs_s3_bucket_access_logging_enabled ***
          • S3 버킷에 Access Logging이 비활성화된 상태로 탐지되었습니다.
        action_desc: |
          1. S3 콘솔에서 해당 버킷의 Access Logging을 활성화하여 접근 이력을 추적하세요.
          2. 로그 저장 버킷의 접근권한과 보존 기간 정책도 주기적으로 점검하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudtrail_logs_s3_bucket_is_not_publicly_accessible
  # ACTIONPLAN: CloudTrail 로그 저장 버킷 퍼블릭 노출 탐지 시 Slack 알림, 수동 차단 유도
  - name: cloudtrail_logs_s3_bucket_is_not_publicly_accessible
    description: Send Slack notification when CloudTrail log bucket is publicly accessible
    resource: aws.s3
    filters:
      - type: value
        key: "tag:aws:cloudtrail:trail"
        value: present
      - type: global-grants
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_logs_s3_bucket_is_not_publicly_accessible ***
          • CloudTrail 로그 저장 S3 버킷이 퍼블릭으로 노출된 상태로 탐지되었습니다.
        action_desc: |
          1. S3 버킷 정책을 수정해 퍼블릭 접근을 차단하고, 로그 기밀성을 반드시 확보하세요.
          2. 정책 변경 이후에도 재노출 여부를 주기적으로 점검하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudtrail_multi_region_or_no_management_events
  # ACTIONPLAN: CloudTrail 다중 리전/관리 이벤트 미활성 탐지 시 Slack 알림, 수동 활성화 유도
  - name: cloudtrail_multi_region_or_no_management_events
    description: Send Slack notification when CloudTrail is not logging in all regions or not capturing management events
    resource: aws.cloudtrail
    filters:
      - or:
          - type: value
            key: IsMultiRegionTrail
            value: false
          - type: value
            key: HasManagementEvents
            value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_multi_region_or_no_management_events ***
          • CloudTrail이 다중 리전 로깅 또는 관리 이벤트 로깅을 비활성화한 상태로 탐지되었습니다.
        action_desc: |
          1. 모든 리전에 대해 로깅을 활성화하고, 관리 이벤트도 반드시 포함되도록 설정하세요.
          2. 설정 이후에도 감사 대상 Trail이 전체 리전에 적용되어 있는지 정기적으로 확인하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudtrail_multi_region_enabled
  # ACTIONPLAN: CloudTrail 단일 리전 트레일 탐지 시 Slack 알림, 다중 리전 설정 유도
  - name: cloudtrail_multi_region_enabled
    description: Send Slack notification when CloudTrail is not enabled for multi-region logging
    resource: aws.cloudtrail
    filters:
      - type: value
        key: IsMultiRegionTrail
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: cloudtrail_multi_region_enabled ***
          • CloudTrail이 단일 리전 트레일로 설정된 상태로 탐지되었습니다.
        action_desc: |
          1. 모든 리전에 대한 가시성 확보를 위해 CloudTrail의 다중 리전 로깅을 반드시 활성화하세요.
          2. 설정 후 전체 계정에 적용되었는지, 로그 누락/비용 이슈 없는지 정기적으로 점검하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}


  # CHECKID: cloudtrail_s3_dataevents_read_enabled
  # ACTIONPLAN: S3 객체 읽기 이벤트 로깅 미설정 트레일 탐지 시 Slack 알림, 수동 활성화 유도
  - name: cloudtrail_s3_dataevents_read_enabled
    description: Detect CloudTrail trails without S3 read data event logging
    resource: aws.cloudtrail
    filters:
      - type: event-selectors
        key: 'DataResources[?Type==`AWS::S3::Object`]|[?ReadWriteType==`ReadOnly`]'
        op: equal
        value: null
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_s3_dataevents_read_enabled ***
          • CloudTrail에서 S3 객체 수준의 읽기 이벤트 로깅이 비활성화된 상태로 탐지되었습니다.
        action_desc: |
          1. CloudTrail 설정에서 S3 객체 수준(Read) 데이터 이벤트 로깅을 활성화하세요.
          2. 로그 비용 및 비즈니스 요구사항에 따라 적용 범위도 주기적으로 재점검하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudtrail_s3_dataevents_write_enabled
  # ACTIONPLAN: S3 객체 쓰기 이벤트 로깅 미설정 트레일 탐지 시 Slack 알림, 수동 활성화 유도
  - name: cloudtrail_s3_dataevents_write_enabled
    description: CloudTrail is not logging S3 object-level write events, making it impossible to track changes like object creation or deletion
    resource: aws.cloudtrail
    filters:
      - type: value
        key: EventSelectors[].DataResources[].Type
        op: not-in
        value: s3
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_s3_dataevents_write_enabled ***
          • CloudTrail에서 S3 객체 수준의 쓰기 이벤트 로깅이 비활성화된 상태로 탐지되었습니다.
        action_desc: |
          1. CloudTrail 설정에서 S3 객체 수준(Write) 데이터 이벤트 로깅을 활성화하세요.
          2. 로그 비용/운영 정책 변경 시 비즈니스 요구에 따라 범위를 주기적으로 재점검하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: config_recorder_all_regions_enabled
  #ACTIONPLAN: AWS Config가 모든 리전에서 리소스를 기록하도록 활성화되어 있는지 확인 (글로벌 보안 모니터링 목적)
  #자동 조치를 위해서는 수동으로 lambda 설정이 필요
  - name: config-recorder-all-regions-enabled
    description: |
      Check whether AWS Config is enabled to record resources in all regions
    resource: aws.config-recorder
    filters:
      - or:
        - type: value
          key: status.recording
          value: false
        - type: value
          key: recordingGroup.includeGlobalResourceTypes
          value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: config_recorder_all_regions_enabled ***
          • Config recorder가 모든 리전을 기록하지 않습니다.
        action_desc: |
          1. AWS Config가 모든 리전에서 리소스를 기록하도록 활성화하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: dynamodb_tables_kms_cmk_encryption_enabled
  # ACTIONPLAN: AWS 관리형 키(alias/aws/dynamodb) 사용시 Slack 알림 전송, 담당자가 고객 관리형 KMS 키(CMK)로 직접 암호화 방식 변경 안내(알림만)
  - name: dynamodb_tables_kms_cmk_encryption_enabled
    description: |
      Ensure DynamoDB tables use customer managed KMS keys (CMK) for encryption at rest.
    resource: aws.dynamodb-table
    filters:
      - type: kms-key
        key: AliasName
        value: alias/aws/dynamodb
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: dynamodb_tables_kms_cmk_encryption_enabled ***
          • DynamoDB 테이블이 고객 관리형 KMS 키(CMK)로 암호화되어 있지 않습니다.
        action_desc: |
          1. DynamoDB 테이블의 암호화 방식이 '고객 관리형 KMS 키(CMK)'로 설정되었는지 확인하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: dynamodb_tables_pitr_enabled
  # ACTIONPLAN: PITR(Point-In-Time Recovery) 비활성 테이블 Slack 알림, 담당자에게 PITR 직접 활성화 안내(알림만)
  - name: dynamodb_tables_pitr_enabled
    description: |
      Ensure DynamoDB tables have Point-In-Time Recovery (PITR) enabled.
    resource: aws.dynamodb-table
    filters:
      - type: value
        key: PointInTimeRecoveryDescription.PointInTimeRecoveryStatus
        value: DISABLED
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: dynamodb_tables_pitr_enabled ***
          • DynamoDB 테이블의 지점 시점 복구(Point-In-Time Recovery, PITR)가 비활성화되어 있습니다.
        action_desc: |
          1. 테이블의 PITR(Point-In-Time Recovery) 기능을 활성화하여 데이터 복구 가능성을 확보하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_ebs_default_encryption
  # ACTIONPLAN: EBS 디폴트 암호화 설정 미적용 시 알림만 전송
  - name: ec2_ebs_default_encryption
    description: Automatic activation and notification transmission when default EBS encryption is turned off
    resource: aws.account
    filters:
      - type: default-ebs-encryption
        state: false
    actions:
    # 디폴트 암호화 자동 조치를 원하면 주석 풀고 사용
    #  - type: set-ebs-encryption
    #    state: true
    #    key: 암호화 키 작성
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_ebs_default_encryption ***
          • EC2 기본 EBS 암호화 비활성화가 감지되었습니다.
        action_desc: |
          1. 기본 EBS 암호화 설정을 활성화 하세요.
          2. AWS Console(EC2->설정)에서 적용 여부를 확인해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_ebs_volume_encryption
  # ACTIONPLAN: 비암호화된 EBS 볼륨 감지 시 알림 전송 및 스냅샷 생성
  - name: ec2_ebs_volume_encryption
    description: Send notifications and create snapshots when unencrypted EBS volumes are detected
    resource: aws.ebs
    filters:
      - Encrypted: false
    actions:
      - type: snapshot
        copy-volume-tags: true
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_ebs_volume_encryption ***
          • 비암호화된 EBS 볼륨이 감지되어 스냅샷이 생성되었습니다.
        action_desc: |
          1. 스냅샷이 정상적으로 생성되었는지 확인해 주세요.
          2. 스냅샷을 복사하면서 암호화하여 새로운 암호화 된 볼륨을 생성하세요.(스냅샷이 오래된 경우 새로운 스냅샷을 생성하여 진행)
          3. 해당 인스턴스를 중지하고 기존에 연결된 볼륨 해지 및 새로 생성한 암호화된 볼륨을 연결하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_ebs_snapshots_encrypted
  # ACTIONPLAN: 비암호화된 스냅샷 감지 시 알림만 전송
  - name: ec2_ebs_snapshots_encrypted
    description: Send notification when unencrypted EBS snapshot is detected
    resource: aws.ebs-snapshot
    filters:
      - Encrypted: false
    actions:
    # 'copy'해서 암호화 된 스냅샷 생성을 원하면 주석 풀고 사용. 기존 스냅샷 삭제까지 원하면 'delete'도 활성화
    #  - type: copy
    #    target_region: ap-northeast-2
    #    encrypted: true
    #    target_key: 암호화 키 작성 (e.g. alias/aws/ebs)
    #  - type: delete
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_ebs_snapshots_encrypted ***
          • 비암호화 EBS 스냅샷이 감지되었습니다.
        action_desc: |
          1. 스냅샷을 복사하여 암호화 된 스냅샷을 생성해주세요.
          2. 기존 암호화 되지 않은 스냅샷은 삭제해주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_ebs_volume_snapshots_exists
  # ACTIONPLAN: 스냅샷 없는 EC2 인스턴스의 볼륨 스냅샷 생성 및 태그 복사
  - name: ec2_ebs_volume_snapshots_exists
    description: Creating volume snapshots and copying tags for EC2 instances without snapshots
    resource: aws.ebs
    filters:
      - type: snapshots
        count: 0
      - type: value
        key: State
        op: eq
        value: in-use
    actions:
      - type: snapshot
        copy-volume-tags: true
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: ec2_ebs_volume_snapshots_exists ***
          • 스냅샷이 존재하지 않는 EBS 볼륨이 감지되어 자동으로 스냅샷을 생성하였습니다.
        action_desc: |
          1. 스냅샷이 정상적으로 생성되었는지 확인해 주세요.
          2. 복사된 태그가 정상적으로 적용됐는지 확인해 주세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_port_cassandra_exposed_to_internet
  # CHECKID: ec2_instance_port_cifs_exposed_to_internet
  # CHECKID: ec2_instance_port_elasticsearch_kibana_exposed_to_internet
  # CHECKID: ec2_instance_port_ftp_exposed_to_internet
  # CHECKID: ec2_instance_port_kafka_exposed_to_internet
  # CHECKID: ec2_instance_port_kerberos_exposed_to_internet
  # CHECKID: ec2_instance_port_ldap_exposed_to_internet
  # CHECKID: ec2_instance_port_memcached_exposed_to_internet
  # CHECKID: ec2_instance_port_mongodb_exposed_to_internet
  # CHECKID: ec2_instance_port_mysql_exposed_to_internet
  # CHECKID: ec2_instance_port_oracle_exposed_to_internet
  # CHECKID: ec2_instance_port_postgresql_exposed_to_internet
  # CHECKID: ec2_instance_port_rdp_exposed_to_internet
  # CHECKID: ec2_instance_port_redis_exposed_to_internet
  # CHECKID: ec2_instance_port_sqlserver_exposed_to_internet
  # CHECKID: ec2_instance_port_ssh_exposed_to_internet
  # CHECKID: ec2_instance_port_telnet_exposed_to_internet
  # ACTIONPLAN: 0.0.0.0/0 전체/임의/고위험/특정 서비스 포트 인바운드 오픈 규칙 인스턴스 탐지
  - name: ec2_instance_port
    description: |
      Detect instances when 0.0.0.0/0 inbound (all/random/high-risk/specific service ports) is opened
    resource: aws.ec2
    filters:
      - type: value
        key: PublicIpAddress
        op: ne
        value: null
      - type: security-group
        key: IpPermissions[].IpRanges[].CidrIp
        op: contains  
        value: 0.0.0.0/0
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_instance_port_* ***
          • 0.0.0.0/0(전체 인바운드)로 오픈된 보안그룹을 가진 인스턴스가 있습니다.
        action_desc: |
          1. 반드시 필요한 경우가 아니라면 0.0.0.0/0 인바운드 허용을 삼가주세요.
          2. 인바운드 규칙은 최소 권한 원칙에 따라 제한적으로 관리해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_account_imdsv2_enabled
  # ACTIONPLAN: 계정 IMDS 기본 HttpTokens을 required로 변경
  - name: ec2_instance_account_imdsv2_enabled
    description: Force IMDS basic token settings to be required for accounts
    resource: aws.account
    filters:
      - or:
          - type: ec2-metadata-defaults
            key: HttpTokens
            op: eq
            value: optional
          - type: ec2-metadata-defaults
            key: HttpTokens
            op: eq
            value: no-preference
          - type: ec2-metadata-defaults
            key: HttpTokens
            op: eq
            value: absent
    actions:
    # 람다 배포 시 에러 발생. 람다 배포 없이 즉각 조치는 가능. (prompt.sh 이용)
    #  - type: set-ec2-metadata-defaults
    #    HttpTokens: required
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_instance_account_imdsv2_enabled ***
          • EC2 계정의 IMDS 기본 HttpTokens 설정이 V2(required)가 아닙니다.
        action_desc: |
          1. AWS Console에서 계정별 EC2 인스턴스의 IMDS(HttpTokens) 설정을 V2만 해당(토큰 필수) 하도록 변경해주세요.
          2. 모든 EC2 인스턴스에 대해 IMDSv2만 허용되도록 주기적으로 점검해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_detailed_monitoring_enabled
  # ACTIONPLAN: EC2 인스턴스의 상세 모니터링이 비활성화된 경우, 자동 활성화 구성
  - name: ec2_instance_detailed_monitoring_enabled
    description: When detailed monitoring of EC2 instances is disabled, switch it to enabled (additional charges may apply)
    resource: aws.ec2
    filters:
      - Monitoring.State: disabled
    actions:
      - type: set-monitoring
        state: enable
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: ec2_instance_detailed_monitoring_enabled ***
          • EC2 인스턴스의 세부 모니터링이 비활성화 상태입니다.
        action_desc: |
          1. 세부 모니터링 상태가 활성화(enable)로 자동 조치 되었습니다.  
          2. 추가 비용이 발생할 수 있으나 활성화 상태 유지를 권장합니다.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_imdsv2_enabled
  # ACTIONPLAN: EC2 인스턴스에 대해 Instance Metadata Service v2(IMDSv2)가 설정되어 있는지 점검
  - name: ec2_instance_imdsv2_enabled
    description: If the endpoint is disabled when a new instance is created, enable the endpoint
    resource: aws.ec2
    filters:
      - type: value
        key: MetadataOptions.HttpTokens
        op: ne
        value: required
    actions:
      # 1 IMDS endpoint 활성화
      - type: set-metadata-access
        endpoint: enabled
      # 2 IMDSv2 토큰 요구 설정
      - type: set-metadata-access
        tokens: required
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: ec2_instance_imdsv2_enabled ***
          • 새로 생성된 EC2 인스턴스의 IMDS 설정이 v2(HttpTokens=required)로 바뀌었습니다.
        action_desc: |
          1. 각 인스턴스의 MetadataOptions.HttpEndpoint 및 HttpTokens 설정을 확인하세요.  
          2. 런치 템플릿 및 오토스케일링 구성에서도 IMDSv2가 기본이 되도록 검토하세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_internet_facing_with_instance_profile
  # ACTIONPLAN: 퍼블릭 IP가 부여되고 IAM 인스턴스 프로파일이 연결된 인스턴스를 탐지하여 자격증명 노출 위험을 점검
  - name: ec2_instance_internet_facing_with_instance_profile
    description: Check IAM instance profile for instances with public IP addresses notification
    resource: aws.ec2
    filters:
    # 1 퍼블릭 IP가 있어야 인터넷 노출된 인스턴스
      - type: value
        key: PublicIpAddress
        op: ne
        value: null
    # 2 인스턴스 프로파일이 붙어 있어야 함
      - type: value
        key: IamInstanceProfile
        op: ne
        value: null
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_instance_internet_facing_with_instance_profile ***
          • 퍼블릭 IP가 부여된 인스턴스에 IAM 인스턴스 프로파일이 연결되어 있습니다.
        action_desc: |
          1. 퍼블릭 IP가 부여된 인스턴스의 IAM 인스턴스 프로파일 권한을 최소화하세요.
          2. 최소 권한 원칙이 지켜지는지 주기적인 점검을 권장하며, 30일마다 메시지가 발송됩니다.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_managed_by_ssm
  # ACTIONPLAN: EC2 인스턴스가 Systems Manager에 의해 관리되지 않는 경우를 탐지
  - name: ec2_instance_managed_by_ssm
    description: Check if EC2 instances are managed by SSM and notify via Slack
    resource: aws.ec2
    filters:
      - type: ssm
        key: PingStatus
        op: ne
        value: Online
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_instance_managed_by_ssm ***
          • SSM Agent가 등록되지 않았거나 Online 상태가 아닌 EC2 인스턴스가 존재합니다.
        action_desc: |
          1. 해당 인스턴스의 SMM 관리 여부를 파악하고, SSM Agent를 설치·등록하세요.  
          2. 설치 완료 후 PingStatus가 Online인지 확인해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_older_than_specific_days
  # ACTIONPLAN: 특정 일수보다 오래된 EC2 인스턴스가 존재하는 경우, 사용 여부를 검토.
  - name: ec2_instance_older_than_specific_days
    description: Send a notification if there are EC2 instances that are older than a certain number of days.
    resource: aws.ec2
    filters:
      - type: instance-age
        days: 90 # 내부 정책에 따라 조정
        op: ge
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_instance_older_than_specific_days ***
          • 90일 이상 가동 중인 인스턴스가 감지되었습니다.
        action_desc: |
          1. 해당 인스턴스가 여전히 필요하다면 유지하세요.  
          2. 필요하지 않은 경우 종료를 검토하세요.
          3. 현재 90일 이상 가동 중인 인스턴스가 감지될 때 메시지가 발송됩니다. 내부 정책에 따라 일자를 조정하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_profile_attached
  # ACTIONPLAN: EC2 인스턴스가 IAM 역할없이 실행되는 경우를 탐지하고 역할 기반으로 권한을 관리하도록 알림
  - name: ec2_instance_profile_attached
    description: Find EC2 instances that are not connected to IAM instance profiles and send notifications
    resource: aws.ec2
    filters:
      - type: value
        key: IamInstanceProfile.Arn
        op: eq
        value: null
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_instance_profile_attached ***
          • IAM 인스턴스 프로파일이 연결되지 않은 EC2 인스턴스가 생성되었습니다.
        action_desc: |
          1. 해당 인스턴스에 최소 권한 원칙에 따른 IAM 인스턴스 프로파일을 연결하세요.
          2. 역할 기반 권한 관리로 보안 모범 사례를 준수하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

# CHECKID: ec2_instance_public_ip
# ACTIONPLAN: 퍼블릭 IP가 부여된 EC2 인스턴스를 탐지하여 태깅 또는 제어
  - name: ec2_instance_public_ip
    description: Find EC2 instances with public IP addresses, attach the “PubliclyAccessible” tag, and stop them if necessary
    resource: aws.ec2
    filters:
    # PublicIpAddress 필드가 null이 아닌(= 퍼블릭 IP가 할당된) 인스턴스만
      - type: value
        key: PublicIpAddress
        op: ne
        value: null
    actions:
    # 1 퍼블릭 노출 여부 표시 태그
      - type: tag
        key: PubliclyAccessible
        value: "true"
    # 2 (선택) 퍼블릭 IP 할당 인스턴스 즉시 중지
    #  - type: stop
    # 3 Slack 알림
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_instance_public_ip ***
          • 퍼블릭 IP가 할당된 EC2 인스턴스가 감지되어 *PubliclyAccessible* 태그를 부착하였습니다.
        action_desc: |
          1. 퍼블릭 노출이 불필요한 경우 해당 인스턴스의 퍼블릭 IP를 해제하거나, 보안 그룹/네트워크 ACL을 점검해 주세요.
          2. 보안정책에 따라 인스턴스를 중지(stop)하거나, VPC 설정을 재검토해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_secrets_user_data
  # ACTIONPLAN: UserData에 하드코드된 시크릿 정보가 포함된 EC2 인스턴스를 태그/알림
  - name: ec2_instance_secrets_user_data
    description: Instance tags and notifications found with hard-coded secret information in EC2 UserData
    resource: aws.ec2
    filters:
      - type: user-data
        op: regex
        value: '.*(S0VZ|UEFTU1dPUkQ=|UFc=|VE9LRU4=|U0VDUkVU)*'
    actions:
      - type: tag
        key: SensitiveUserData
        value: "true"
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_instance_secrets_user_data ***
          • EC2 인스턴스의 UserData에 하드코드된 시크릿(비밀번호, 토큰 등 민감정보) 패턴이 감지되어 *SensitiveUserData* 태그를 부착하였습니다.
        action_desc: |
          1. UserData에 시크릿 정보(비밀번호, 토큰, 인증키 등)가 포함되어 있는지 확인하고 즉시 삭제 또는 빈 값으로 초기화해 주세요.
          2. 민감정보 전달이 필요하다면 AWS Secrets Manager 또는 Parameter Store를 반드시 사용해 주세요.
          3. 반복 발생 방지를 위해 배포 파이프라인 및 운영 정책을 재점검해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_elastic_ip_unassigned
  # ACTIONPLAN: EC2에 연결되지 않은 Elastic IP 탐지 및 비용 최적화 대상 태그
  - name: ec2_elastic_ip_unassigned
    description: Detect Elastic IPs not connected to EC2 and target tags for cost optimization
    resource: aws.elastic-ip                   
    filters:
      - type: value
        key: "AssociationId"
        op: eq
        value: null        
    actions:
      - type: tag
        key: CostOptimize
        value: "UnattachedEIP"
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_elastic_ip_unassigned ***
          • EC2에 연결되지 않은(Unattached) Elastic IP가 감지되었습니다.
        action_desc: |
          1. Elastic IP의 사용 기록을 검토해 주세요.
          2. Elastic IP의 필요성을 점검하고 삭제를 고려해주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_launch_template_no_secrets
  # ACTIONPLAN: 시작 템플릿 UserData에 시크릿 키워드가 포함된 경우 태그 및 Slack 알림
  - name: ec2_launch_template_no_secrets
    description: EC2 시작 템플릿 UserData 내에 하드코드된 시크릿 정보가 포함된 템플릿을 태그하고 알림
    resource: aws.launch-template-version
    filters:
      # UserData 존재 여부 확인
      - type: value
        key: LaunchTemplateData.UserData
        op: ne
        value: null
      # 대표적인 시크릿 키워드 탐지 (대소문자 구분 없이)
      - type: value
        key: LaunchTemplateData.UserData
        op: regex
      # KEY, PASSWORD, PW, TOKEN, SECRET
        value: '.*(S0VZ|UEFTU1dPUkQ=|UFc=|VE9LRU4=|U0VDUkVU)*'
    actions:
      # 시크릿 포함됨을 표시하는 태그
      - type: tag
        key: SensitiveUserData
        value: "true"
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_launch_template_no_secrets ***
          • 시작 템플릿의 UserData에 특정 키워드의 비밀 정보가 포함되어 있습니다.
        action_desc: |
          1. UserData를 검토 후 민감한 비밀 정보를 제거하세요.
          2. AWS Secrets Manager/Parameter Store를 사용하도록 수정하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_networkacl_allow_ingress_any_port
  # ACTIONPLAN: 네트워크 ACL이 모든 포트에 대해 0.0.0.0/0에서 인바운드 접근을 허용하는지 점검
  - name: ec2_networkacl_allow_ingress_any_port
    description: Detect whether the network ACL allows inbound access from 0.0.0.0/0 for all ports
    resource: aws.network-acl
    filters:
      - type: value
        key: "length(Entries[?Egress==`false` && RuleAction=='allow' && CidrBlock=='0.0.0.0/0' && Protocol=='-1'])"
        op: gt
        value: 0
    actions:
      - type: tag
        key: allow_ingress_any_port
        value: "true"
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_networkacl_allow_ingress_any_port ***
          • 네트워크 ACL에서 0.0.0.0/0 대상 모든 포트·프로토콜 허용 규칙이 발견되었습니다.
        action_desc: |
          1. 해당 ACL 항목을 점검하여 최소 권한 원칙에 맞게 수정하세요.  
          2. 필요할 경우 특정 IP/포트만 허용하도록 제한하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_networkacl_allow_ingress_tcp_port_22
  # ACTIONPLAN: 네트워크 ACL이 SSH 포트(22)에 대해 0.0.0.0/0에서 인바운드 접근을 허용하는지 점검
  - name: ec2_networkacl_allow_ingress_tcp_port_22
    description: Detect whether the network ACL allows inbound access from 0.0.0.0/0 for the SSH port (22)
    resource: aws.network-acl
    filters:
      - type: value
        key: >
          length(Entries[?Egress==`false`
                          && RuleAction=='allow'
                          && CidrBlock=='0.0.0.0/0'
                          && Protocol=='6'
                          && PortRange.From==`22`
                          && PortRange.To==`22`])
        op: gt
        value: 0
    actions:
      - type: tag
        key: ec2_networkacl_allow_ingress_tcp_port_22
        value: "true"
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_networkacl_allow_ingress_tcp_port_22 ***
          • 네트워크 ACL에서 TCP 포트 22 (SSH) 에 대해 0.0.0.0/0 허용 규칙이 발견되었습니다.
        action_desc: |
          1. SSH 접근 제어가 필요한 소스 IP만 허용하도록 ACL을 수정하세요.  
          2. 보안 그룹에서도 중복 필터링을 적용하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_networkacl_allow_ingress_tcp_port_3389
  # ACTIONPLAN: 네트워크 ACL이 RDP 포트(3389)에 대해 0.0.0.0/0에서 인바운드 접근을 허용하는지 점검
  - name: ec2_networkacl_allow_ingress_tcp_port_3389
    description: Detect whether the network ACL allows inbound access from 0.0.0.0/0 for the RDP port (3389)
    resource: aws.network-acl
    filters:
      - type: value
        key: >
          length(Entries[?Egress==`false`
                          && RuleAction=='allow'
                          && CidrBlock=='0.0.0.0/0'
                          && Protocol=='6'
                          && PortRange.From==`3389`
                          && PortRange.To==`3389`])
        op: gt
        value: 0
    actions:
      - type: tag
        key: ec2_networkacl_allow_ingress_tcp_port_3389
        value: "true"
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_networkacl_allow_ingress_tcp_port_3389 ***
          • 네트워크 ACL에서 TCP 포트 3389 (RDP) 에 대해 0.0.0.0/0 허용 규칙이 발견되었습니다.
        action_desc: |
          1. RDP 접근 제어가 필요한 소스 IP만 허용하도록 ACL을 수정하세요.  
          2. 추가 방화벽 또는 보안 그룹 규칙을 검토하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_all_ports
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_any_port
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_high_risk_tcp_ports
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_port_mongodb_27017_27018
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_ftp_port_20_21
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_3389
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_cassandra_7199_9160_8888
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_elasticsearch_kibana_9200_9300_5601
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_kafka_9092
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_memcached_11211
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_mysql_3306
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_oracle_1521_2483
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_postgres_5432
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_redis_6379
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_sql_server_1433_1434
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_telnet_23
  # CHECKID: ec2_securitygroup_allow_wide_open_public_ipv4
  # ACTIONPLAN: 0.0.0.0/0 전체/임의/고위험/특정 서비스 포트 인바운드 오픈 규칙 실시간 자동 삭제
  - name: ec2_securitygroup_allow
    description: |
      Automatically deletes when 0.0.0.0/0 inbound (all/random/high-risk/specific service ports) is opened
    resource: aws.security-group
    filters:
      - type: ingress
        Cidr:
          value: 0.0.0.0/0
    actions:
      - type: remove-permissions
        ingress: matched
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_* ***
          *** CHECKID: ec2_securitygroup_allow_wide_open_public_ipv4 ***
          • 0.0.0.0/0(전체 인바운드)로 오픈된 보안그룹 규칙이 탐지되어 삭제 조치하였습니다.
        action_desc: |
          1. 반드시 필요한 경우가 아니라면 0.0.0.0/0 인바운드 허용을 삼가주세요.
          2. 인바운드 규칙은 최소 권한 원칙에 따라 제한적으로 관리해 주세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}


  # CHECKID: ec2_securitygroup_from_launch_wizard
  # ACTIONPLAN: launch-wizard로 생성된 SG 실시간 자동 삭제
  - name: ec2_securitygroup_from_launch_wizard
    description: |
      Security groups created with launch-wizard (temporary/test/directly created) are detected in real time and automatically deleted immediately after creation.
    resource: aws.security-group
    filters:
      - type: value
        key: GroupName
        op: regex
        value: ^launch-wizard
    actions:
      - type: delete
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        subject: "[자동조치] launch-wizard 보안그룹이 실시간 삭제됨"
        violation_desc: |
          *** CHECKID: ec2_securitygroup_from_launch_wizard ***
          • launch-wizard로 생성된 보안그룹이 감지되어 삭제 조치하였습니다.
        action_desc: |
          1. 필요한 경우 EC2 콘솔에서 삭제 이력 및 보안그룹 생성 내역을 검토해 주세요.
          2. 불필요한 보안그룹 생성을 방지해 주세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_securitygroup_with_many_ingress_egress_rules
  # ACTIONPLAN: 인바운드/아웃바운드 규칙 개수 30개 이상 실시간 Slack 알림
  - name: ec2_securitygroup_with_many_ingress_egress_rules
    description: |
      Security groups with more than 30 inbound/outbound rules are difficult to manage and have high potential security risks, so Slack notifications are sent when detected in real time.
    resource: aws.security-group
    filters:
      - or:
          - type: value
            key: "IpPermissions"
            value_type: size
            op: gte
            value: 30
          - type: value
            key: "IpPermissionsEgress"
            value_type: size
            op: gte
            value: 30
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_securitygroup_with_many_ingress_egress_rules ***
          • 보안그룹에 인바운드/아웃바운드 규칙이 30개 이상 존재하여 과도한 권한 설정이 감지되었습니다.
        action_desc: |
          1. 불필요한 인바운드/아웃바운드 규칙을 점검하여 최소화해 주세요.
          2. 보안그룹 권한은 최소 권한 원칙에 따라 관리해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # # CHECKID: ec2_securitygroup_default_restrict_traffic
  # # ACTIONPLAN: Default Security Group이 0.0.0.0/0 오픈시 Slack 알림 (삭제 X)
  - name: ec2_securitygroup_default_restrict_traffic
    description: |
      If the Default Security Group is opened to 0.0.0.0/0 (all external), it violates the recommended security settings, so send a real-time Slack notification when that rule is detected (for auditing/operational purposes, no deletion)
    resource: aws.security-group
    filters:
      - type: value
        key: GroupName
        value: default
      - type: ingress
        Cidr:
          value: 0.0.0.0/0
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_securitygroup_default_restrict_traffic ***
          • Default Security Group이 0.0.0.0/0(전체 외부)로 오픈된 상태가 감지되었습니다.
          • Default SG 오픈은 보안 정책 위반이며, 외부 공격에 취약해질 수 있습니다.
        action_desc: |
          1. Default SG의 인바운드 규칙을 점검하고, 불필요한 오픈은 즉시 제한해 주세요.
          2. 운영 환경에서는 Default SG 사용을 지양하고, 별도의 SG를 최소 권한 원칙에 따라 관리해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_securitygroup_not_used
  # ACTIONPLAN: 미사용 SG는 batch(run)로 일괄 삭제 (정기 실행만 가능)
  - name: ec2_securitygroup_not_used
    description: Unused security groups can be misused or contaminated, so a Slack notification is sent every month through scheduled batch execution.
    resource: aws.security-group
    filters:
      - unused
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_securitygroup_not_used ***
          • 미사용 보안그룹이 감지되었습니다.  
          • 미사용 SG는 오남용·오염 위험이 있으니 반드시 필요성 검토 후 삭제를 고려해 주세요.
        action_desc: |
          1. EC2 콘솔에서 미사용 보안그룹 내역을 확인해 주세요.
          2. 실제 사용 목적이 없는 보안그룹만 신중히 삭제해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: efs_encryption_at_rest_enabled
  # ACTIONPLAN: Glue ETL 로그가 KMS로 암호화되지 않은 경우 알림 및 적용
  - name: efs_encryption_at_rest_enabled
    description: "Alert: EFS Without encryption"
    resource: aws.efs
    filters:
      - type: value
        key: Encrypted
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: efs_encryption_at_rest_enabled ***
          • EFS 리소스의 저장 시 암호화 누락이 감지되었습니다.
        action_desc: |
          1. EFS 리소스의 저장 시 암호화 설정을 해주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: efs_have_backup_enabled
  # ACTIONPLAN: AWS Backup을 통해 EFS 파일 시스템에 백업 계획을 적용하고 일별 백업 활성화
  - name: efs_have_backup_enabled
    description: "Alert: EFS Without Backup"
    resource: aws.efs
    filters:
      - type: value
        key: BackupPolicy.Status
        op: ne
        value: ENABLED
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: efs_have_backup_enabled ***
          • EFS 리소스의 Backup 누락이 감지되었습니다.
        action_desc: |
          1. AWS Backup을 통해 EFS 파일 시스템에 백업 계획을 적용하고 일별 백업 활성화해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}


# CHECKID: efs_not_publicly_accessible
# ACTIONPLAN: RDS 로그가 CloudWatch에 연동되지 않은 경우, 로그 통합 기능 구성 적용.
  - name: efs_not_publicly_accessible
    description: "Alert: EFS With public access"
    resource: aws.security-group
    filters:
      - type: ingress
        Cidr:
          value: 0.0.0.0/0
        Ports: [2049]
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: efs_not_publicly_accessible ***
          • EFS 리소스의 공개 접근 허용이 감지되었습니다.
        action_desc: |
          1. EFS를 프라이빗 서브넷에 위치해 주세요.
          2. EFS를 제한된 보안그룹과 사용해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: elasticache_cluster_uses_public_subnet
  #ACTIONPLAN: ElastiCache 클러스터가 공개 서브넷을 사용하는 경우, 비공개 서브넷으로 이동하여 클러스터의 노출을 최소화합니다.
  - name: elasticache_cluster_uses_public_subnet
    resource: aws.cache-subnet-group
    description: |
      List subnets used by ElastiCache subnet groups. Output to Slack for post-processing to identify public exposure.
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: elasticache_cluster_uses_public_subnet ***
          • ElastiCache에서 사용 중인 서브넷 정보입니다. 후처리로 퍼블릭 여부를 매칭하세요.
        action_desc: |
          1. 아래 SubnetId 목록을 활용하여 퍼블릭 노출 가능성을 추가 분석하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: elasticache_redis_cluster_auto_minor_version_upgrades
  #ACTIONPLAN: ElastiCache Redis 캐시 클러스터에 마이너 버전 자동 업그레이드가 비활성화된 경우, 활성화하여 최신 보안 패치 및 기능이 적용되도록 합니다.
  - name: elasticache_redis_cluster_auto_minor_version_upgrades
    resource: aws.elasticache-group
    description: |
      Detect Replication Groups where AutoMinorVersionUpgrade is disabled.
    filters:
      - type: value
        key: Engine
        value: redis
        op: eq
      - type: value
        key: AutoMinorVersionUpgrade
        value: false
        op: eq
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: elasticache_redis_cluster_auto_minor_version_upgrades ***
          • ElastiCache Redis Replication Group에 마이너 버전 자동 업그레이드가 비활성화되어 있습니다.
        action_desc: |
          1. Replication Group에서 마이너 버전 자동 업그레이드를 활성화하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: elasticache_redis_cluster_backup_enabled
  #ACTIONPLAN: ElastiCache Redis 캐시 클러스터에 자동 백업이 비활성화된 경우, 활성화하여 데이터 손실에 대비하고 복구 기능을 확보합니다.
  - name: elasticache_redis_cluster_backup_enabled
    resource: aws.elasticache-group
    description: |
      Detect Replication Groups where automatic backups are not enabled.
    filters:
      - type: value
        key: Engine
        value: redis
        op: eq
      - type: value
        key: SnapshotRetentionLimit
        value: 0
        op: eq
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: elasticache_redis_cluster_backup_enabled ***
          • ElastiCache Redis Replication Group에 자동 백업이 비활성화되어 있습니다.
        action_desc: |
          1. Replication Group에서 SnapshotRetentionLimit을 증가시켜 백업을 활성화하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: elasticache_redis_cluster_in_transit_encryption_enabled
  #ACTIONPLAN: ElastiCache Redis 캐시 클러스터에 전송 중 암호화가 비활성화된 경우, 활성화하여 데이터 통신의 보안을 강화합니다.
  - name: elasticache_redis_cluster_in_transit_encrypt_enabled
    resource: aws.elasticache-group
    description: |
      Detect Replication Groups where in-transit encryption is disabled.
    filters:
      - type: value
        key: Engine
        value: redis
        op: eq
      - type: value
        key: TransitEncryptionEnabled
        value: false
        op: eq
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: elasticache_redis_cluster_in_transit_encryption_enabled ***
          • ElastiCache Redis Replication Group에 전송 중 암호화가 비활성화되어 있습니다.
        action_desc: |
          1. Replication Group에서 전송 중 암호화를 활성화하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: elasticache_redis_cluster_multi_az_enabled
  #ACTIONPLAN: ElastiCache Redis 캐시 클러스터에 Multi-AZ가 비활성화된 경우, 활성화하여 고가용성과 내결함성을 확보합니다.
  - name: elasticache_redis_cluster_multi_az_enabled
    resource: aws.elasticache-group
    description: |
      Detect Replication Groups where Multi-AZ is disabled.
    filters:
      - type: value
        key: Engine
        value: redis
        op: eq
      - type: value
        key: MultiAZ
        value: "disabled"
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: elasticache_redis_cluster_multi_az_enabled ***
          • ElastiCache Redis Replication Group에 Multi-AZ가 비활성화되어 있습니다.
        action_desc: |
          1. Replication Group에서 Multi-AZ를 활성화하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: elasticache_redis_cluster_rest_encryption_enabled
  #ACTIONPLAN: ElastiCache Redis 캐시 클러스터에 저장 시 암호화가 비활성화된 경우, 활성화하여 저장된 데이터의 보안을 강화합니다.
  - name: elasticache_redis_cluster_rest_encryption_enabled
    resource: aws.elasticache-group
    description: |
      Detect Replication Groups where at-rest encryption is disabled.
    filters:
      - type: value
        key: Engine
        value: redis
        op: eq
      - type: value
        key: AtRestEncryptionEnabled
        value: false
        op: eq
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: elasticache_redis_cluster_rest_encryption_enabled ***
          • ElastiCache Redis Replication Group에 저장 시 암호화가 비활성화되어 있습니다.
        action_desc: |
          1. Replication Group에서 저장 시 암호화를 활성화하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: elbv2_deletion_protection
  # ACTIONPLAN: 로드 밸런서의 삭제 방지가 비활성화된 경우, 속성에서 활성화
  - name: elbv2_deletion_protection
    description: Ensure deletion protection is enabled on Application Load Balancers
    resource: aws.app-elb
    filters:
      - type: attributes
        key: "deletion_protection.enabled"
        value: false
    actions:
      - type: modify-attributes
        attributes:
          "deletion_protection.enabled": "true"
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: elbv2_deletion_protection ***
          • 삭제 보호가 비활성화된 ALB가 감지되었습니다.
        action_desc: |
          1. 즉시 삭제 보호를 활성화하였습니다.
          2. 삭제 보호 설정이 유지되는지 주기적으로 검토하세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: elbv2_desync_mitigation_mode
  # ACTIONPLAN: ALB의 디싱크 완화 모드가 엄격하지 않은 경우, defensive 모드 이상을 변경
  - name: elbv2_desync_mitigation_mode
    description: Ensure ALB desync mitigation mode is switched from monitoring to defensive
    resource: aws.app-elb
    filters:
      - type: attributes
        key: routing.http.desync_mitigation_mode
        op: eq
        value: monitor
    actions:
      # 1 monitoring → defensive 로 자동 변경 (선택)
      - type: modify-attributes
        attributes:
          routing.http.desync_mitigation_mode: defensive
      # 2 Slack 알림
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: elbv2_desync_mitigation_mode ***
          • ALB desync 완화 모드가 모니터링(monitoring)으로 설정되어 있습니다.
        action_desc: |
          1. desync 완화 모드를 방어적(defensive)으로 변경하였습니다.
          2. 더 강력한 가장 엄격(strictest) 모드 적용을 검토하세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

# CHECKID: elbv2_insecure_ssl_ciphers
# ACTIONPLAN: ELB의 리스너에 오래된 SSL 정책이 적용된 경우, 최신 TLS 정책을 권장하는 Slack 알림 발송
  - name: elbv2_insecure_ssl_ciphers
    description: Detect ALB listeners using deprecated SSL policies and notify
    resource: aws.app-elb
    filters:
      # HTTPS 또는 TLS 리스트너만 검사
      - type: value
        key: "Listeners[].Protocol"
        op: in
        value:
          - HTTPS
          - TLS
      # any listener whose SslPolicy is NOT the latest TLS‐1.2 policy
      - type: value
        key: "Listeners[].SslPolicy"
        op: not-in
        value:
          - ELBSecurityPolicy-TLS13-1-2-Res-2021-06
          - ELBSecurityPolicy-TLS13-1-2-Ext1-2021-06
          - ELBSecurityPolicy-TLS13-1-2-2021-06
          - ELBSecurityPolicy-TLS13-1-2-FIPS-2023-04
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: elbv2_insecure_ssl_ciphers ***
          • ALB listener에 권장되지 않는 SSL 정책이 적용되어 있습니다.
        action_desc: |
          1. 해당 리스너의 SSL 정책을 최신 권장 정책(예: ELBSecurityPolicy-TLS13-1-2-Res-2021-06)으로 교체하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: elbv2_internet_facing
  # ACTIONPLAN: 불필요하게 인터넷에 노출된 ELB는 보안 그룹 및 서브넷 설정을 검토하여 접근을 제한
  - name: elbv2_internet_facing
    description: Detect internet-facing ALBs for security review
    resource: aws.app-elb
    filters:
      # Scheme이 internet‑facing인 ELB만 매칭
      - type: value
        key: Scheme
        op: eq
        value: internet-facing
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: elbv2_internet_facing ***
          • 인터넷에 노출된 ELB(Internet-Facing) 가 감지되었습니다.
        action_desc: |
          1. 불필요하게 인터넷에 노출된 ALB의 보안 그룹과 서브넷 설정을 검토하여
          접근을 제한하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: elbv2_is_in_multiple_az
  # ACTIONPLAN: ELBv2가 단일 가용 영역에만 구성된 경우, 여러 AZ를 추가하여 고가용성을 보장
  - name: elbv2_is_in_multiple_az
    description: Ensure ALB is deployed in multiple Availability Zones for high availability
    resource: aws.app-elb
    filters:
      # 단일 AZ인 경우만 매칭
      - type: value
        key: "length(AvailabilityZones)"
        op: eq
        value: 1
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: elbv2_is_in_multiple_az ***
          • 이 ELBv2는 단일 가용 영역(AZ)에만 구성되어 있습니다.
        action_desc: |
          1. 최소 두 개 이상의 AZ에 서브넷을 추가하여 고가용성을 확보하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: elbv2_listeners_underneath
  # ACTIONPLAN: 리스너가 없는 ELBv2가 발견된 경우, 트래픽을 처리할 리스너를 구성하거나 불필요 시 삭제
  - name: elbv2_listeners_underneath
    description: Detect Application Load Balancers without any listeners
    resource: aws.app-elb
    filters:
      - not:
          - type: listener
            key: ListenerArn
            op: regex
            value: '.*'
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: elbv2_listeners_underneath ***
          • 리스너가 하나도 구성되지 않은 ELB가 발견되었습니다.
        action_desc: |
          1. 해당 ELB에 최소 하나의 리스너를 추가하세요.
          2. 더 이상 필요 없는 ELB라면 삭제를 검토하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: elbv2_logging_enabled
  # ACTIONPLAN: ELB의 액세스 로깅이 비활성화된 경우 탐지
  - name: elbv2_logging_enabled
    description: Ensure ELBv2 access logging is enabled and logs are stored in S3 for traffic analysis
    resource: aws.app-elb
    filters:
      # 액세스 로깅이 비활성화된 ALB만 선택
      - type: is-not-logging
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: elbv2_logging_enabled ***
          • ELB의 액세스 로깅이 비활성화되어 있습니다.
        action_desc: |
          1. S3 버킷을 만들고 액세스 로깅을 활성화하세요.
          2. 저장된 로그를 분석하여 트래픽 패턴과 보안 이벤트를 모니터링하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: elbv2_insecure_listeners
  # ACTIONPLAN: SSL 리스너가 없는 ELB는 443 포트의 HTTPS/SSL 리스너를 추가하여 통신을 암호화
  - name: elbv2_insecure_listeners
    description: Detect any v2 load balancer listeners not using TLS/HTTPS
    resource: aws.app-elb
    filters:
      - type: listener
        key: Protocol
        op: in
        value:
          - HTTP
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: elbv2_ssl_listeners ***
          • ELBv2 로드밸런서에서 비암호화 프로토콜로 리스너가 구성되었습니다.
        action_desc: |
          1. 해당 리스너를 HTTPS 또는 TLS 프로토콜로 전환하세요.
          2. 필요 시 HTTP→HTTPS 리다이렉션을 설정하여 모든 트래픽을 암호화 전송하도록 강화하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: elbv2_waf_acl_attached
  # ACTIONPLAN: WAF ACL이 연결되지 않은 ALB의 경우 탐지
  - name: elbv2_waf_acl_attached
    description: Alert on ALBs without a WAFv2 or WAF Web ACL attached
    resource: aws.app-elb
    filters:
      - or:
        - type: wafv2-enabled
          state: false
        - type: waf-enabled
          state: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: elbv2_waf_acl_attached ***
          • WAFv2 Web ACL이 연결되지 않은 ALB가 감지되었습니다.
        action_desc: |
          1. AWS WAF에서 Regional Web ACL을 생성하고 ALB에 연결하세요.  
          2. OWASP 규칙 세트를 활성화하여 공격을 완화하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: emr_cluster_account_public_block_enabled
  #ACTIONPLAN: EMR의 퍼블릭 액세스 차단이 비활성화된 경우, 즉시 활성화하여 S3 데이터 유출을 방지합니다.
  - name: emr_cluster_account_public_block_enabled
    resource: aws.emr
    description: |
      Find and terminate EMR clusters with VisibleToAllUsers=true to eliminate the risk of public access.
    filters:
      - type: value
        key: VisibleToAllUsers
        op: eq
        value: true
    actions:
      - type: terminate
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: emr_cluster_account_public_block_enabled ***
          • EMR의 퍼블릭 액세스 차단이 비활성화되어 있습니다.
        action_desc: |
          1. EMR의 퍼블릭 액세스 차단을 활성화하여 S3 데이터 유출을 방지합니다.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: eventbridge_bus_cross_account_access
  # ACTIONPLAN: EventBridge 버스에 크로스 계정 접근이 허용된 구성을 탐지하고 관리자에게 알림을 전송하거나 위험 리소스로 태깅
  - name: eventbridge_bus_cross_account_access
    resource: aws.event-bus
    description: "Alert: eventbridge bus cross account access"
    filters:
      - type: cross-account
    actions:
      - type: tag
        key: "Risk"
        value: "CrossAccountOrPublic"
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: eventbridge_bus_cross_account_access ***
          • 크로스 계정 접근이 가능한 EventBridge 버스가 탐지되어 
          • *Risk=CrossAccountOrPublic* 태그가 자동으로 부착되었습니다.
        action_desc: |
          1. 해당 리소스에는 위험 리소스 표시 태그가 자동 부착되었습니다.
          2. 접근 정책을 점검하고, 불필요한 계정/외부 권한을 제거해 주세요.
          3. 태그를 통해 추가 모니터링 및 정기 점검을 수행하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: eventbridge_bus_exposed
  # ACTIONPLAN: 크로스 계정이나 외부 노출이 가능한 EventBridge 버스를 탐지하고 경고 또는 접근 정책 점검을 유도
  - name: eventbridge_bus_exposed
    resource: aws.event-bus
    description: "Alert: eventbridge bus exposed"
    filters:
      - type: cross-account
        actions: 
          - "events:PutEvents"
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: eventbridge_bus_exposed ***
          • 외부 노출이 가능한 EventBridge 버스가 탐지되었습니다.
        action_desc: |
          1. EventBridge 버스의 접근 정책을 반드시 점검하고, 불필요한 외부(계정) 접근 권한을 제거해 주세요.
          2. 반복 방지를 위해 배포/운영 프로세스와 IAM 정책 등도 재검토하시기 바랍니다.
          3. 정책 변경 후에는 주기적으로 재점검해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: glue_etl_jobs_amazon_s3_encryption_enabled
  # ACTIONPLAN: Glue Security Configuration에 S3 암호화 미적용 시 담당자에게 알림, 반드시 암호화(KMS/SSE) 적용 및 주기적 재점검 권고
  - name: glue_etl_jobs_amazon_s3_encryption_enabled
    resource: aws.glue-security-configuration
    description: |
      Detect Glue Security Configurations where Amazon S3 encryption is not enabled.
    filters:
      - or:
          - type: value
            key: EncryptionConfiguration.S3Encryptions[0].S3EncryptionMode
            value: DISABLED
          - type: value
            key: EncryptionConfiguration.S3Encryptions[0].S3EncryptionMode
            value: null
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: glue_etl_jobs_amazon_s3_encryption_enabled ***
          • Glue Security Configuration에서 S3 암호화가 활성화되어 있지 않습니다.
        action_desc: |
          1. Security Configuration에 S3 암호화(SSE-S3, SSE-KMS 등)를 반드시 적용하세요.
          2. 변경 이후에도 암호화 설정이 해제되어 있지 않은지 정기적으로 재점검하세요.
          3. 암호화 정책이 표준에 맞는지 연 1회 이상 보안팀과 검토하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: glue_etl_jobs_cloudwatch_logs_encryption_enabled
  # ACTIONPLAN: Glue Security Configuration에 CloudWatch 로그 암호화 미적용 시 담당자에게 알림, KMS 등 적용 및 정기 점검 안내
  - name: glue_etl_jobs_cloudwatch_logs_encryption_enabled
    resource: aws.glue-security-configuration
    description: |
      Detect Glue Security Configurations where CloudWatch Logs encryption is not enabled.
    filters:
      - or:
          - type: value
            key: EncryptionConfiguration.CloudWatchEncryption.CloudWatchEncryptionMode
            value: DISABLED
          - type: value
            key: EncryptionConfiguration.CloudWatchEncryption.CloudWatchEncryptionMode
            value: null
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: glue_etl_jobs_cloudwatch_logs_encryption_enabled ***
          • Glue Security Configuration에서 CloudWatch 로그 암호화가 활성화되어 있지 않습니다.
        action_desc: |
          1. Security Configuration에 CloudWatch 로그 암호화(KMS 등)를 반드시 적용하세요.
          2. 암호화 정책이 계속 적용되어 있는지 연 1회 이상 점검하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: glue_etl_jobs_job_bookmark_encryption_enabled
  # ACTIONPLAN: Glue Security Configuration에 Job Bookmark 암호화 미적용 시 담당자에게 알림, KMS 적용 및 암호화 재확인 요청
  - name: glue_etl_jobs_job_bookmark_encryption_enabled
    resource: aws.glue-security-configuration
    description: |
      Detect Glue Security Configurations where Job Bookmark encryption is not enabled.
    filters:
      - or:
          - type: value
            key: EncryptionConfiguration.JobBookmarksEncryption.JobBookmarksEncryptionMode
            value: DISABLED
          - type: value
            key: EncryptionConfiguration.JobBookmarksEncryption.JobBookmarksEncryptionMode
            value: null
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: glue_etl_jobs_job_bookmark_encryption_enabled ***
          • Glue Security Configuration에서 Job Bookmark 암호화가 활성화되어 있지 않습니다.
        action_desc: |
          1. Security Configuration에 Job Bookmark 암호화(KMS 등)를 반드시 적용하세요.
          2. 정책이 적용 후에도 계속 유지되고 있는지 정기적으로 재확인하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_administrator_access_with_mfa
  # ACTIONPLAN: AdministratorAccess가 할당된 IAM 사용자 중 MFA 미적용 계정 탐지 시 Slack 알림 발송
  - name: iam_administrator_access_with_mfa
    description: Detect IAM users with AdministratorAccess but no MFA, then send Slack alert.
    resource: aws.iam-user
    filters:
      - type: value
        key: AttachedManagedPolicies[].PolicyName
        op: contains
        value: AdministratorAccess
      - type: value
        key: MfaDevices
        op: eq
        value: 0
        value_type: size
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_administrator_access_with_mfa ***
          • MFA가 미적용된 AdministratorAccess 계정이 탐지되었습니다.
        action_desc: |
          1. 해당 계정에 MFA를 즉시 등록하세요.
          2. MFA 미적용 시 중요 권한 탈취 위험이 큽니다.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_avoid_root_usage
  # ACTIONPLAN: Root 계정 사용 이력 발생 시 Slack 경고 알림 발송
  - name: iam_avoid_root_usage
    description: Detect AWS root account usage and send Slack alert for review.
    resource: aws.account
    filters:
      - type: value
        key: RootAccountUsage
        op: eq
        value: true
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_avoid_root_usage ***
          • AWS root 계정 사용 이력이 탐지되었습니다.
        action_desc: |
          1. 불필요한 root 사용을 즉시 중지하고, 계정 접근 이력을 점검하세요.
          2. 모든 작업은 개별 IAM 계정으로 수행하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_aws_attached_policy_no_administrative_privileges
  # ACTIONPLAN: AWS 관리형 관리자 권한 정책이 붙은 사용자 탐지 시 Slack 알림 발송
  - name: iam_aws_attached_policy_no_administrative_privileges
    description: Detect users with AWS-managed AdministratorAccess and send Slack alert.
    resource: aws.iam-user
    filters:
      - type: value
        key: AttachedManagedPolicies[].PolicyArn
        op: contains
        value: arn:aws:iam::aws:policy/AdministratorAccess
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_aws_attached_policy_no_administrative_privileges ***
          • AWS 관리형 AdministratorAccess 정책이 할당된 사용자가 탐지되었습니다.
        action_desc: |
          1. 해당 계정의 필요성 검토 후, 정책을 해제하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_check_saml_providers_sts
  # ACTIONPLAN: sts.amazonaws.com 미포함 SAML Provider 탐지 시 Slack 알림 발송
  - name: iam_check_saml_providers_sts
    description: Detect SAML providers without sts.amazonaws.com in ARN, then send Slack alert.
    resource: aws.iam-saml-provider
    filters:
      - type: value
        key: Arn
        op: not-in
        value: "sts.amazonaws.com"
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_check_saml_providers_sts ***
          • sts.amazonaws.com이 포함되지 않은 SAML Provider가 탐지되었습니다.
        action_desc: |
          1. 트러스트 정책을 수정하여 sts.amazonaws.com을 포함시키세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_customer_attached_policy_no_administrative_privileges
  # ACTIONPLAN: 관리자 권한(*:*)이 포함된 고객 관리형 정책이 부착된 경우 Slack 알림 발송
  - name: iam_customer_attached_policy_no_adminis
    description: Detect attached customer-managed policies with '*:*' privilege, then send Slack alert.
    resource: aws.iam-policy
    filters:
      - type: value
        key: Arn
        op: contains
        value: ":policy/"
      - type: value
        key: AttachmentCount
        op: gt
        value: 0
      - type: value
        key: PolicyDocument.Statement[].Action
        op: contains
        value: "*:*"
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_customer_attached_policy_no_administrative_privileges ***
          • 관리자 권한(*:*)이 부여된 고객 관리형 정책이 부착된 상태로 탐지되었습니다.
        action_desc: |
          1. 불필요한 전체 권한 정책은 분리 및 삭제를 권고합니다.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_customer_unattached_policy_no_administrative_privileges
  # ACTIONPLAN: 관리자 권한(*:*)이 포함된 고객 관리형 정책이 미부착(Unattached) 상태로 탐지 시 Slack 알림 발송
  - name: iam_customer_unattached_policy_no_adminis
    description: Detect unattached customer-managed policies that allow all actions, then send Slack alert.
    resource: aws.iam-policy
    filters:
      - type: has-allow-all
      - type: value
        key: AttachmentCount
        op: eq
        value: 0
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_customer_unattached_policy_no_administrative_privileges ***
          • 관리자 권한(*:*)이 부여된 고객 관리형 정책이 미부착 상태로 탐지되었습니다.
        action_desc: |
          1. 해당 정책의 필요성을 재검토하고, 불필요시 삭제하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_group_administrator_access_policy
  # ACTIONPLAN: AdministratorAccess가 부착된 IAM 그룹 탐지 시 Slack 경고 알림 발송
  - name: iam_group_administrator_access_policy
    description: Detect IAM groups with AdministratorAccess attached and send Slack alert.
    resource: aws.iam-group
    filters:
      - type: value
        key: AttachedManagedPolicies[].PolicyName
        op: contains
        value: AdministratorAccess
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_group_administrator_access_policy ***
          • AdministratorAccess가 부착된 IAM 그룹이 탐지되었습니다.
        action_desc: |
          1. 그룹에서 해당 정책을 분리하거나, 필요성 재검토 후 최소 권한으로 조정하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_inline_policy_allows_privilege_escalation
  # ACTIONPLAN: iam:PassRole 등 권한 상승이 가능한 인라인 정책 탐지 시 Slack 알림 발송
  - name: iam_inline_policy_allows_privilege_escalation
    description: Detect IAM users whose inline policies allow privilege escalation (e.g., iam:PassRole), then send Slack alert.
    resource: aws.iam-user
    filters:
      - type: value
        key: InlinePolicies[].PolicyDocument.Statement[].Action
        op: contains
        value: iam:PassRole
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_inline_policy_allows_privilege_escalation ***
          • iam:PassRole 권한(권한 상승 가능)이 포함된 인라인 정책이 탐지되었습니다.
        action_desc: |
          1. 인라인 정책에서 iam:PassRole 등 권한 상승 항목을 제거하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_inline_policy_no_administrative_privileges
  # ACTIONPLAN: *:* 권한이 포함된 인라인 정책 탐지 시 Slack 알림 발송
  - name: iam_inline_policy_no_administrative_privileges
    description: Detect inline policies with '*:*' actions and send Slack alert.
    resource: aws.iam-user
    filters:
      - type: value
        key: InlinePolicies[].PolicyDocument.Statement[].Action
        op: contains
        value: "*:*"
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_inline_policy_no_administrative_privileges ***
          • 전체 권한(*:*)이 부여된 인라인 정책이 탐지되었습니다.
        action_desc: |
          1. 필요 없는 전체 권한 정책은 반드시 삭제하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_inline_policy_no_full_access_to_cloudtrail
  # ACTIONPLAN: cloudtrail:* 권한이 부여된 인라인 정책 탐지 시 Slack 알림 발송
  - name: iam_inline_policy_no_full_access_to_cloudtrail
    description: Detect inline policies with cloudtrail:* privileges and send Slack alert.
    resource: aws.iam-user
    filters:
      - type: value
        key: InlinePolicies[].PolicyDocument.Statement[].Action
        op: contains
        value: cloudtrail:*
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_inline_policy_no_full_access_to_cloudtrail ***
          • cloudtrail:* 권한이 부여된 인라인 정책이 탐지되었습니다.
        action_desc: |
          1. cloudtrail:* 권한은 최소한으로 제한하고, 불필요시 정책에서 삭제하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_inline_policy_no_full_access_to_kms
  # ACTIONPLAN: kms:* 권한이 부여된 인라인 정책 탐지 시 Slack 알림 발송
  - name: iam_inline_policy_no_full_access_to_kms
    description: Detect inline policies with kms:* privileges and send Slack alert.
    resource: aws.iam-user
    filters:
      - type: value
        key: InlinePolicies[].PolicyDocument.Statement[].Action
        op: contains
        value: kms:*
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_inline_policy_no_full_access_to_kms ***
          • kms:* 권한이 부여된 인라인 정책이 탐지되었습니다.
        action_desc: |
          1. 인라인 정책에서 kms:* 권한을 최소 권한 원칙에 따라 제한하거나 삭제하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_no_custom_policy_permissive_role_assumption
  # ACTIONPLAN: sts:AssumeRole을 *에 허용하는 커스텀 정책을 탐지해 Slack 알림 발송
  - name: iam_no_custom_policy_permissive_role_assumption
    description: Detect custom IAM policies that allow sts:AssumeRole on all resources, then send Slack alert.
    resource: aws.iam-policy
    filters:
      - type: value
        key: PolicyDocument.Statement[].Action
        op: contains
        value: sts:AssumeRole
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_no_custom_policy_permissive_role_assumption ***
          • sts:AssumeRole을 모든 리소스(*)에 허용하는 커스텀 정책이 탐지되었습니다.
        action_desc: |
          1. 정책 범위를 최소한으로 제한하고, 불필요한 전체 리소스 허용은 즉시 제거하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_no_root_access_key
  # ACTIONPLAN: 루트 계정에 Access Key 존재 시 Slack 경고 알림 발송
  - name: iam_no_root_access_key
    description: Detect AWS root account with active access key(s), then send Slack alert.
    resource: aws.account
    filters:
      - type: value
        key: RootAccessKeys
        op: gt
        value: 0
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_no_root_access_key ***
          • AWS 루트 계정에 Access Key가 존재합니다.
        action_desc: |
          1. 모든 루트 Access Key를 즉시 삭제하세요.
          2. 루트 계정은 MFA만 활성화하고 키는 절대 사용하지 마세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_password_policy_expires_passwords_within_90_days_or_less
  # ACTIONPLAN: 비밀번호 만료 주기가 90일 초과된 경우 Slack 경고 알림 발송
  - name: iam_password_policy_expires_90_days_or_less
    description: Detect AWS account password policies that do not expire passwords within 90 days, then send Slack alert.
    resource: aws.account
    filters:
      - type: value
        key: PasswordPolicy.ExpirePasswords
        op: eq
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_password_policy_expires_passwords_within_90_days_or_less ***
          • 비밀번호 만료 주기가 90일을 초과하는 패스워드 정책이 탐지되었습니다.
        action_desc: |
          1. 비밀번호 만료 주기를 90일 이하로 강제하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_password_policy_lowercase
  # ACTIONPLAN: 패스워드에 소문자 필수 조건이 비활성화된 경우 Slack 알림 발송
  - name: iam_password_policy_lowercase
    description: Detect AWS account password policies that do not require lowercase characters, then send Slack alert.
    resource: aws.account
    filters:
      - type: value
        key: PasswordPolicy.RequireLowercaseCharacters
        op: eq
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_password_policy_lowercase ***
          • 비밀번호에 소문자 포함 조건이 비활성화된 패스워드 정책이 탐지되었습니다.
        action_desc: |
          1. 소문자 포함 필수 조건을 반드시 활성화하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_password_policy_minimum_length_14
  # ACTIONPLAN: 최소 14자 미만 패스워드 정책 탐지 시 Slack 알림 발송
  - name: iam_password_policy_minimum_length_14
    description: Detect AWS account password policies with minimum length less than 14 and send Slack alert.
    resource: aws.account
    filters:
      - type: value
        key: PasswordPolicy.MinimumPasswordLength
        op: lt
        value: 14
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_password_policy_minimum_length_14 ***
          • 비밀번호 최소 길이가 14자 미만으로 설정된 정책이 탐지되었습니다.
        action_desc: |
          1. 최소 14자 이상으로 패스워드 길이 정책을 강화하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_password_policy_number
  # ACTIONPLAN: 숫자 필수 조건 없는 패스워드 정책 탐지 시 Slack 알림 발송
  - name: iam_password_policy_number
    description: Detect AWS account password policies that do not require numbers and send Slack alert.
    resource: aws.account
    filters:
      - type: value
        key: PasswordPolicy.RequireNumbers
        op: eq
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_password_policy_number ***
          • 비밀번호에 숫자 필수 조건이 없는 정책이 탐지되었습니다.
        action_desc: |
          1. 비밀번호에 숫자 포함 필수 조건을 반드시 활성화하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_password_policy_reuse_24
  # ACTIONPLAN: 24회 미만 재사용 제한 정책 탐지 시 Slack 알림 발송
  - name: iam_password_policy_reuse_24
    description: Detect AWS account password policies allowing reuse fewer than 24 times and send Slack alert.
    resource: aws.account
    filters:
      - type: value
        key: PasswordPolicy.PasswordReusePrevention
        op: lt
        value: 24
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_password_policy_reuse_24 ***
          • 패스워드 재사용 방지 횟수가 24회 미만인 정책이 탐지되었습니다.
        action_desc: |
          1. 패스워드 재사용 방지 횟수를 24회 이상으로 설정하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_password_policy_symbol
  # ACTIONPLAN: 특수문자 필수 조건 없는 패스워드 정책 탐지 시 Slack 알림 발송
  - name: iam_password_policy_symbol
    description: Detect AWS account password policies that do not require symbols and send Slack alert.
    resource: aws.account
    filters:
      - type: value
        key: PasswordPolicy.RequireSymbols
        op: eq
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_password_policy_symbol ***
          • 비밀번호에 특수문자 필수 조건이 없는 정책이 탐지되었습니다.
        action_desc: |
          1. 비밀번호에 특수문자 포함 필수 조건을 활성화하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_password_policy_uppercase
  # ACTIONPLAN: 대문자 필수 조건 없는 패스워드 정책 탐지 시 Slack 알림 발송
  - name: iam_password_policy_uppercase
    description: Detect AWS account password policies that do not require uppercase letters and send Slack alert.
    resource: aws.account
    filters:
      - type: value
        key: PasswordPolicy.RequireUppercaseCharacters
        op: eq
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_password_policy_uppercase ***
          • 비밀번호에 대문자 필수 조건이 없는 정책이 탐지되었습니다.
        action_desc: |
          1. 비밀번호에 대문자 포함 필수 조건을 반드시 활성화하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_policy_allows_privilege_escalation
  # ACTIONPLAN: iam:PassRole 권한 상승 허용 정책 탐지 시 Slack 알림 발송
  - name: iam_policy_allows_privilege_escalation
    description: Detect IAM policies that include iam:PassRole and send Slack alert.
    resource: aws.iam-policy
    filters:
      - type: value
        key: PolicyDocument.Statement[].Action
        op: contains
        value: iam:PassRole
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_policy_allows_privilege_escalation ***
          • iam:PassRole(권한 상승)이 허용된 정책이 탐지되었습니다.
        action_desc: |
          1. 권한 상승이 불필요한 정책에서 iam:PassRole 항목을 반드시 제거하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_policy_attached_only_to_group_or_roles
  # ACTIONPLAN: 정책이 그룹/사용자에 직접 부착된 경우 Slack 알림 발송
  - name: iam_policy_attached_only_to_group_or_roles
    description: Detect IAM policies attached directly to users or groups and send Slack alert.
    resource: aws.iam-policy
    filters:
      - type: value
        key: AttachedUsers
        op: greater-than
        value: 0
        value_type: size
      - type: value
        key: AttachedGroups
        op: greater-than
        value: 0
        value_type: size
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_policy_attached_only_to_group_or_roles ***
          • 정책이 사용자 또는 그룹에 직접 부착된 사례가 탐지되었습니다.
        action_desc: |
          1. 정책을 사용자/그룹이 아닌 역할(roles)에만 부착하도록 조정하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_policy_no_full_access_to_cloudtrail
  # ACTIONPLAN: cloudtrail:* 전체권한 허용 정책 탐지 시 Slack 알림 발송
  - name: iam_policy_no_full_access_to_cloudtrail
    description: Detect IAM policies that grant full CloudTrail privileges and send Slack alert.
    resource: aws.iam-policy
    filters:
      - type: value
        key: PolicyDocument.Statement[].Action
        op: contains
        value: cloudtrail:*
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_policy_no_full_access_to_cloudtrail ***
          • cloudtrail:* 전체 권한이 허용된 정책이 탐지되었습니다.
        action_desc: |
          1. cloudtrail 전체 권한이 필요한지 검토하고 최소 권한으로 수정하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_policy_no_full_access_to_kms
  # ACTIONPLAN: kms:* 전체권한 허용 정책 탐지 시 Slack 알림 발송
  - name: iam_policy_no_full_access_to_kms
    description: Detect IAM policies that grant full KMS privileges and send Slack alert.
    resource: aws.iam-policy
    filters:
      - type: value
        key: PolicyDocument.Statement[].Action
        op: contains
        value: kms:*
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_policy_no_full_access_to_kms ***
          • kms:* 전체 권한이 허용된 정책이 탐지되었습니다.
        action_desc: |
          1. kms 전체 권한이 반드시 필요한지 검토하고, 최소 권한 원칙을 적용하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_role_cross_service_confused_deputy_prevention
  # ACTIONPLAN: trust policy에 StringEquals 조건이 없는 cross-service 역할 탐지 시 Slack 알림 발송
  - name: iam_role_cross_service_confused_deputy_prevention
    description: Detect IAM roles whose trust policy omits StringEquals condition and send Slack alert (confused deputy prevention).
    resource: aws.iam-role
    filters:
      - type: value
        key: AssumeRolePolicyDocument.Statement[].Condition
        op: not-in
        value: StringEquals
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_role_cross_service_confused_deputy_prevention ***
          • cross-service trust policy에 StringEquals 조건이 없는 역할이 탐지되었습니다.
        action_desc: |
          1. confused deputy 방지를 위해 StringEquals(SrcAccount 등) 조건을 반드시 추가하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_root_hardware_mfa_enabled
  # ACTIONPLAN: 루트 계정에 하드웨어 MFA가 미설정된 경우 Slack 알림 발송
  - name: iam_root_hardware_mfa_enabled
    description: Detect root account without hardware MFA and send Slack alert.
    resource: aws.account
    filters:
      - type: value
        key: MFADevices
        op: eq
        value: 0
        value_type: size
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_root_hardware_mfa_enabled ***
          • 루트 계정에 하드웨어 MFA가 설정되어 있지 않습니다.
        action_desc: |
          1. 루트 계정에 하드웨어 MFA를 즉시 설정하세요.
        to: 
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_root_mfa_enabled
  # ACTIONPLAN: 루트 계정에 MFA가 미설정된 경우 Slack 알림 발송
  - name: iam_root_mfa_enabled
    description: Detect root account without any MFA and send Slack alert.
    resource: aws.account
    filters:
      - type: value
        key: MFADevices
        op: eq
        value: 0
        value_type: size
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_root_mfa_enabled ***
          • 루트 계정에 MFA가 설정되어 있지 않습니다.
        action_desc: |
          1. 루트 계정에 가상 또는 하드웨어 MFA를 반드시 설정하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_rotate_access_key_90_days
  # ACTIONPLAN: 90일 초과 사용 중인 IAM Access Key 탐지 시 Slack 알림 발송
  - name: iam_rotate_access_key_90_days
    description: Detect IAM user access keys last rotated over 90 days ago and send Slack alert.
    resource: aws.iam-user
    filters:
      - type: credential
        key: access_keys.last_rotated
        op: gt
        value: 90
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_rotate_access_key_90_days ***
          • 90일 초과 사용된 Access Key가 탐지되었습니다.
        action_desc: |
          1. 해당 Access Key를 즉시 교체(회전)하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_securityaudit_role_created
  # ACTIONPLAN: SecurityAudit 역할이 없을 경우 Lambda로 자동 생성 후 Slack 알림 발송
  # [주의] lambda 폴더에 있는 람다를 배포하여 자동조치 가능
  # 자동조치를 완료했으므로 warning에서 good으로 변경
  - name: iam_securityaudit_role_created
    description: Detect absence of SecurityAudit role, create if missing, then send Slack alert.
    resource: aws.iam-role
    filters:
    - type: value
      key: RoleName
      op: eq
      value: SecurityAudit
    actions:
      # - type: invoke-lambda
      #   function: arn:aws:lambda:${AWS_REGION}:${ACCOUNT_ID}:function:ensureSecurityAuditFunction
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_securityaudit_role_created ***
          • SecurityAudit 역할이 존재하지 않아 자동으로 생성하였습니다.
        action_desc: |
          1. SecurityAudit 역할이 정상적으로 생성/유지되고 있는지 관리하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_support_role_created
  # ACTIONPLAN: Support 역할이 없을 경우 Lambda로 자동 생성 후 Slack 알림 발송
  # [주의] lambda 폴더에 있는 람다를 배포하여 자동조치 가능
  # 자동조치를 완료했으므로 warning에서 good으로 변경
  - name: iam_support_role_created
    description: Detect absence of Support role, create if missing, then send Slack alert.
    resource: aws.iam-role
    filters:
    - type: value
      key: RoleName
      op: eq
      value: AWSServiceRoleForSupport
    actions:
      # - type: invoke-lambda
      #   function: arn:aws:lambda:${AWS_REGION}:${ACCOUNT_ID}:function:ensureSupportRoleFunction
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_support_role_created ***
          • Support 역할이 존재하지 않아 자동으로 생성하였습니다.
        action_desc: |
          1. Support 역할이 정상적으로 생성/유지되고 있는지 관리하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_user_accesskey_unused
  # ACTIONPLAN: 90일 이상 미사용 Access Key가 있는 IAM 사용자 탐지 시 Slack 알림 발송
  - name: iam_user_accesskey_unused
    description: Detect IAM users with access keys unused for over 90 days and send Slack alert.
    resource: aws.iam-user
    filters:
      - type: credential
        key: access_keys.last_used_date
        op: lt
        value: 90
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_user_accesskey_unused ***
          • 90일 이상 미사용 Access Key가 탐지된 계정이 있습니다.
        action_desc: |
          1. 미사용 Access Key는 즉시 비활성화 또는 삭제하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_user_administrator_access_policy
  # ACTIONPLAN: AdministratorAccess가 부여된 IAM 사용자 탐지 시 Slack 알림 발송
  - name: iam_user_administrator_access_policy
    description: Detect IAM users with AdministratorAccess policy and send Slack alert.
    resource: aws.iam-user
    filters:
      - type: value
        key: AttachedManagedPolicies[].PolicyName
        op: contains
        value: AdministratorAccess
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_user_administrator_access_policy ***
          • AdministratorAccess 권한이 할당된 IAM 사용자가 탐지되었습니다.
        action_desc: |
          1. 해당 계정에 불필요한 경우 AdministratorAccess 정책을 해제하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_user_hardware_mfa_enabled
  # ACTIONPLAN: 하드웨어 MFA 미설정 IAM 사용자 탐지 시 Slack 알림 발송
  - name: iam_user_hardware_mfa_enabled
    description: Detect IAM users without hardware MFA and send Slack alert.
    resource: aws.iam-user
    filters:
      - type: value
        key: MfaDevices
        op: eq
        value: 0
        value_type: size
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_user_hardware_mfa_enabled ***
          • 하드웨어 MFA가 등록되지 않은 사용자가 탐지되었습니다.
        action_desc: |
          1. IAM 사용자에 하드웨어 MFA를 등록하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_user_mfa_enabled_console_access
  # ACTIONPLAN: 콘솔 접속시 MFA 미설정 사용자 탐지 시 Slack 알림 발송
  - name: iam_user_mfa_enabled_console_access
    description: Detect IAM users with console access and no active MFA and send Slack alert.
    resource: aws.iam-user
    filters:
      - type: credential
        key: mfa_active
        op: equal
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: iam_user_mfa_enabled_console_access ***
          • 콘솔 접속이 가능하나 MFA가 미설정된 사용자가 탐지되었습니다.
        action_desc: |
          1. 모든 콘솔 사용자에 대해 MFA 등록을 필수화하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_user_no_setup_initial_access_key
  # ACTIONPLAN: 콘솔 계정이 최초 Access Key를 계속 보유 중인 경우 Slack 알림 발송
  - name: iam_user_no_setup_initial_access_key
    description: Detect console users retaining initial access keys and send Slack alert.
    resource: aws.iam-user
    filters:
      - type: value
        key: AccessKeyMetadata
        op: gt
        value: 0
        value_type: size
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_user_no_setup_initial_access_key ***
          • 콘솔 사용자 계정에 초기 Access Key가 그대로 남아 있습니다.
        action_desc: |
          1. 불필요한 Access Key는 반드시 삭제하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_user_two_active_access_key
  # ACTIONPLAN: 2개 이상의 활성 Access Key를 가진 사용자 탐지 시 Slack 알림 발송
  - name: iam_user_two_active_access_key
    description: Detect IAM users with two or more active access keys and send Slack alert.
    resource: aws.iam-user
    filters:
      - type: credential
        key: access_keys.active
        op: gt
        value: 1
        value_type: size
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_user_two_active_access_key ***
          • 2개 이상의 활성 Access Key를 가진 IAM 사용자가 탐지되었습니다.
        action_desc: |
          1. 한 사용자가 2개 이상 Access Key를 가질 필요가 있는지 점검 후 불필요한 키는 비활성화/삭제하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_user_console_access_unused
  # ACTIONPLAN: 콘솔 전용(Access Key 미사용) 사용자 탐지 시 Slack 알림 발송
  - name: iam_user_console_access_unused
    description: Detect console-only IAM users (no access key usage) and send Slack alert.
    resource: aws.iam-user
    filters:
      - type: credential
        key: access_keys.active
        op: eq
        value: null
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_user_console_access_unused ***
          • 콘솔 전용(Access Key 미사용) IAM 사용자가 탐지되었습니다.
        action_desc: |
          1. 콘솔만 사용하는 계정인지 확인 후, 불필요시 비활성화 또는 삭제하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: iam_user_with_temporary_credentials
  # ACTIONPLAN: STS 임시 자격증명(Temporary Credentials) 사용 사용자 탐지 시 Slack 알림 발송
  - name: iam_user_with_temporary_credentials
    description: Detect IAM users with active temporary (STS) credentials and send Slack alert.
    resource: aws.iam-user
    filters:
      - type: credential
        key: access_keys.active
        op: contains
        value: "STS"
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: iam_user_with_temporary_credentials ***
          • STS 임시 자격증명(Temporary Credentials)이 활성화된 사용자가 탐지되었습니다.
        action_desc: |
          1. 해당 사용자의 임시 자격증명이 정상 업무 목적인지 반드시 확인하세요.
          2. 불필요시 즉시 취소(회수) 또는 계정 권한을 조정하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: kms_cmk_are_used
  #ACTIONPLAN: 장기간 사용되지 않은 KMS 키가 발견된 경우, 키를 비활성화하거나 삭제를 예약하여 관리합니다.
  - name: kms_cmk_are_used
    resource: aws.kms-key
    description: |
      A customer-managed CMK that has remained unused for over 90 days since creation and is currently in the Enabled state is scheduled for deletion in 7 days
    filters:
      - type: value
        key: KeyState
        value: Enabled
        op: eq
      - type: value
        key: CreationDate
        value: '2025-04-17T00:00:00+00:00' # 적당한 날짜로 수정
        op: lt
    actions:
      - type: tag
        key: cmk-unused-90d
        value: "true"
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: kms_cmk_are_used ***
          • 90일 이상 사용되지 않은 KMS 키가 발견되었습니다.
        action_desc: |
          1. 장기간 사용되지 않은 KMS 키를 비활성화하거나 삭제를 예약하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: kms_key_not_publicly_accessible
  #ACTIONPLAN: KMS 키 정책이 외부에 노출된 경우, 정책을 수정하여 신뢰된 계정만 접근하도록 제한합니다.
  - name: kms_key_not_publicly_accessible
    resource: aws.kms-key
    description: |
      If the KMS key policy is exposed externally, modify the policy to restrict access to trusted accounts only
    filters:
      - type: cross-account
        everyone_only: true
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: kms_key_not_publicly_accessible ***
          • KMS 키 정책이 외부에 노출된 상태입니다.
        action_desc: |
          1. KMS 키 외부에 노출된 정책을 수정하여 신뢰된 계정만 접근하도록 제한하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: kms_cmk_not_deleted_unintentionally
  #ACTIONPLAN: KMS 키에 삭제 대기 기간을 설정하거나 삭제 방지 정책 추가
  - name: kms_cmk_not_deleted_unintentionally
    resource: aws.kms-key
    region: all
    description: |
      Configure a deletion waiting period for the KMS key or add a deletion protection policy
    filters: 
      - type: value
        key: KeyState
        value: PendingDeletion
    actions:
      - type: tag
        key: prevent-unintended-deletion
        value: "true"
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: kms_cmk_not_deleted_unintentionally ***
          • 의도치 않은 cmk 삭제가 발생할 수 있습니다.
        action_desc: |
          1. KMS 키에 삭제 대기 기간을 설정하거나 삭제 방지 정책 추가하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: kms_cmk_rotation_enabled
  #ACTIONPLAN: CMK의 키 자동 회전 기능을 활성화하는 정책 적용
  - name: kms_cmk_rotation_enabled
    resource: aws.kms-key
    description: |
      Ensure that automatic rotation is enabled for all CMKs
    filters:
      - type: value
        key: KeyState
        value: Enabled
      - type: value
        key: RotationEnabled
        value: false
    actions:
      - type: set-rotation
        state: true
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: kms_cmk_rotation_enabled ***
          • CMK의 키 자동 회전 기능이 비활성화되어 있습니다.
        action_desc: |
          1. CMK의 키 자동 회전 기능을 활성화하는 정책 적용합니다.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

# CHECKID: macie_is_enabled
# ACTIONPLAN: Amazon Macie가 계정 또는 리전에 대해 활성화되어 민감 정보 탐지가 가능하도록 설정되었는지 확인
# ACTIONPLAN: Macie를 활성화하여 S3 내 개인정보 탐지 정책 설정
# ACTIONPLAN: Macie 비활성 계정 탐지 후 개인정보 보호 강화를 위해 자동 활성화 적용
# ACTIONPLAN: 특정 AWS 리전에서 Macie가 활성화되어 있지 않은 경우 탐지하여 알림
  - name: macie_is_enabled
    resource: aws.account
    description: "Alert: Macie is disabled"
    filters:
      - type: check-macie
        key: status
        op: not-equal
        value: ENABLED
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: macie_is_enabled ***
          • 계정/리전의 Macie가 비활성화되어 개인정보 및 민감정보 탐지가 불가한 상태입니다.
        action_desc: |
          1. 반드시 Macie를 활성화하여 S3 내 개인정보 및 민감 정보 탐지 정책을 즉시 설정하세요.
          2. 활성화 이후에도 Macie 설정/상태가 주기적으로 해제되지 않는지 점검·감사하세요.
          3. 정책 해제/비활성 이력은 반드시 보안팀에 공유·보고하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: networkfirewall_in_all_vpc
  # ACTIONPLAN: 네트워크 방화벽이 없는 VPC를 탐지
  - name: networkfirewall_in_all_vpc
    description: Alert on VPCs without AWS Network Firewall deployed
    resource: aws.vpc
    filters:
      - type: value
        key: VpcId
        op: not-in
        value:
          - type: resource
            resource: aws.network-firewall
            field: VpcId
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: networkfirewall_in_all_vpc ***
          • 네트워크 방화벽이 배포되지 않은 VPC가 감지되었습니다.
        action_desc: |
          1. 반드시 해당 VPC에 AWS Network Firewall을 직접 배포하여 인바운드·아웃바운드 트래픽을 필터링하세요.
          2. 배포 이후에도 방화벽 정책 및 작동상태가 주기적으로 점검되는지 확인하세요.
          3. 방화벽 정책/구성이 변경될 때마다 보안팀과 사전 협의하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: organizations_scp_check_deny_regions
  #ACTIONPLAN: 리전 사용 제한이 없는 경우, SCP를 사용하여 허가된 리전 외의 사용을 차단합니다.
  - name: organizations_scp_check_deny_regions
    resource: aws.org-account
    description: |
      Ensure every account has the ‘deny-unapproved-regions’ Service Control Policy;
      if missing or outdated, create/update it to block API calls outside approved regions.
    filters:
      - type: value
        key: AttachedPolicies[].PolicyName
        op: not-in
        value:
          - deny-unapproved-regions
    actions:
      - type: set-policy
        policy-type: SERVICE_CONTROL_POLICY
        name: deny-unapproved-regions
        contents:
          Version: "2012-10-17"
          Statement:
            - Sid: DenyOutsideApprovedRegions
              Effect: Deny
              Action: "*"
              Resource: "*"
              Condition:
                StringNotEquals:
                  aws:RequestedRegion:
                    - ap-northeast-2
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: organizations_scp_check_deny_regions ***
          • 허가되지 않은 리전 사용 차단에 대한 SCP가 적용되지 않았습니다.
        action_desc: |
          1. SCP를 사용하여 허가된 리전 외의 사용을 차단합니다.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: organizations_tags_policies_enabled_and_attached
  #ACTIONPLAN: 태그 정책이 비활성화된 경우, 활성화하고 적용하여 리소스에 일관된 태그를 강제합니다.
  - name: organizations_tags_policies_enabled_and_attached
    resource: aws.org-account
    description: |
      Ensure every account has the organization’s Tag Policy;
      if missing or outdated, create/update it to enforce required CostCenter tagging.
    filters:
      - type: value
        key: AttachedPolicies[].Type
        op: not-in
        value:
          - TAG_POLICY
    actions:
      - type: set-policy
        policy-type: TAG_POLICY
        name: organization-tag-policy
        contents:
          tags:
            CostCenter:
              tag_value:
                "@@assign":
                  - "12345"
                  - "1001"
                  - "2001"
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: organizations_tags_policies_enabled_and_attached ***
          • 태그 정책이 비활성화되어있습니다.
        action_desc: |
          1. 태그 정책을 활성화하고 적용합니다.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: rds_instance_backup_enabled
  #ACTIONPLAN: RDS 인스턴스에 백업 보존 기간 > 0으로 설정
  - name: rds_instance_backup_enabled
    resource: aws.rds
    description: |
      Enable automatic backups for the RDS instance(BackupRetentionPeriod > 0)
    filters:
      - type: value
        key: BackupRetentionPeriod
        value: 0
    actions:
      - type: modify-db
        update:
          - property: BackupRetentionPeriod
            value: 7
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: rds_instance_backup_enabled ***
          • RDS 인스턴스에 백업이 비활성화되어 있습니다.
        action_desc: |
          1. RDS 인스턴스에 백업을 활성화하였습니다.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: rds_instance_certificate_expiration
  #ACTIONPLAN: 만료된 RDS 인증서가 발견된 경우, 즉시 새로운 인증서로 교체하여 연결 오류를 방지합니다.
  - name: rds_instance_certificate_expiration
    resource: aws.rds
    description: |
      Identify RDS instances using expired certificates, replace them with new ones, and restart the instances to prevent connection errors
    filters:
      - type: value
        key: CertificateDetails.ValidTill
        op: less-than
        value_type: expiration
        value: 0
    actions:
      - type: modify-db
        immediate: true
        update:
          - property: CACertificateIdentifier
            value: rds-ca-rsa2048-g1
          - property: CertificateRotationRestart
            value: true
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: rds_instance_certificate_expiration ***
          • 만료된 RDS 인증서가 발견되었습니다.
        action_desc: |
          1. 만료된 RDS 인증서를 새로운 인증서로 교체하였습니다.
          2. 인증서 연결 오류를 방지하였습니다.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: rds_instance_copy_tags_to_snapshots
  #ACTIONPLAN: RDS 인스턴스에 태그 복사 기능을 활성화하여 복구 시 식별 정보 유지
  - name: rds_instance_copy_tags_to_snapshots
    resource: aws.rds
    description: |
      Automatically copy tags from RDS instances to snapshots to facilitate resource identification and management
    filters:
      - type: value
        key: CopyTagsToSnapshot
        value: false
    actions:
      - type: set-snapshot-copy-tags
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: rds_instance_copy_tags_to_snapshots ***
          • RDS 인스턴스에 태그 복사 기능이 비활성화되어 있습니다.
        action_desc: |
          1. RDS 인스턴스의 태그를 자동으로 스냅샷에 복사를 합니다.
          2. 리소스 식별 및 관리를 용이하게 합니다.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: rds_instance_default_admin
  #ACTIONPLAN: RDS 인스턴스의 마스터 사용자 이름이 'admin', 'postgres' 등 추측하기 쉬운 기본값인 경우 탐지하고 변경하도록 알림
  - name: rds_instance_default_admin
    resource: aws.rds
    description: |
      Detect RDS instances using default administrator usernames such as 'admin' or 'root', notify the security team, and replace the master user
    filters:
      - or:
        - type: value
          key: MasterUsername
          value: admin
        - type: value
          key: MasterUsername
          value: root
        - type: value
          key: MasterUsername
          value: administrator
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: rds_instance_default_admin ***
          • RDS 인스턴스의 마스터 사용자 이름이 admin, postgres 등 추측하기 쉬운 기본값입니다.
        action_desc: |
          1. RDS 인스턴스의 마스터 사용자 이름을 변경하세요.
          2. RDS 인스턴스의 마스터 사용자 이름은 추측하기 어렵게 설정하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: rds_instance_deletion_protection
  #ACTIONPLAN: RDS 인스턴스에 삭제 방지 설정 적용하여 의도치 않은 삭제 방지
  - name: rds_instance_deletion_protection
    resource: aws.rds
    description: |
      Verify that deletion protection is enabled on all RDS instances.
    filters:
      - type: value
        key: DeletionProtection
        value: false
    actions:
      - type: modify-db
        update:
          - property: DeletionProtection
            value: true
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: rds_instance_deletion_protection ***
          • RDS 인스턴스에서 삭제 보호가 비활성화되어 있습니다.
        action_desc: |
          1. RDS 인스턴스에 삭제 방지 설정 적용합니다.
          2. RDS 인스턴스의 의도치 않은 삭제를 방지합니다.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: rds_instance_deprecated_engine_version
  #ACTIONPLAN: 지원이 중단된 엔진 버전을 사용하는 RDS 인스턴스는 지원되는 최신 버전으로 업그레이드합니다.
  - name: rds_instance_deprecated_engine_version
    resource: aws.rds
    description: |
      Identify RDS instances running unsupported engine versions and automatically upgrade them to the latest supported version to maintain stability
    filters:
      - type: value
        key: Engine
        value: MySQL
      - type: value
        key: EngineVersion
        op: less-than
        value: 8.0.36
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: rds_instance_deprecated_engine_version ***
          • 지원이 중단된 엔진 버전을 사용하는 RDS 인스턴스가 존재합니다.
        action_desc: |
          1. RDS 인스턴스의 엔진 버전을 지원되는 최신 버전으로 업그레이드하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: rds_instance_enhanced_monitoring_enabled
  #ACTIONPLAN: RDS 인스턴스에 향상된 모니터링 활성화하여 성능 진단 기능 강화
  - name: rds_instance_enhanced_monitoring_enabled
    resource: aws.rds
    description: |
      Enable enhanced monitoring on all RDS instances
    filters:
      - type: value
        key: MonitoringInterval
        value: 0
    actions:
      #- type: modify-db
      #  update:
      #    - property: MonitoringInterval
      #      value: 60
      #    - property: MonitoringRoleARN
      #      value: arn:aws:iam::${ACCOUNT_ID}:role/rds-monitoring-role
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: rds_instance_enhanced_monitoring_enabled ***
          • RDS 인스턴스의 enhanced monitoring이 비활성화되어 있습니다.
        action_desc: |
          1. RDS 인스턴스의 enhanced monitoring을 활성화합니다.
          2. enhanced monitoring 활성화를 통해 성능 진단 기능을 강화합니다.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: rds_instance_event_subscription_security_groups
  #ACTIONPLAN: RDS 이벤트 구독(알람)이 보안 그룹 변경 등 중요 이벤트를 포함하는지 점검
  - name: rds_instance_event_subscription_security_groups
    resource: aws.rds-subscription
    description: |
      If an RDS event subscription is not configured for events such as DB security group change, automatically create and subscribe to the event, and notify the responsible team
    filters:
      - type: value
        key: SourceType
        value: db-security-group
      - type: value
        key: EventCategoriesList
        op: not-in
        value:
          - configuration change
          - failure
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: rds_instance_event_subscription_security_groups ***
          • RDS 이벤트 구독이 DB security group change 등 중요 이벤트를 포함하지 않습니다.
        action_desc: |
          1. RDS 이벤트 구독이 중요 이벤트를 포함하도록 변경하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: rds_instance_iam_authentication_enabled
  #ACTIONPLAN: IAM 인증이 비활성화된 RDS 인스턴스를 탐지하여 운영자에게 알림
  - name: rds_instance_iam_authentication_enabled
    resource: aws.rds
    description: |
      Verify that IAM authentication is enabled for all RDS instances, identify those where it is disabled, and notify the administrator
    filters:
      - type: value
        key: IAMDatabaseAuthenticationEnabled
        value: false
    actions:
      - type: modify-db
        update:
          - property: EnableIAMDatabaseAuthentication
            value: true
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: rds_instance_iam_authentication_enabled ***
          • IAM 인증이 비활성화된 RDS 인스턴스가 존재합니다.
        action_desc: |
          1. RDS 인스턴스의 IAM 인증을 활성화합니다.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: rds_instance_integration_cloudwatch_logs
  #ACTIONPLAN: RDS 로그가 CloudWatch에 연동되지 않은 경우, 로그 통합 기능 구성 적용
  - name: rds_instance_integration_cloudwatch_logs
    resource: aws.rds
    description: |
      Verify that RDS instances are exporting logs to CloudWatch Logs
    filters:
      - type: value
        key: "length(EnabledCloudwatchLogsExports || `[]`)"
        op: eq
        value: 0
    actions:
      - type: modify-db
        update:
          - property: CloudwatchLogsExportConfiguration
            value:
              EnableLogTypes:
                - error
                - general
                - slowquery
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: rds_instance_integration_cloudwatch_logs ***
          • RDS 로그가 CloudWatch에 연동되어 있지 않습니다.
        action_desc: |
          1. RDS의 로그 전송 설정을 자동으로 구성하여 통합 모니터링을 가능하게 합니다.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: rds_instance_minor_version_upgrade_enabled
  #ACTIONPLAN: RDS 인스턴스의 마이너 버전 자동 업그레이드가 비활성화된 경우, 활성화하여 보안 패치를 적용합니다.
  - name: rds_instance_minor_version_upgrade_enabled
    resource: aws.rds
    description: |
      Identify RDS instances with minor version automatic upgrades disabled, enable the setting to ensure security patches are applied automatically
    filters:
      - type: value
        key: AutoMinorVersionUpgrade
        value: false
        op: eq
    actions:
      - type: modify-db
        immediate: true
        update:
          - property: AutoMinorVersionUpgrade
            value: true
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: rds_instance_minor_version_upgrade_enabled ***
          • RDS 인스턴스의 마이너 버전 자동 업그레이드가 비활성화되어 있습니다.
        action_desc: |
          1. RDS 인스턴스의 마이너 버전 자동 업그레이드를 활성화합니다.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: rds_instance_multi_az
  #ACTIONPLAN: RDS 인스턴스를 다중 가용영역에 배포하여 고가용성 확보
  - name: rds_instance_multi_az
    resource: aws.rds
    description: |
      Enable Multi-AZ deployment for all single-AZ RDS instances.
    filters:
      - type: value
        key: MultiAZ
        value: false
    actions:
      - type: modify-db
        update:
          - property: MultiAZ
            value: true
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: rds_instance_multi_az ***
          • Multi-AZ 배포가 비활성화된 RDS 인스턴스가 존재합니다.
        action_desc: |
          1. 모든 단일 AZ RDS 인스턴스에 대해 Multi-AZ 배포를 활성화합니다.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: rds_instance_no_public_access
  #ACTIONPLAN: 공개적으로 액세스 가능한 RDS 인스턴스는 '퍼블릭 액세스' 속성을 비활성화하여 접근을 차단합니다.
  - name: rds_instance_no_public_access
    resource: aws.rds
    description: |
      Find RDS instances with public access enabled and disable the PubliclyAccessible property to prevent external exposure
    filters:
      - type: value
        key: PubliclyAccessible
        value: true
        op: eq
    actions:
      - type: modify-db
        update:
          - property: PubliclyAccessible
            value: false
        immediate: true
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: rds_instance_no_public_access ***
          • 퍼블릭 액세스가 가능한 RDS 인스턴스가 존재합니다.
        action_desc: |
          1. 퍼블릭 액세스가 가능한 RDS 인스턴스의 PubliclyAccessible 속성을 비활성화하였습니다.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: rds_instance_storage_encrypted
  #ACTIONPLAN: RDS 인스턴스 스토리지가 암호화되지 않은 경우, 스냅샷 복원을 통해 암호화된 인스턴스로 마이그레이션합니다.
  - name: rds_instance_storage_encrypted
    resource: aws.rds
    description: |
      Identify RDS instances with unencrypted storage and send notifications for manual remediation.
    filters:
      - type: value
        key: StorageEncrypted
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: rds_instance_storage_encrypted ***
          • 암호화되지 않은 RDS 인스턴스 스토리지가 존재합니다.
        action_desc: |
          1. 스냅샷 복원을 통해 암호화된 인스턴스로 마이그레이션하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: rds_instance_transport_encrypted
  #ACTIONPLAN: RDS 인스턴스의 SSL 연결이 강제되지 않는 경우, 파라미터 그룹에서 rds.force_ssl을 활성화합니다.
  - name: rds_instance_transport_encrypted
    resource: aws.rds
    description: |
      Find instances that do not have SSL configured and instances that do not have the latest CA, and designate them as the latest RDS CA to enforce SSL/TLS for all client connections
    filters:
      - or:
        - type: value
          key: CACertificateIdentifier
          value: null
        - type: value
          key: CACertificateIdentifier
          op: not-equal
          value: rds-ca-rsa2048-g1
    actions:
      - type: modify-db
        update:
          - property: CACertificateIdentifier
            value: rds-ca-rsa2048-g1
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: rds_instance_transport_encrypted ***
          • RDS 인스턴스의 CA 인증서가 최신(rds-ca-2019)이 아닙니다.
        action_desc: |
          1. RDS 인스턴스의 CA 인증서를 rds-ca-2019로 교체하였습니다.
          2. 이후 파라미터 그룹에서 rds.force_ssl 등으로 SSL 강제 설정도 권장합니다.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}
  
  #CHECKID: rds_snapshots_encrypted
  #ACTIONPLAN: RDS 스냅샷이 암호화되어 있지 않은 경우, 암호화 설정 적용 또는 알림 설정.
  - name: rds_snapshots_encrypted
    resource: aws.rds-snapshot
    description: |
      Find RDS snapshots that are not encrypted.
    filters:
      - type: value
        key: Encrypted
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: rds_snapshots_encrypted ***
          • RDS 스냅샷이 암호화되지 않았습니다.
        action_desc: |
          1. 해당 스냅샷을 삭제하거나, 암호화하여 새로 생성할 것을 권장합니다.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  #CHECKID: rds_snapshots_public_access
  #ACTIONPLAN: RDS 수동 스냅샷이 Public으로 노출된 경우 탐지 및 'restore access' 제거
  - name: rds_snapshots_public_access
    resource: aws.rds-snapshot
    description: |
      Find RDS snapshots that are publicly accessible (shared with all AWS accounts)
    filters:
      - type: cross-account
        whitelist: []
        everyone_only: true
    actions:
      - type: set-permissions
        remove: ["all"]
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: rds_snapshots_public_access ***
          • RDS 스냅샷이 퍼블릭으로 공개되어 있습니다.
        action_desc: |
          1. 스냅샷 공유 설정에서 '모든 AWS 계정' 공유를 해제하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: redshift_cluster_audit_logging
  # ACTIONPLAN: 감사 로깅(Audit Logging)이 비활성화된 Redshift 클러스터를 탐지해 운영팀에 Slack 알림만 전송.
  #             자동조치(Enable)는 지원하지 않으므로 담당자가 AWS 콘솔 또는 CLI에서 직접 활성화 및 S3 버킷 지정 필요.
  #             미활성 상태 지속 시 감사지적, 내부통제 위반 등 중대 리스크 발생 가능.
  - name: redshift_cluster_audit_logging
    resource: aws.redshift
    description: |
      Ensure that Amazon Redshift clusters have audit logging enabled.
    filters:
      - type: value
        key: LoggingStatus.LoggingEnabled
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: redshift_cluster_audit_logging ***
          • Redshift 클러스터의 감사 로깅(Audit Logging)이 비활성화되어 있습니다.
        action_desc: |
          1. 운영팀은 Redshift 콘솔 또는 CLI를 통해 감사 로깅(Audit Logging)을 직접 활성화하세요.
          2. 반드시 S3 버킷을 지정하고, 접근 권한 및 정책을 점검하여 감사 로그가 정상 저장되는지 확인하세요.
          3. 로깅 상태 및 저장 경로 변경 시 보안팀과 협의 후 적용하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: route53_public_hosted_zones_cloudwatch_logging_enabled
  # ACTIONPLAN: Route53 공개 Hosted Zone에서 Query Logging 미활성 시 Slack 알림만 전송. 
  #             자동조치(Enable) 불가, Custodian 공식 리소스(c7n_aws)가 미지원이므로 실 운영에서는 점검 불가.
  #             정책 yaml은 관리·감사·문서용 샘플로만 활용 가능.
  - name: route53_public_hosted_zones_cloudwatch_logging_enabled
    resource: aws.hostedzone 
    description: |
      Detects public Route53 hosted zones where query logging is disabled.
      (NOTE: This resource is only available via the c7n_aws plugin; not supported in base Cloud Custodian.)
    filters:
      - ConfigPublicZone: true
      - type: query-logging-enabled
        state: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: route53_public_hosted_zones_cloudwatch_logging_enabled ***
          • Route53 공개 Hosted Zone에 대해 Query Logging이 비활성화되어 있습니다.
        action_desc: |
          1. Route53 Query Logging은 자동조치가 불가하므로 운영팀이 직접 수동으로 활성화해야 합니다.
          2. 로그 미활성 상태에서는 도메인 질의 이력 추적이 불가능하니, 보안 요구에 따라 주기적으로 점검하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

# S3 ----------------------------------------------------------------- S3
  # CHECKID: s3_account_level_public_access_blocks
  # ACTIONPLAN: 계정 전체에 S3 Public Access Block 설정이 모두 활성화되어 있는지 확인, 미설정 시 운영자 알림
  # ACTIONPLAN: 계정 수준에서 S3 퍼블릭 접근 차단 설정이 비활성화된 경우, 자동으로 차단 정책 구성
  - name: s3_account_level_public_access_blocks
    resource: aws.account
    description: Detect S3 public access block settings at the account level
    filters:
      - type: s3-public-block
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: s3_account_level_public_access_blocks ***
          • 계정 수준에서 S3 퍼블릭 접근 차단 설정이 비활성화가 감지되었습니다.
        action_desc: |
          1. 차단 정책을 구성하여, 계정 수준에서 S3 퍼블릭 접근 차단 설정을 활성화해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}


  # CHECKID: s3_bucket_acl_prohibited
  # ACTIONPLAN: ACL 자체 사용이 금지된 정책에 따라 ACL 설정이 존재하는 S3 버킷을 탐지하고 알림 또는 태깅
  - name: s3_bucket_acl_prohibited
    resource: aws.s3
    description: "Alert: S3 With acl ACL"
    filters:
      - type: value
        key: "Acl.Grants"
        value_type: size
        op: gt
        value: 0
    actions:
      - type: tag
        key: ACL
        value: exist
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: s3_bucket_acl_prohibited ***
          • S3 버킷에서 ACL 설정이 감지되었습니다.
        action_desc: |
          1. ACL 자체 사용이 금지된 정책에 따라 ACL 설정을 변경해주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: s3_bucket_cross_region_replication
  # ACTIONPLAN: S3 버킷에 교차 리전 복제를 설정하여 재해복구 기능 확보
  # ACTIONPLAN: S3 교차 리전 복제를 설정하여 재해복구(소산 백업) 기능 확보
  # ACTIONPLAN: 중요 S3 버킷에 대해 Cross-Region Replication 활성화 및 정책 적용
  # ACTIONPLAN: 개인정보가 포함된 중요 데이터 버킷에 Cross Region Replication이 비활성화되어 있는 경우 탐지하여 알림
  - name: s3_bucket_cross_region_replication
    resource: aws.s3
    description: "Alert: S3 Without Cross-Region Replication"
    filters:
      - type: value
        key: ReplicationConfiguration.Rules
        value: absent
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: s3_bucket_cross_region_replication ***
          • S3 버킷에 교차 리전 복제 비활성화가 감지되었습니다.
        action_desc: |
          1. S3 버킷에 교차 리전 복제를 설정하여 재해복구 기능 확보해 주세요.
          2. 중요 S3 버킷에 대해 Cross-Region Replication 활성화 및 정책 적용해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: s3_bucket_default_encryption
  # ACTIONPLAN: S3 기본 암호화 설정을 활성화하여 백업 시 자동 암호화 보장
  # ACTIONPLAN: S3 기본 암호화 설정이 비활성화된 경우, 자동으로 암호화 설정 적용
  - name: s3_bucket_default_encryption
    resource: aws.s3
    description: "Action & Alert : S3 Without default encryption"
    filters:
      - type: bucket-encryption
        state: false
    actions:
      - type: set-bucket-encryption
        crypto: AES256
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: s3_bucket_default_encryption ***
          • S3 기본 암호화 비활성화가 감지되어 활성화 조치하였습니다.
        action_desc: |
          1. S3 기본 암호화(AES256) 활성화 조치
          2. 저장된 백업 데이터의 무결성 보장을 위해, 암호화를 적용해 주세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}


  # CHECKID: s3_bucket_kms_encryption
  # ACTIONPLAN: S3 버킷에 KMS 암호화를 적용하여 저장된 백업 데이터의 무결성 보장
  # ACTIONPLAN: S3 버킷 KMS 암호화 설정이 비활성화된 경우, 자동 적용
  - name: s3_bucket_kms_encryption
    resource: aws.s3
    description: "Alert : S3 Without kms encryption"
    filters:
      - type: bucket-encryption
        crypto: AES256
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: s3_bucket_default_encryption ***
          • S3 버킷에서 KMS 암호화 비활성화가 감지되었습니다.
        action_desc: |
          1. 저장된 백업 데이터의 무결성 보장을 위해, S3 버킷에 KMS 암호화를 적용해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}


  # CHECKID: s3_bucket_level_public_access_block
  # ACTIONPLAN: 각 S3 버킷에 대해 Public Access Block 설정이 비활성화된 경우 탐지 및 설정 적용 또는 알림
  # ACTIONPLAN: S3 버킷 수준에서 퍼블릭 접근 차단 설정이 비활성화된 경우, 자동 구성 적용.
  - name: s3_bucket_level_public_access_block
    resource: aws.s3
    description: "Alert: S3 Public Access Block 변경 실시간 감지"
    filters:
      - type: value
        key: PublicAccessBlockConfiguration
        value: absent
        op: eq
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: s3_bucket_level_public_access_block ***
          • S3 버킷에 퍼블릭 접근 차단 설정 비활성화가 감지되었습니다.
        action_desc: |
          1. S3 버킷에 대해 Public Access Block 설정을 구성해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: s3_bucket_lifecycle_enabled
  # ACTIONPLAN: CloudTrail 로그 버킷 등 장기 보관이 필요한 S3 버킷에 수명 정책이 없는 경우 탐지하여 알림
  # ACTIONPLAN: S3 버킷에 라이프사이클 정책을 설정하여 백업 파일의 주기적 삭제 또는 전환 자동화
  # ACTIONPLAN: S3 버킷에 객체 전환/만료 정책을 포함한 수명주기 정책 설정
  - name: s3_bucket_lifecycle_enabled
    resource: aws.s3
    description: "Alert: S3 Without lifecycle"
    filters:
      - type: value
        key: Lifecycle
        value: absent
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: s3_bucket_lifecycle_enabled ***
          • S3 버킷에 수명 정책 비활성화가 감지되었습니다.
        action_desc: |
          1. S3 버킷에 라이프사이클 정책을 설정하여 백업 파일의 주기적 삭제 또는 전환 자동화해주세요.
          2. S3 버킷에 객체 전환/만료 정책을 포함한 수명주기 정책을 설정해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: s3_bucket_no_mfa_delete
  # ACTIONPLAN: S3 버킷에 MFA 삭제 설정 적용하여 중요 데이터 삭제 보호
  - name: s3_bucket_no_mfa_delete
    resource: aws.s3
    description: "Alert: S3 Without MFA delete"
    filters:
       - type: value
         key: VersioningConfiguration.MFADelete
         value: Enabled
         op: ne
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: s3_bucket_no_mfa_delete ***
          • S3 버킷에 MFA 삭제 설정 누락이 감지되었습니다.
        action_desc: |
          1. 중요 데이터 삭제 보호를 위해, S3 버킷에 MFA 삭제 설정 적용해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}


  # CHECKID: s3_bucket_object_lock
  # ACTIONPLAN: S3 버킷에 Object Lock 및 WORM 설정 적용
  - name: s3_bucket_object_lock
    resource: aws.s3
    description: "Alert: S3 Without Object Lock"
    filters:
      - or:
        - type: value
          key: ObjectLockEnabled
          value: absent
        - type: value
          key: ObjectLockEnabled
          value: "Disabled"
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: s3_bucket_object_lock ***
          • S3 버킷에 Object Lock 누락이 감지되었습니다.
        action_desc: |
          1. S3 버킷에 Object Lock 및 WORM 설정 적용해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: s3_bucket_object_versioning
  # ACTIONPLAN: S3 버킷에 객체 버전 관리를 활성화하여 데이터 복구 가능성 확보
  - name: s3_bucket_object_versioning
    resource: aws.s3
    description: "Alert: S3 Without versioning"
    filters:
      - or:
        - type: value
          key: Versioning.Status
          value: "Suspended"
        - type: value
          key: Versioning.Status
          value: absent
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: s3_bucket_object_versioning ***
          • S3 버킷에 객체 버전 관리 누락이 감지되었습니다.
        action_desc: |
          1. 데이터 복구 가능성 확보를 위해, S3 버킷에 객체 버전 관리를 활성화해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}


  # CHECKID: s3_bucket_policy_public_write_access
  # ACTIONPLAN: S3 버킷 정책이 퍼블릭 쓰기 허용인 경우, 정책 수정 또는 차단 설정
  # ACTIONPLAN: S3 버킷 정책에서 쓰기 권한 공개 접근 제거
  - name: s3_bucket_policy_public_write_access
    resource: aws.s3
    description: "Action & Alert: S3 퍼블릭 쓰기 정책 변경 실시간 감지"
    filters:
      - type: global-grants
        permissions:
          - WRITE
          - FULL_CONTROL
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: s3_bucket_policy_public_write_access ***
          • S3 버킷에 퍼블릭 쓰기 허용 설정이 감지되었습니다.
        action_desc: |
          1. S3 버킷 정책에서 쓰기 권한 공개 접근을 비허용해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: s3_bucket_public_access
  # ACTIONPLAN: S3 버킷 전체 공개 설정 제거로 백업 데이터 노출 방지
  # ACTIONPLAN: S3 버킷이 퍼블릭하게 설정된 경우, 퍼블릭 접근 차단 정책 적용
  - name: s3_bucket_public_access
    resource: aws.s3
    description: "Action & Alert: S3 버킷 퍼블릭 액세스 실시간 감지"
    filters:
      - or:
          - type: global-grants
            permissions:
              - READ
              - WRITE
              - FULL_CONTROL
          - type: has-statement
            statements:
              - Effect: Allow
                Principal: "*"
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: s3_bucket_public_access ***
          • S3 버킷에 전체 공개 설정이 감지되었습니다.
        action_desc: |
          1. 데이터 노출 방지를 위해, 퍼블릭 접근 차단 정책 적용해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: s3_bucket_public_list_acl
  # ACTIONPLAN: S3 버킷에 대한 리스트 권한 공개 ACL 제거로 백업 목록 노출 방지
  # ACTIONPLAN: S3 버킷에 대한 리스트 권한이 퍼블릭으로 열려 있는 경우, ACL/정책 수정
  - name: s3_bucket_public_list_acl
    resource: aws.s3
    description: "Alert: S3 With public list acl"
    filters:
      - type: global-grants
        permissions:
          - READ
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: s3_bucket_public_list_acl ***
          • S3 버킷에 대한 리스트 권한 공개가 감지되었습니다.
        action_desc: |
          1. 백업 목록 노출 방지를 위해, S3 버킷에 대한 리스트 권한 공개 ACL 제거해 주세요. 
          2. S3 버킷에 대한 리스트 권한이 퍼블릭으로 열려 있는 경우, ACL/정책 수정해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}


  # CHECKID: s3_bucket_public_write_acl
  # ACTIONPLAN: 버킷 ACL에 'WRITE' 권한이 Everyone 또는 AllUsers에 부여되어 있는 경우 탐지하여 해당 권한 제거
  # ACTIONPLAN: S3 버킷에 쓰기 권한 공개 ACL 제거로 무단 백업 데이터 덮어쓰기 방지
  # ACTIONPLAN: S3 버킷에 쓰기 ACL이 퍼블릭하게 설정된 경우, ACL 제거 또는 차단 구성
  - name: s3_bucket_public_write_acl
    resource: aws.s3
    description: "Alert: S3 With public write acl"
    filters:
      - type: global-grants
        permissions:
          - WRITE
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: s3_bucket_secure_transport_policy ***
          • S3 버킷에 쓰기 권한 공개 ACL이 감지되었습니다.
        action_desc: |
          1. 버킷 ACL에 'WRITE' 권한이 Everyone 또는 AllUsers에 부여되어 있는 경우, 해당 권한 제거해 주세요.
          2. S3 버킷에 쓰기 권한 공개 ACL 제거로 무단 백업 데이터 덮어쓰기 방지해 주세요.
          3. S3 버킷에 쓰기 ACL이 퍼블릭하게 설정된 경우, ACL 제거 또는 차단 구성해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: s3_bucket_secure_transport_policy
  # ACTIONPLAN: S3 HTTPS 접근 정책 설정 여부 확인 및 필터링
  # ACTIONPLAN: S3 버킷 정책에 'aws:SecureTransport' 조건을 추가하여 HTTPS만 허용
  - name: s3_bucket_secure_transport_policy
    resource: aws.s3
    description: "Alert: S3 Without HTTPS access policy"
    filters:
      - type: missing-policy-statement
        statement_ids:
          - EnforceTLSAccessOnly
    actions:
      # - type: set-statements
      #   statements:
      #     - Sid: EnforceTLSAccessOnly
      #       Effect: Deny
      #       Principal: "*"
      #       Action: "s3:*"
      #       Resource:
      #         - "arn:aws:s3:::{{ bucket_name }}"
      #         - "arn:aws:s3:::{{ bucket_name }}/*"
      #       Condition:
      #         Bool:
      #           "aws:SecureTransport": "false"
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: s3_bucket_secure_transport_policy ***
          • S3 버킷에 HTTPS 접근 정책 미설정 감지되었습니다.
        action_desc: |
          1. S3 HTTPS 접근 정책 설정 여부 확인 및 필터링해 주세요.
          2. S3 버킷 정책에 'aws:SecureTransport' 조건을 추가하여 HTTPS만 허용해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: s3_bucket_server_access_logging_enabled
  # ACTIONPLAN: S3 서버 액세스 로그 설정이 꺼져 있는 경우, 해당 설정 자동 활성화
  - name: s3_bucket_server_access_logging_enabled
    resource: aws.s3
    description: "Alert: S3 Without server access logging"
    filters:
      - type: value
        key: LoggingEnabled
        value: absent
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: s3_bucket_server_access_logging_enabled ***
          • S3 버킷에 서버 액세스 로그 설정 누락이 감지되었습니다.
        action_desc: |
          1. S3 서버 액세스 로그 설정 활성화해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: secretsmanager_rotation_enabled
  # ACTIONPLAN: 자동 회전이 비활성화된 Secrets Manager 시크릿을 탐지하여 운영팀에 알림을 보냄
  # ACTIONPLAN: 자동 회전은 Lambda, IAM, 서비스 연계 등 추가 구성이 필수이므로 자동조치는 수행하지 않고, 운영팀의 수동 점검/조치만 권장
  - name: secretsmanager_rotation_enabled
    resource: aws.secrets-manager
    description: |
      Detects Secrets Manager secrets with automatic rotation disabled, violating secret key management policy.
    filters:
      - type: value
        key: RotationEnabled
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: secretsmanager_rotation_enabled ***
          • 해당 Secrets Manager 시크릿은 자동 회전(Rotation) 설정이 비활성화되어 있습니다.
        action_desc: |
          1. 해당 시크릿의 자동 회전이 꺼진 상태이므로, 운영팀은 반드시 수동으로 보안 점검 후 회전 설정을 검토하세요.
          2. 회전 정책 변경 시 Lambda 함수 연결, IAM 권한, 서비스 백엔드 영향 등을 반드시 사전에 점검·테스트 후 적용하세요.
          3. 서비스 장애 리스크가 있으니, 변경 전 반드시 관련 개발팀/보안팀과 협의하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: securityhub_enabled
  # ACTIONPLAN: AWS Security Hub가 비활성화된 계정을 탐지하여 운영팀에 알림 전송.
  #             자동조치(Enable)는 지원하지 않으므로, 담당자가 직접 Security Hub를 활성화해야 함.
  #             비활성 상태 지속 시 통합 모니터링 부재 및 ISMS-P 등 인증 위반 리스크가 있음.
  - name: securityhub_enabled
    resource: aws.account
    description: |
      Detects AWS accounts with Security Hub disabled, resulting in lack of integrated security monitoring and ISMS-P non-compliance.
    filters:
      - type: value
        key: "securityhub_enabled"
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: securityhub_enabled ***
          • 해당 AWS 계정은 Security Hub가 비활성화되어 통합 보안 모니터링 및 인증 기준을 충족하지 못하고 있습니다.
        action_desc: |
          1. 운영팀은 Security Hub를 직접 활성화하여 계정 전체 보안 이벤트가 집계·분석되도록 설정해야 합니다.
          2. ISMS-P 등 보안 인증 요구사항을 위해 정기적으로 Security Hub 상태를 점검하세요.
          3. 활성화 이후에도 모든 리전에서 정상 작동 중인지 확인하고, 변경 사항 발생 시 보안팀에 즉시 공유하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}


  # CHECKID: vpc_different_regions
  # ACTIONPLAN: 단일 리전에만 VPC가 있는 경우, 여러 리전에 VPC를 배포하여 재해 복구 능력을 향상시킵니다.
  - name: vpc_different_regions
    description: Alert when a region has only one VPC
    resource: aws.vpc
    filters:
      - type: value
        value_type: resource_count
        op: eq
        value: 1
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: vpc_different_regions ***
          • 이 리전에서 VPC가 하나만 감지되었습니다.
        action_desc: |
          1. 다른 리전에 VPC를 배포하여 재해 복구 능력을 향상하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: vpc_flow_logs_enabled
  # ACTIONPLAN: VPC 흐름 로깅이 비활성화된 VPC가 있는 경우, 즉시 활성화하여 트래픽을 모니터링합니다.
  - name: vpc_flow_logs_enabled
    description: Ensure VPC Flow Logs are enabled for traffic monitoring
    resource: aws.vpc
    filters:
      - type: flow-logs
        enabled: false
    actions:
    # 원하면 채워넣고 활성화
    #  - type: enable-flow-logs
    #    log-group: "/aws/vpc/flow-logs"
    #    iam-role-arn: 채워넣기
    #    traffic-type: all
    #    max-aggregation-interval: 60
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: vpc_flow_logs_enabled ***
          • VPC 흐름 로깅이 비활성화된 VPC가 감지되었습니다.
        action_desc: |
          1. 로그 그룹을 생성하고 VPC Flow Logs를 활성화하세요.
          2. 로그 그룹에서 로그 수집 상태를 확인하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: vpc_subnet_different_az
  # ACTIONPLAN: VPC가 단일 가용 영역에만 서브넷을 가진 경우, 여러 가용 영역에 서브넷을 추가합니다.
  - name: vpc_subnet_different_az
    description: Alert on VPCs with subnets in only one availability zone
    resource: aws.vpc
    filters:
      - type: subnet
        value_type: resource_count
        op: eq
        value: 1   
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: vpc_subnet_different_az ***
          • 이 VPC는 단일 가용 영역에만 서브넷이 구성되어 있습니다.
        action_desc: |
          1. 여러 가용 영역에 서브넷을 추가하여 고가용성을 확보하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: vpc_subnet_no_public_ip_by_default
  # ACTIONPLAN: 서브넷이 기본적으로 퍼블릭 IP를 할당하는 경우, 해당 설정을 비활성화하여 보안을 강화합니다.
  - name: vpc-subnet-disable-default-public-ip
    description: Disables default public IP assignment on new EC2 instances launched in subnets
    resource: aws.subnet
    filters:
      - type: value
        key: MapPublicIpOnLaunch
        op: eq
        value: true
    actions:
    # 1 기본 퍼블릭 IP 할당 비활성화 (서비스에 영향이 있다면 주석 처리)
      - type: modify
        MapPublicIpOnLaunch: false
    # 2 Slack 알림
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: vpc_subnet_no_public_ip_by_default ***
          • 서브넷이 기본적으로 퍼블릭 IP를 할당하도록 설정되어 있습니다.
        action_desc: |
          1. 해당 서브넷의 기본 퍼블릭 IP 할당을 비활성화했습니다.
          2. 설정이 올바르게 유지되는지 주기적으로 확인하세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: vpc_subnet_separate_private_public
  # ACTIONPLAN: VPC에 퍼블릭 및 프라이빗 서브넷 구분이 없는 경우, 용도에 맞게 서브넷을 재구성합니다.
  - name: vpc_subnet_separate_private_public
    description: Alert VPCs that have only public subnets without any private subnets
    resource: aws.vpc
    filters:
    # 1 하나 이상의 public 서브넷이 있는 VPC
      - type: subnet
        key: MapPublicIpOnLaunch
        op: eq
        value: true
    # 2 private 서브넷이 전혀 없는 VPC
      - not:
        - type: subnet
          key: MapPublicIpOnLaunch
          op: eq
          value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: vpc_subnet_separate_private_public ***
          • VPC에 private 서브넷이 없고 public 서브넷만 존재합니다.
        action_desc: |
          1. VPC에 private 서브넷을 추가하여 내부 리소스 보호를 강화하세요.
          2. public/private 서브넷 구분이 유지되도록 관리해주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}
