policies:

  # CHECKID: cloudtrail_bucket_requires_mfa_delete
  # ACTIONPLAN: MFA Delete 비활성 S3 버킷 탐지 시 Slack 알림, 수동 조치 유도
  - name: cloudtrail_bucket_requires_mfa_delete
    resource: aws.s3
    description: Detect S3 buckets with MFA Delete disabled and send alerts to Slack
    filters:
      - type: value
        key: Versioning.MFADelete
        value: "Disabled"
      - type: value
        key: Versioning.Status
        value: "Enabled"
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_bucket_requires_mfa_delete ***
          • MFA Delete가 비활성화된 S3 버킷이 탐지되었습니다.
        action_desc: |
          1. 해당 버킷이 CloudTrail 로그용이라면 반드시 객체 잠금 또는 보존 정책을 설정하세요.
          2. MFA Delete는 버킷 생성 시에만 설정할 수 있으니 신규 버킷 배포 시 사전 적용을 검토하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudtrail_cloudwatch_logging_enabled
  # ACTIONPLAN: CloudTrail 트레일의 CloudWatch 연동·로깅 미설정 시 자동 활성화 후 알림
  # 여러 정책을 동시에 배포하면 Lambda 함수 충돌(ResourceConflictException)이 발생할 수 있으니, 에러 시 1~2분 후 해당 정책만 재실행하세요.
  - name: cloudtrail_cloudwatch_logging_enabled
    resource: aws.cloudtrail
    description: If a CloudTrail trail is not integrated with CloudWatch Logs or logging is disabled, automatically configure the integration and send a Slack notification.
    filters:
      - type: value
        key: CloudWatchLogsLogGroupArn
        value: absent
      - type: status
        key: IsLogging
        value: false
    actions:
      - type: update-trail
        attributes:
          CloudWatchLogsLogGroupArn: arn:aws:logs:${AWS_REGION}:${ACCOUNT_ID}:log-group:${CLOUDTRAIL_LOG_GROUP}
          CloudWatchLogsRoleArn: arn:aws:iam::${ACCOUNT_ID}:role/${CLOUDTRAIL_LOG_ROLE}
      - type: set-logging
        enabled: true
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: cloudtrail_cloudwatch_logging_enabled ***
          • CloudTrail 트레일이 CloudWatch Logs와 연동되지 않고 로깅이 비활성화된 상태로 탐지되어, 연동과 로깅을 자동으로 활성화하였습니다.
        action_desc: |
          1. 자동 연동/로깅 이후 CloudWatch Logs 및 로깅 상태가 정상적으로 활성화되었는지 점검하세요.
          2. 연동 해제/오류 발생 시 보안팀에 즉시 공유하고, 연동 설정을 정기적으로 재점검하세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}


  # CHECKID: cloudtrail_insights_exist
  # ACTIONPLAN: CloudTrail Insights 미설정 시 Slack 알림, 수동 활성화 유도
  - name: cloudtrail_insights_exist
    resource: aws.cloudtrail
    description: Detect and notify when CloudTrail Insights is disabled.
    filters:
      - type: value
        key: HasInsightSelectors
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_insights_exist ***
          • CloudTrail Insights 기능이 비활성화된 상태로 탐지되었습니다.
        action_desc: |
          1. CloudTrail Insights를 활성화하여 이상 API 호출 패턴 탐지 기능을 추가하세요.
          2. Trail 생성/변경 시 Insights 옵션을 반드시 점검하고 활성화 상태를 주기적으로 검토하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudtrail_kms_encryption_enabled
  # ACTIONPLAN: CloudTrail 로그 KMS 미암호화 탐지 시 Slack 알림, 수동 설정 유도
  - name: cloudtrail_kms_encryption_enabled
    resource: aws.cloudtrail
    description: Detect CloudTrails that are not encrypted with KMS.
    filters:
      - type: value
        key: KmsKeyId
        value: absent
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_kms_encryption_enabled ***
          • CloudTrail 로그가 KMS 키로 암호화되지 않은 상태로 탐지되었습니다.
        action_desc: |
          1. CloudTrail 설정에서 반드시 KMS 암호화를 활성화하고 적절한 키를 지정하세요.
          2. 설정 변경 시 로깅 중단 위험, 암호화 키 관리·접근권한도 함께 점검하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudtrail_log_file_validation_enabled
  # ACTIONPLAN: CloudTrail 로그 무결성 검증 미설정 시 Slack 알림, 수동 점검 유도
  - name: cloudtrail_log_file_validation_enabled
    resource: aws.cloudtrail
    description: Send Slack notification when CloudTrail log file validation is disabled.
    filters:
      - type: value
        key: HasLogFileValidationEnabled
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_log_file_validation_enabled ***
          • CloudTrail 로그 무결성 검증(Log File Validation) 기능이 비활성화된 상태로 탐지되었습니다.
        action_desc: |
          1. CloudTrail 설정에서 로그 무결성 검증을 활성화하세요.
          2. 설정 변경 시 로깅 중단 가능성 등 영향도를 사전 검토하고, 정책 반영 후 정상 동작 여부를 주기적으로 점검하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: s3_access_logging_enabled
  # ACTIONPLAN: S3 Access Logging 비활성 버킷 탐지 시 Slack 알림, 수동 설정 유도
  - name: s3_access_logging_enabled
    resource: aws.s3
    description: Notify when S3 bucket access logging is disabled.
    filters:
      - type: value
        key: Logging.Enabled
        value: false
      - not:
          - type: value
            key: Name
            value: cloudtrail-access-log-bucket-${ACCOUNT_ID}
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: s3_access_logging_enabled ***
          • S3 버킷에 Access Logging이 비활성화된 상태로 탐지되었습니다.
        action_desc: |
          1. S3 콘솔에서 해당 버킷의 Access Logging을 활성화하여 접근 이력을 추적하세요.
          2. 로그 저장 버킷의 접근권한과 보존 기간 정책도 주기적으로 점검하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudtrail_logs_s3_bucket_is_not_publicly_accessible
  # ACTIONPLAN: CloudTrail 로그 저장 버킷 퍼블릭 노출 탐지 시 Slack 알림, 수동 차단 유도
  - name: cloudtrail_logs_s3_bucket_is_not_publicly_accessible
    resource: aws.s3
    description: Send Slack notification when CloudTrail log bucket is publicly accessible.
    filters:
      - type: value
        key: "tag:aws:cloudtrail:trail"
        value: present
      - type: global-grants
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_logs_s3_bucket_is_not_publicly_accessible ***
          • CloudTrail 로그 저장 S3 버킷이 퍼블릭으로 노출된 상태로 탐지되었습니다.
        action_desc: |
          1. S3 버킷 정책을 수정해 퍼블릭 접근을 차단하고, 로그 기밀성을 반드시 확보하세요.
          2. 정책 변경 이후에도 재노출 여부를 주기적으로 점검하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudtrail_multi_region_or_no_management_events
  # ACTIONPLAN: CloudTrail 다중 리전/관리 이벤트 미활성 탐지 시 Slack 알림, 수동 활성화 유도
  - name: cloudtrail_multi_region_or_no_management_events
    resource: aws.cloudtrail
    description: Send Slack notification when CloudTrail is not logging in all regions or not capturing management events.
    filters:
      - or:
          - type: value
            key: IsMultiRegionTrail
            value: false
          - type: value
            key: HasManagementEvents
            value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_multi_region_or_no_management_events ***
          • CloudTrail이 다중 리전 로깅 또는 관리 이벤트 로깅을 비활성화한 상태로 탐지되었습니다.
        action_desc: |
          1. 모든 리전에 대해 로깅을 활성화하고, 관리 이벤트도 반드시 포함되도록 설정하세요.
          2. 설정 이후에도 감사 대상 Trail이 전체 리전에 적용되어 있는지 정기적으로 확인하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudtrail_multi_region_enabled
  # ACTIONPLAN: CloudTrail 단일 리전 트레일 탐지 시 Slack 알림, 다중 리전 설정 유도
  - name: cloudtrail_multi_region_enabled
    resource: aws.cloudtrail
    description: Send Slack notification when CloudTrail is not enabled for multi-region logging.
    filters:
      - type: value
        key: IsMultiRegionTrail
        value: false
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_multi_region_enabled ***
          • CloudTrail이 단일 리전 트레일로 설정된 상태로 탐지되었습니다.
        action_desc: |
          1. 모든 리전에 대한 가시성 확보를 위해 CloudTrail의 다중 리전 로깅을 반드시 활성화하세요.
          2. 설정 후 전체 계정에 적용되었는지, 로그 누락/비용 이슈 없는지 정기적으로 점검하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}


  # CHECKID: cloudtrail_s3_dataevents_read_enabled
  # ACTIONPLAN: S3 객체 읽기 이벤트 로깅 미설정 트레일 탐지 시 Slack 알림, 수동 활성화 유도
  - name: cloudtrail_s3_dataevents_read_enabled
    resource: aws.cloudtrail
    description: Detect CloudTrail trails without S3 read data event logging.
    filters:
      - type: event-selectors
        key: 'DataResources[?Type==`AWS::S3::Object`]|[?ReadWriteType==`ReadOnly`]'
        op: equal
        value: null
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_s3_dataevents_read_enabled ***
          • CloudTrail에서 S3 객체 수준의 읽기 이벤트 로깅이 비활성화된 상태로 탐지되었습니다.
        action_desc: |
          1. CloudTrail 설정에서 S3 객체 수준(Read) 데이터 이벤트 로깅을 활성화하세요.
          2. 로그 비용 및 비즈니스 요구사항에 따라 적용 범위도 주기적으로 재점검하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: cloudtrail_s3_dataevents_write_enabled
  # ACTIONPLAN: S3 객체 쓰기 이벤트 로깅 미설정 트레일 탐지 시 Slack 알림, 수동 활성화 유도
  - name: cloudtrail_s3_dataevents_write_enabled
    resource: aws.cloudtrail
    description: CloudTrail is not logging S3 object-level write events, making it impossible to track changes like object creation or deletion.
    filters:
      - type: value
        key: EventSelectors[].DataResources[].Type
        op: not-in
        value: s3
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: cloudtrail_s3_dataevents_write_enabled ***
          • CloudTrail에서 S3 객체 수준의 쓰기 이벤트 로깅이 비활성화된 상태로 탐지되었습니다.
        action_desc: |
          1. CloudTrail 설정에서 S3 객체 수준(Write) 데이터 이벤트 로깅을 활성화하세요.
          2. 로그 비용/운영 정책 변경 시 비즈니스 요구에 따라 범위를 주기적으로 재점검하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

          
  # CHECKID: ec2_ebs_default_encryption
  # ACTIONPLAN: EBS 디폴트 암호화 설정 미적용 시 알림만 전송
  - name: ec2_ebs_default_encryption
    description: Automatic activation and notification transmission when default EBS encryption is turned off
    resource: aws.account
    filters:
      - type: default-ebs-encryption
        state: false
    actions:
    # 디폴트 암호화 자동 조치를 원하면 주석 풀고 사용
    #  - type: set-ebs-encryption
    #    state: true
    #    key: 암호화 키 작성
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_ebs_default_encryption ***
          • EC2 기본 EBS 암호화 비활성화가 감지되었습니다.
        action_desc: |
          1. 기본 EBS 암호화 설정을 활성화 하세요.
          2. AWS Console(EC2->설정)에서 적용 여부를 확인해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_ebs_volume_encryption
  # ACTIONPLAN: 비암호화된 EBS 볼륨 감지 시 알림 전송 및 스냅샷 생성
  - name: ec2_ebs_volume_encryption
    description: Send notifications and create snapshots when unencrypted EBS volumes are detected
    resource: aws.ebs
    filters:
      - Encrypted: false
    actions:
      - type: snapshot
        copy-volume-tags: true
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_ebs_volume_encryption ***
          • 비암호화된 EBS 볼륨이 감지되어 스냅샷이 생성되었습니다.
        action_desc: |
          1. 스냅샷이 정상적으로 생성되었는지 확인해 주세요.
          2. 스냅샷을 복사하면서 암호화하여 새로운 암호화 된 볼륨을 생성하세요.(스냅샷이 오래된 경우 새로운 스냅샷을 생성하여 진행)
          3. 해당 인스턴스를 중지하고 기존에 연결된 볼륨 해지 및 새로 생성한 암호화된 볼륨을 연결하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_ebs_snapshots_encrypted
  # ACTIONPLAN: 비암호화된 스냅샷 감지 시 알림만 전송
  - name: ec2_ebs_snapshots_encrypted
    description: Send notification when unencrypted EBS snapshot is detected
    resource: aws.ebs-snapshot
    filters:
      - Encrypted: false
    actions:
    # 'copy'해서 암호화 된 스냅샷 생성을 원하면 주석 풀고 사용. 기존 스냅샷 삭제까지 원하면 'delete'도 활성화
    #  - type: copy
    #    target_region: ap-northeast-2
    #    encrypted: true
    #    target_key: 암호화 키 작성 (e.g. alias/aws/ebs)
    #  - type: delete
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_ebs_snapshots_encrypted ***
          • 비암호화 EBS 스냅샷이 감지되었습니다.
        action_desc: |
          1. 스냅샷을 복사하여 암호화 된 스냅샷을 생성해주세요.
          2. 기존 암호화 되지 않은 스냅샷은 삭제해주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_ebs_volume_snapshots_exists
  # ACTIONPLAN: 스냅샷 없는 EC2 인스턴스의 볼륨 스냅샷 생성 및 태그 복사
  - name: ec2_ebs_volume_snapshots_exists
    description: Creating volume snapshots and copying tags for EC2 instances without snapshots
    resource: aws.ebs
    filters:
      - type: snapshots
        count: 0
      - type: value
        key: State
        op: eq
        value: in-use
    actions:
      - type: snapshot
        copy-volume-tags: true
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: ec2_ebs_volume_snapshots_exists ***
          • 스냅샷이 존재하지 않는 EBS 볼륨이 감지되어 자동으로 스냅샷을 생성하였습니다.
        action_desc: |
          1. 스냅샷이 정상적으로 생성되었는지 확인해 주세요.
          2. 복사된 태그가 정상적으로 적용됐는지 확인해 주세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_elastic_ip_unassigned
  # ACTIONPLAN: EC2에 연결되지 않은 Elastic IP 탐지 및 비용 최적화 대상 태그
  - name: ec2_elastic_ip_unassigned
    description: Detect Elastic IPs not connected to EC2 and target tags for cost optimization
    resource: aws.elastic-ip                   
    filters:
      - type: value
        key: "AssociationId"
        op: eq
        value: null        
    actions:
      - type: tag
        key: CostOptimize
        value: "UnattachedEIP"
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_elastic_ip_unassigned ***
          • EC2에 연결되지 않은(Unattached) Elastic IP가 감지되었습니다.
        action_desc: |
          1. Elastic IP의 사용 기록을 검토해 주세요.
          2. Elastic IP의 필요성을 점검하고 삭제를 고려해주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_launch_template_no_secrets
  # ACTIONPLAN: 시작 템플릿 UserData에 시크릿 키워드가 포함된 경우 태그 및 Slack 알림
  - name: ec2_launch_template_no_secrets
    description: EC2 시작 템플릿 UserData 내에 하드코드된 시크릿 정보가 포함된 템플릿을 태그하고 알림
    resource: aws.launch-template-version
    filters:
      # UserData 존재 여부 확인
      - type: value
        key: LaunchTemplateData.UserData
        op: ne
        value: null
      # 대표적인 시크릿 키워드 탐지 (대소문자 구분 없이)
      - type: value
        key: LaunchTemplateData.UserData
        op: regex
      # KEY, PASSWORD, PW, TOKEN, SECRET
        value: '.*(S0VZ|UEFTU1dPUkQ=|UFc=|VE9LRU4=|U0VDUkVU)*'
    actions:
      # 시크릿 포함됨을 표시하는 태그
      - type: tag
        key: SensitiveUserData
        value: "true"
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_launch_template_no_secrets ***
          • 시작 템플릿의 UserData에 특정 키워드의 비밀 정보가 포함되어 있습니다.
        action_desc: |
          1. UserData를 검토 후 민감한 비밀 정보를 제거하세요.
          2. AWS Secrets Manager/Parameter Store를 사용하도록 수정하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_networkacl_allow_ingress_any_port
  # ACTIONPLAN: 네트워크 ACL이 모든 포트에 대해 0.0.0.0/0에서 인바운드 접근을 허용하는지 점검
  - name: ec2_networkacl_allow_ingress_any_port
    description: Detect whether the network ACL allows inbound access from 0.0.0.0/0 for all ports
    resource: aws.network-acl
    filters:
      - type: value
        key: "length(Entries[?Egress==`false` && RuleAction=='allow' && CidrBlock=='0.0.0.0/0' && Protocol=='-1'])"
        op: gt
        value: 0
    actions:
      - type: tag
        key: allow_ingress_any_port
        value: "true"
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_networkacl_allow_ingress_any_port ***
          • 네트워크 ACL에서 0.0.0.0/0 대상 모든 포트·프로토콜 허용 규칙이 발견되었습니다.
        action_desc: |
          1. 해당 ACL 항목을 점검하여 최소 권한 원칙에 맞게 수정하세요.  
          2. 필요할 경우 특정 IP/포트만 허용하도록 제한하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_networkacl_allow_ingress_tcp_port_22
  # ACTIONPLAN: 네트워크 ACL이 SSH 포트(22)에 대해 0.0.0.0/0에서 인바운드 접근을 허용하는지 점검
  - name: ec2_networkacl_allow_ingress_tcp_port_22
    description: Detect whether the network ACL allows inbound access from 0.0.0.0/0 for the SSH port (22)
    resource: aws.network-acl
    filters:
      - type: value
        key: >
          length(Entries[?Egress==`false`
                          && RuleAction=='allow'
                          && CidrBlock=='0.0.0.0/0'
                          && Protocol=='6'
                          && PortRange.From==`22`
                          && PortRange.To==`22`])
        op: gt
        value: 0
    actions:
      - type: tag
        key: ec2_networkacl_allow_ingress_tcp_port_22
        value: "true"
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_networkacl_allow_ingress_tcp_port_22 ***
          • 네트워크 ACL에서 TCP 포트 22 (SSH) 에 대해 0.0.0.0/0 허용 규칙이 발견되었습니다.
        action_desc: |
          1. SSH 접근 제어가 필요한 소스 IP만 허용하도록 ACL을 수정하세요.  
          2. 보안 그룹에서도 중복 필터링을 적용하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_networkacl_allow_ingress_tcp_port_3389
  # ACTIONPLAN: 네트워크 ACL이 RDP 포트(3389)에 대해 0.0.0.0/0에서 인바운드 접근을 허용하는지 점검
  - name: ec2_networkacl_allow_ingress_tcp_port_3389
    description: Detect whether the network ACL allows inbound access from 0.0.0.0/0 for the RDP port (3389)
    resource: aws.network-acl
    filters:
      - type: value
        key: >
          length(Entries[?Egress==`false`
                          && RuleAction=='allow'
                          && CidrBlock=='0.0.0.0/0'
                          && Protocol=='6'
                          && PortRange.From==`3389`
                          && PortRange.To==`3389`])
        op: gt
        value: 0
    actions:
      - type: tag
        key: ec2_networkacl_allow_ingress_tcp_port_3389
        value: "true"
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_networkacl_allow_ingress_tcp_port_3389 ***
          • 네트워크 ACL에서 TCP 포트 3389 (RDP) 에 대해 0.0.0.0/0 허용 규칙이 발견되었습니다.
        action_desc: |
          1. RDP 접근 제어가 필요한 소스 IP만 허용하도록 ACL을 수정하세요.  
          2. 추가 방화벽 또는 보안 그룹 규칙을 검토하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_all_ports
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_any_port
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_high_risk_tcp_ports
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_port_mongodb_27017_27018
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_ftp_port_20_21
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_22
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_3389
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_cassandra_7199_9160_8888
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_elasticsearch_kibana_9200_9300_5601
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_kafka_9092
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_memcached_11211
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_mysql_3306
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_oracle_1521_2483
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_postgres_5432
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_redis_6379
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_sql_server_1433_1434
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_telnet_23
  # CHECKID: ec2_securitygroup_allow_wide_open_public_ipv4
  # ACTIONPLAN: 0.0.0.0/0 전체/임의/고위험/특정 서비스 포트 인바운드 오픈 규칙 실시간 자동 삭제
  - name: ec2_securitygroup_allow
    description: |
      Automatically deletes when 0.0.0.0/0 inbound (all/random/high-risk/specific service ports) is opened
    resource: aws.security-group
    filters:
      - type: ingress
        Cidr:
          value: 0.0.0.0/0
    actions:
      - type: remove-permissions
        ingress: matched
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: ec2_instance_securitygroup_ports ***
          • 0.0.0.0/0(전체 인바운드)로 오픈된 보안그룹 규칙이 탐지되어 삭제 조치하였습니다.
        action_desc: |
          1. 반드시 필요한 경우가 아니라면 0.0.0.0/0 인바운드 허용을 삼가주세요.
          2. 인바운드 규칙은 최소 권한 원칙에 따라 제한적으로 관리해 주세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}


  # CHECKID: ec2_securitygroup_from_launch_wizard
  # ACTIONPLAN: launch-wizard로 생성된 SG 실시간 자동 삭제
  - name: ec2_securitygroup_from_launch_wizard
    description: |
      Security groups created with launch-wizard (temporary/test/directly created) are detected in real time and automatically deleted immediately after creation.
    resource: aws.security-group
    filters:
      - type: value
        key: GroupName
        op: regex
        value: ^launch-wizard
    actions:
      - type: delete
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        subject: "[자동조치] launch-wizard 보안그룹이 실시간 삭제됨"
        violation_desc: |
          *** CHECKID: ec2_securitygroup_from_launch_wizard ***
          • launch-wizard로 생성된 보안그룹이 감지되어 삭제 조치하였습니다.
        action_desc: |
          1. 필요한 경우 EC2 콘솔에서 삭제 이력 및 보안그룹 생성 내역을 검토해 주세요.
          2. 불필요한 보안그룹 생성을 방지해 주세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_securitygroup_with_many_ingress_egress_rules
  # ACTIONPLAN: 인바운드/아웃바운드 규칙 개수 30개 이상 실시간 Slack 알림
  - name: ec2_securitygroup_with_many_ingress_egress_rules
    description: |
      Security groups with more than 30 inbound/outbound rules are difficult to manage and have high potential security risks, so Slack notifications are sent when detected in real time.
    resource: aws.security-group
    filters:
      - or:
          - type: value
            key: "IpPermissions"
            value_type: size
            op: gte
            value: 30
          - type: value
            key: "IpPermissionsEgress"
            value_type: size
            op: gte
            value: 30
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_securitygroup_with_many_ingress_egress_rules ***
          • 보안그룹에 인바운드/아웃바운드 규칙이 30개 이상 존재하여 과도한 권한 설정이 감지되었습니다.
        action_desc: |
          1. 불필요한 인바운드/아웃바운드 규칙을 점검하여 최소화해 주세요.
          2. 보안그룹 권한은 최소 권한 원칙에 따라 관리해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_22
  # CHECKID: ec2_instance_port_ssh_exposed_to_internet
  # ACTIONPLAN: 22번 포트(SSH) 0.0.0.0/0 인바운드 실시간 감지/Slack 알림
  - name: ec2_instance_port_ssh_exposed_to_internet
    description: |
      When port 22 (SSH) is opened to 0.0.0.0/0 (all external), there is a high risk of external attacks, so when the rule is detected, send a real-time Slack notification.
    resource: aws.security-group
    filters:
      - type: ingress
        Cidr:
          value: 0.0.0.0/0
        Ports: [22]
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_instance_port_ssh_exposed_to_internet ***
          • 22번 포트(SSH)가 0.0.0.0/0(외부 전체)로 오픈된 인바운드 규칙이 탐지되었습니다.
          • SSH 포트 오픈은 외부 공격 및 무차별 대입 시도에 매우 취약하므로 즉시 점검이 필요합니다.
        action_desc: |
          1. 반드시 필요한 경우가 아니라면 SSH 인바운드(22번 포트) 오픈을 제한해 주세요.
          2. 운영 환경에서는 VPN, Bastion Host 등 안전한 접속 방식을 사용해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}


  # # CHECKID: ec2_securitygroup_default_restrict_traffic
  # # ACTIONPLAN: Default Security Group이 0.0.0.0/0 오픈시 Slack 알림 (삭제 X)
  - name: ec2_securitygroup_default_restrict_traffic
    description: |
      If the Default Security Group is opened to 0.0.0.0/0 (all external), it violates the recommended security settings, so send a real-time Slack notification when that rule is detected (for auditing/operational purposes, no deletion)
    resource: aws.security-group
    filters:
      - type: value
        key: GroupName
        value: default
      - type: ingress
        Cidr:
          value: 0.0.0.0/0
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_securitygroup_default_restrict_traffic ***
          • Default Security Group이 0.0.0.0/0(전체 외부)로 오픈된 상태가 감지되었습니다.
          • Default SG 오픈은 보안 정책 위반이며, 외부 공격에 취약해질 수 있습니다.
        action_desc: |
          1. Default SG의 인바운드 규칙을 점검하고, 불필요한 오픈은 즉시 제한해 주세요.
          2. 운영 환경에서는 Default SG 사용을 지양하고, 별도의 SG를 최소 권한 원칙에 따라 관리해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_securitygroup_not_used
  # ACTIONPLAN: 미사용 SG는 batch(run)로 일괄 삭제 (정기 실행만 가능)
  - name: ec2_securitygroup_not_used
    description: Unused security groups can be misused or contaminated, so a Slack notification is sent every month through scheduled batch execution.
    resource: aws.security-group
    filters:
      - unused
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_securitygroup_not_used ***
          • 미사용 보안그룹이 감지되었습니다.  
          • 미사용 SG는 오남용·오염 위험이 있으니 반드시 필요성 검토 후 삭제를 고려해 주세요.
        action_desc: |
          1. EC2 콘솔에서 미사용 보안그룹 내역을 확인해 주세요.
          2. 실제 사용 목적이 없는 보안그룹만 신중히 삭제해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}
