policies:

  # CHECKID: ec2_ebs_default_encryption
  # ACTIONPLAN: EBS 디폴트 암호화 설정 미적용 시 알림만 전송
  - name: ec2_ebs_default_encryption
    description: Automatic activation and notification transmission when default EBS encryption is turned off
    resource: aws.account
    mode:
      type: cloudtrail
      role: ${LAMBDA_ROLE}
      events:
        - source: ec2.amazonaws.com
          event: DisableEbsEncryptionByDefault
          ids: "recipientAccountId"
    filters:
      - type: default-ebs-encryption
        state: false
    actions:
    # 디폴트 암호화 자동 조치를 원하면 주석 풀고 사용
    #  - type: set-ebs-encryption
    #    state: true
    #    key: 암호화 키 작성
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_ebs_default_encryption ***
          • EC2 기본 EBS 암호화 비활성화가 감지되었습니다.
        action_desc: |
          1. 기본 EBS 암호화 설정을 활성화 하세요.
          2. AWS Console(EC2->설정)에서 적용 여부를 확인해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_ebs_volume_encryption
  # ACTIONPLAN: 비암호화된 EBS 볼륨 감지 시 알림 전송 및 스냅샷 생성
  - name: ec2_ebs_volume_encryption
    description: Send notifications and create snapshots when unencrypted EBS volumes are detected
    resource: aws.ebs
    mode:
      type: periodic
      schedule: "rate(1 day)"
      role: ${LAMBDA_ROLE}
    filters:
      - Encrypted: false
    actions:
      - type: snapshot
        copy-volume-tags: true
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_ebs_volume_encryption ***
          • 비암호화된 EBS 볼륨이 감지되어 스냅샷이 생성되었습니다.
        action_desc: |
          1. 스냅샷이 정상적으로 생성되었는지 확인해 주세요.
          2. 스냅샷을 복사하면서 암호화하여 새로운 암호화 된 볼륨을 생성하세요.(스냅샷이 오래된 경우 새로운 스냅샷을 생성하여 진행)
          3. 해당 인스턴스를 중지하고 기존에 연결된 볼륨 해지 및 새로 생성한 암호화된 볼륨을 연결하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_ebs_snapshots_encrypted
  # ACTIONPLAN: 비암호화된 스냅샷 감지 시 알림만 전송
  - name: ec2_ebs_snapshots_encrypted
    description: Send notification when unencrypted EBS snapshot is detected
    resource: aws.ebs-snapshot
    mode:
      type: periodic
      schedule: "rate(1 day)"
      role: ${LAMBDA_ROLE}
    filters:
      - Encrypted: false
    actions:
    # 'copy'해서 암호화 된 스냅샷 생성을 원하면 주석 풀고 사용. 기존 스냅샷 삭제까지 원하면 'delete'도 활성화
    #  - type: copy
    #    target_region: ap-northeast-2
    #    encrypted: true
    #    target_key: 암호화 키 작성 (e.g. alias/aws/ebs)
    #  - type: delete
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_ebs_snapshots_encrypted ***
          • 비암호화 EBS 스냅샷이 감지되었습니다.
        action_desc: |
          1. 스냅샷을 복사하여 암호화 된 스냅샷을 생성해주세요.
          2. 기존 암호화 되지 않은 스냅샷은 삭제해주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_ebs_volume_snapshots_exists
  # ACTIONPLAN: 스냅샷 없는 EC2 인스턴스의 볼륨 스냅샷 생성 및 태그 복사
  - name: ec2_ebs_volume_snapshots_exists
    description: Creating volume snapshots and copying tags for EC2 instances without snapshots
    resource: aws.ebs
    mode:
      type: periodic
      schedule: "rate(1 day)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: snapshots
        count: 0
      - type: value
        key: State
        op: eq
        value: in-use
    actions:
      - type: snapshot
        copy-volume-tags: true
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: ec2_ebs_volume_snapshots_exists ***
          • 스냅샷이 존재하지 않는 EBS 볼륨이 감지되어 자동으로 스냅샷을 생성하였습니다.
        action_desc: |
          1. 스냅샷이 정상적으로 생성되었는지 확인해 주세요.
          2. 복사된 태그가 정상적으로 적용됐는지 확인해 주세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_port_cassandra_exposed_to_internet
  # CHECKID: ec2_instance_port_cifs_exposed_to_internet
  # CHECKID: ec2_instance_port_elasticsearch_kibana_exposed_to_internet
  # CHECKID: ec2_instance_port_ftp_exposed_to_internet
  # CHECKID: ec2_instance_port_kafka_exposed_to_internet
  # CHECKID: ec2_instance_port_kerberos_exposed_to_internet
  # CHECKID: ec2_instance_port_ldap_exposed_to_internet
  # CHECKID: ec2_instance_port_memcached_exposed_to_internet
  # CHECKID: ec2_instance_port_mongodb_exposed_to_internet
  # CHECKID: ec2_instance_port_mysql_exposed_to_internet
  # CHECKID: ec2_instance_port_oracle_exposed_to_internet
  # CHECKID: ec2_instance_port_postgresql_exposed_to_internet
  # CHECKID: ec2_instance_port_rdp_exposed_to_internet
  # CHECKID: ec2_instance_port_redis_exposed_to_internet
  # CHECKID: ec2_instance_port_sqlserver_exposed_to_internet
  # CHECKID: ec2_instance_port_ssh_exposed_to_internet
  # CHECKID: ec2_instance_port_telnet_exposed_to_internet
  # ACTIONPLAN: 0.0.0.0/0 전체/임의/고위험/특정 서비스 포트 인바운드 오픈 규칙 인스턴스 탐지
  - name: ec2_instance_port
    description: |
      Detect instances when 0.0.0.0/0 inbound (all/random/high-risk/specific service ports) is opened
    resource: aws.ec2
    mode:
      type: periodic
      role: ${LAMBDA_ROLE}
      schedule: "rate(1 day)"
    filters:
      - type: value
        key: PublicIpAddress
        op: ne
        value: null
      - type: security-group
        key: IpPermissions[].IpRanges[].CidrIp
        op: contains  
        value: 0.0.0.0/0
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_instance_port_* ***
          • 0.0.0.0/0(전체 인바운드)로 오픈된 보안그룹을 가진 인스턴스가 있습니다.
        action_desc: |
          1. 반드시 필요한 경우가 아니라면 0.0.0.0/0 인바운드 허용을 삼가주세요.
          2. 인바운드 규칙은 최소 권한 원칙에 따라 제한적으로 관리해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_account_imdsv2_enabled
  # ACTIONPLAN: 계정 IMDS 기본 HttpTokens을 required로 변경
  - name: ec2_instance_account_imdsv2_enabled
    description: Force IMDS basic token settings to be required for accounts
    resource: aws.account
    mode:
      type: periodic
      role: ${LAMBDA_ROLE}
      schedule: "rate(30 days)"
    filters:
      - or:
          - type: ec2-metadata-defaults
            key: HttpTokens
            op: eq
            value: optional
          - type: ec2-metadata-defaults
            key: HttpTokens
            op: eq
            value: no-preference
          - type: ec2-metadata-defaults
            key: HttpTokens
            op: eq
            value: absent
    actions:
    # 람다 배포 시 에러 발생. 람다 배포 없이 즉각 조치는 가능. (prompt.sh 이용)
    #  - type: set-ec2-metadata-defaults
    #    HttpTokens: required
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_instance_account_imdsv2_enabled ***
          • EC2 계정의 IMDS 기본 HttpTokens 설정이 V2(required)가 아닙니다.
        action_desc: |
          1. AWS Console에서 계정별 EC2 인스턴스의 IMDS(HttpTokens) 설정을 V2만 해당(토큰 필수) 하도록 변경해주세요.
          2. 모든 EC2 인스턴스에 대해 IMDSv2만 허용되도록 주기적으로 점검해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_detailed_monitoring_enabled
  # ACTIONPLAN: EC2 인스턴스의 상세 모니터링이 비활성화된 경우, 자동 활성화 구성
  - name: ec2_instance_detailed_monitoring_enabled
    description: When detailed monitoring of EC2 instances is disabled, switch it to enabled (additional charges may apply)
    resource: aws.ec2
    mode:
      type: periodic
      role: ${LAMBDA_ROLE}
      schedule: "rate(1 days)"
    filters:
      - Monitoring.State: disabled
    actions:
      - type: set-monitoring
        state: enable
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: ec2_instance_detailed_monitoring_enabled ***
          • EC2 인스턴스의 세부 모니터링이 비활성화 상태입니다.
        action_desc: |
          1. 세부 모니터링 상태가 활성화(enable)로 자동 조치 되었습니다.  
          2. 추가 비용이 발생할 수 있으나 활성화 상태 유지를 권장합니다.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_imdsv2_enabled
  # ACTIONPLAN: EC2 인스턴스에 대해 Instance Metadata Service v2(IMDSv2)가 설정되어 있는지 점검
  - name: ec2_instance_imdsv2_enabled
    description: If the endpoint is disabled when a new instance is created, enable the endpoint
    resource: aws.ec2
    mode:
      type: cloudtrail
      role: ${LAMBDA_ROLE}
      events:
        - source: ec2.amazonaws.com
          event: RunInstances
          ids: "responseElements.instancesSet.items[].instanceId"
    filters:
      - type: value
        key: MetadataOptions.HttpTokens
        op: ne
        value: required
    actions:
      # 1 IMDS endpoint 활성화
      - type: set-metadata-access
        endpoint: enabled
      # 2 IMDSv2 토큰 요구 설정
      - type: set-metadata-access
        tokens: required
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: ec2_instance_imdsv2_enabled ***
          • 새로 생성된 EC2 인스턴스의 IMDS 설정이 v2(HttpTokens=required)로 바뀌었습니다.
        action_desc: |
          1. 각 인스턴스의 MetadataOptions.HttpEndpoint 및 HttpTokens 설정을 확인하세요.  
          2. 런치 템플릿 및 오토스케일링 구성에서도 IMDSv2가 기본이 되도록 검토하세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_internet_facing_with_instance_profile
  # ACTIONPLAN: 퍼블릭 IP가 부여되고 IAM 인스턴스 프로파일이 연결된 인스턴스를 탐지하여 자격증명 노출 위험을 점검
  - name: ec2_instance_internet_facing_with_instance_profile
    description: Check IAM instance profile for instances with public IP addresses notification
    resource: aws.ec2
    mode:
      type: periodic
      schedule: "rate(30 days)"
      role: ${LAMBDA_ROLE}
    filters:
    # 1 퍼블릭 IP가 있어야 인터넷 노출된 인스턴스
      - type: value
        key: PublicIpAddress
        op: ne
        value: null
    # 2 인스턴스 프로파일이 붙어 있어야 함
      - type: value
        key: IamInstanceProfile
        op: ne
        value: null
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_instance_internet_facing_with_instance_profile ***
          • 퍼블릭 IP가 부여된 인스턴스에 IAM 인스턴스 프로파일이 연결되어 있습니다.
        action_desc: |
          1. 퍼블릭 IP가 부여된 인스턴스의 IAM 인스턴스 프로파일 권한을 최소화하세요.
          2. 최소 권한 원칙이 지켜지는지 주기적인 점검을 권장하며, 30일마다 메시지가 발송됩니다.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_managed_by_ssm
  # ACTIONPLAN: EC2 인스턴스가 Systems Manager에 의해 관리되지 않는 경우를 탐지
  - name: ec2_instance_managed_by_ssm
    description: Check if EC2 instances are managed by SSM and notify via Slack
    resource: aws.ec2
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: ssm
        key: PingStatus
        op: ne
        value: Online
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_instance_managed_by_ssm ***
          • SSM Agent가 등록되지 않았거나 Online 상태가 아닌 EC2 인스턴스가 존재합니다.
        action_desc: |
          1. 해당 인스턴스의 SMM 관리 여부를 파악하고, SSM Agent를 설치·등록하세요.  
          2. 설치 완료 후 PingStatus가 Online인지 확인해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_older_than_specific_days
  # ACTIONPLAN: 특정 일수보다 오래된 EC2 인스턴스가 존재하는 경우, 사용 여부를 검토.
  - name: ec2_instance_older_than_specific_days
    description: Send a notification if there are EC2 instances that are older than a certain number of days.
    resource: aws.ec2
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: instance-age
        days: 90 # 내부 정책에 따라 조정
        op: ge
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_instance_older_than_specific_days ***
          • 90일 이상 가동 중인 인스턴스가 감지되었습니다.
        action_desc: |
          1. 해당 인스턴스가 여전히 필요하다면 유지하세요.  
          2. 필요하지 않은 경우 종료를 검토하세요.
          3. 현재 90일 이상 가동 중인 인스턴스가 감지될 때 메시지가 발송됩니다. 내부 정책에 따라 일자를 조정하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_profile_attached
  # ACTIONPLAN: EC2 인스턴스가 IAM 역할없이 실행되는 경우를 탐지하고 역할 기반으로 권한을 관리하도록 알림
  - name: ec2_instance_profile_attached
    description: Find EC2 instances that are not connected to IAM instance profiles and send notifications
    resource: aws.ec2
    mode:
      type: cloudtrail
      role: ${LAMBDA_ROLE}
      events:
        - source: ec2.amazonaws.com
          event: RunInstances
          ids: "responseElements.instancesSet.items[].instanceId"
    filters:
      - type: value
        key: IamInstanceProfile.Arn
        op: eq
        value: null
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_instance_profile_attached ***
          • IAM 인스턴스 프로파일이 연결되지 않은 EC2 인스턴스가 생성되었습니다.
        action_desc: |
          1. 해당 인스턴스에 최소 권한 원칙에 따른 IAM 인스턴스 프로파일을 연결하세요.
          2. 역할 기반 권한 관리로 보안 모범 사례를 준수하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

# CHECKID: ec2_instance_public_ip
# ACTIONPLAN: 퍼블릭 IP가 부여된 EC2 인스턴스를 탐지하여 태깅 또는 제어
  - name: ec2_instance_public_ip
    description: Find EC2 instances with public IP addresses, attach the “PubliclyAccessible” tag, and stop them if necessary
    resource: aws.ec2
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
    # PublicIpAddress 필드가 null이 아닌(= 퍼블릭 IP가 할당된) 인스턴스만
      - type: value
        key: PublicIpAddress
        op: ne
        value: null
    actions:
    # 1 퍼블릭 노출 여부 표시 태그
      - type: tag
        key: PubliclyAccessible
        value: "true"
    # 2 (선택) 퍼블릭 IP 할당 인스턴스 즉시 중지
    #  - type: stop
    # 3 Slack 알림
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_instance_public_ip ***
          • 퍼블릭 IP가 할당된 EC2 인스턴스가 감지되어 *PubliclyAccessible* 태그를 부착하였습니다.
        action_desc: |
          1. 퍼블릭 노출이 불필요한 경우 해당 인스턴스의 퍼블릭 IP를 해제하거나, 보안 그룹/네트워크 ACL을 점검해 주세요.
          2. 보안정책에 따라 인스턴스를 중지(stop)하거나, VPC 설정을 재검토해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_instance_secrets_user_data
  # ACTIONPLAN: UserData에 하드코드된 시크릿 정보가 포함된 EC2 인스턴스를 태그/알림
  - name: ec2_instance_secrets_user_data
    description: Instance tags and notifications found with hard-coded secret information in EC2 UserData
    resource: aws.ec2
    mode:
      type: periodic
      schedule: "rate(1 day)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: user-data
        op: regex
        value: '.*(S0VZ|UEFTU1dPUkQ=|UFc=|VE9LRU4=|U0VDUkVU)*'
    actions:
      - type: tag
        key: SensitiveUserData
        value: "true"
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_instance_secrets_user_data ***
          • EC2 인스턴스의 UserData에 하드코드된 시크릿(비밀번호, 토큰 등 민감정보) 패턴이 감지되어 *SensitiveUserData* 태그를 부착하였습니다.
        action_desc: |
          1. UserData에 시크릿 정보(비밀번호, 토큰, 인증키 등)가 포함되어 있는지 확인하고 즉시 삭제 또는 빈 값으로 초기화해 주세요.
          2. 민감정보 전달이 필요하다면 AWS Secrets Manager 또는 Parameter Store를 반드시 사용해 주세요.
          3. 반복 발생 방지를 위해 배포 파이프라인 및 운영 정책을 재점검해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_elastic_ip_unassigned
  # ACTIONPLAN: EC2에 연결되지 않은 Elastic IP 탐지 및 비용 최적화 대상 태그
  - name: ec2_elastic_ip_unassigned
    description: Detect Elastic IPs not connected to EC2 and target tags for cost optimization
    resource: aws.elastic-ip                   
    mode:
      type: periodic
      schedule: "rate(7 days)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: "AssociationId"
        op: eq
        value: null        
    actions:
      - type: tag
        key: CostOptimize
        value: "UnattachedEIP"
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_elastic_ip_unassigned ***
          • EC2에 연결되지 않은(Unattached) Elastic IP가 감지되었습니다.
        action_desc: |
          1. Elastic IP의 사용 기록을 검토해 주세요.
          2. Elastic IP의 필요성을 점검하고 삭제를 고려해주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_launch_template_no_secrets
  # ACTIONPLAN: 시작 템플릿 UserData에 시크릿 키워드가 포함된 경우 태그 및 Slack 알림
  - name: ec2_launch_template_no_secrets
    description: EC2 시작 템플릿 UserData 내에 하드코드된 시크릿 정보가 포함된 템플릿을 태그하고 알림
    resource: aws.launch-template-version
    mode:
      type: periodic
      schedule: "rate(1 day)"
      role: ${LAMBDA_ROLE}
    filters:
      # UserData 존재 여부 확인
      - type: value
        key: LaunchTemplateData.UserData
        op: ne
        value: null
      # 대표적인 시크릿 키워드 탐지 (대소문자 구분 없이)
      - type: value
        key: LaunchTemplateData.UserData
        op: regex
      # KEY, PASSWORD, PW, TOKEN, SECRET
        value: '.*(S0VZ|UEFTU1dPUkQ=|UFc=|VE9LRU4=|U0VDUkVU)*'
    actions:
      # 시크릿 포함됨을 표시하는 태그
      - type: tag
        key: SensitiveUserData
        value: "true"
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_launch_template_no_secrets ***
          • 시작 템플릿의 UserData에 특정 키워드의 비밀 정보가 포함되어 있습니다.
        action_desc: |
          1. UserData를 검토 후 민감한 비밀 정보를 제거하세요.
          2. AWS Secrets Manager/Parameter Store를 사용하도록 수정하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_networkacl_allow_ingress_any_port
  # ACTIONPLAN: 네트워크 ACL이 모든 포트에 대해 0.0.0.0/0에서 인바운드 접근을 허용하는지 점검
  - name: ec2_networkacl_allow_ingress_any_port
    description: Detect whether the network ACL allows inbound access from 0.0.0.0/0 for all ports
    resource: aws.network-acl
    mode:
      type: periodic
      schedule: "rate(1 day)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: "length(Entries[?Egress==`false` && RuleAction=='allow' && CidrBlock=='0.0.0.0/0' && Protocol=='-1'])"
        op: gt
        value: 0
    actions:
      - type: tag
        key: allow_ingress_any_port
        value: "true"
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_networkacl_allow_ingress_any_port ***
          • 네트워크 ACL에서 0.0.0.0/0 대상 모든 포트·프로토콜 허용 규칙이 발견되었습니다.
        action_desc: |
          1. 해당 ACL 항목을 점검하여 최소 권한 원칙에 맞게 수정하세요.  
          2. 필요할 경우 특정 IP/포트만 허용하도록 제한하세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_networkacl_allow_ingress_tcp_port_22
  # ACTIONPLAN: 네트워크 ACL이 SSH 포트(22)에 대해 0.0.0.0/0에서 인바운드 접근을 허용하는지 점검
  - name: ec2_networkacl_allow_ingress_tcp_port_22
    description: Detect whether the network ACL allows inbound access from 0.0.0.0/0 for the SSH port (22)
    resource: aws.network-acl
    mode:
      type: periodic
      schedule: "rate(1 day)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: >
          length(Entries[?Egress==`false`
                          && RuleAction=='allow'
                          && CidrBlock=='0.0.0.0/0'
                          && Protocol=='6'
                          && PortRange.From==`22`
                          && PortRange.To==`22`])
        op: gt
        value: 0
    actions:
      - type: tag
        key: ec2_networkacl_allow_ingress_tcp_port_22
        value: "true"
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_networkacl_allow_ingress_tcp_port_22 ***
          • 네트워크 ACL에서 TCP 포트 22 (SSH) 에 대해 0.0.0.0/0 허용 규칙이 발견되었습니다.
        action_desc: |
          1. SSH 접근 제어가 필요한 소스 IP만 허용하도록 ACL을 수정하세요.  
          2. 보안 그룹에서도 중복 필터링을 적용하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_networkacl_allow_ingress_tcp_port_3389
  # ACTIONPLAN: 네트워크 ACL이 RDP 포트(3389)에 대해 0.0.0.0/0에서 인바운드 접근을 허용하는지 점검
  - name: ec2_networkacl_allow_ingress_tcp_port_3389
    description: Detect whether the network ACL allows inbound access from 0.0.0.0/0 for the RDP port (3389)
    resource: aws.network-acl
    mode:
      type: periodic
      schedule: "rate(1 day)"
      role: ${LAMBDA_ROLE}
    filters:
      - type: value
        key: >
          length(Entries[?Egress==`false`
                          && RuleAction=='allow'
                          && CidrBlock=='0.0.0.0/0'
                          && Protocol=='6'
                          && PortRange.From==`3389`
                          && PortRange.To==`3389`])
        op: gt
        value: 0
    actions:
      - type: tag
        key: ec2_networkacl_allow_ingress_tcp_port_3389
        value: "true"
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_networkacl_allow_ingress_tcp_port_3389 ***
          • 네트워크 ACL에서 TCP 포트 3389 (RDP) 에 대해 0.0.0.0/0 허용 규칙이 발견되었습니다.
        action_desc: |
          1. RDP 접근 제어가 필요한 소스 IP만 허용하도록 ACL을 수정하세요.  
          2. 추가 방화벽 또는 보안 그룹 규칙을 검토하세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_all_ports
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_any_port
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_high_risk_tcp_ports
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_port_mongodb_27017_27018
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_ftp_port_20_21
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_22
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_3389
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_cassandra_7199_9160_8888
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_elasticsearch_kibana_9200_9300_5601
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_kafka_9092
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_memcached_11211
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_mysql_3306
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_oracle_1521_2483
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_postgres_5432
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_redis_6379
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_sql_server_1433_1434
  # CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_telnet_23
  # CHECKID: ec2_securitygroup_allow_wide_open_public_ipv4
  # ACTIONPLAN: 0.0.0.0/0 전체/임의/고위험/특정 서비스 포트 인바운드 오픈 규칙 실시간 자동 삭제
  - name: ec2_securitygroup_allow
    description: |
      Automatically deletes when 0.0.0.0/0 inbound (all/random/high-risk/specific service ports) is opened
    resource: aws.security-group
    mode:
      type: cloudtrail
      role: ${LAMBDA_ROLE}
      events:
        - source: ec2.amazonaws.com
          event: AuthorizeSecurityGroupIngress
          ids: "requestParameters.groupId"
    filters:
      - type: ingress
        Cidr:
          value: 0.0.0.0/0
    actions:
      - type: remove-permissions
        ingress: matched
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        violation_desc: |
          *** CHECKID: ec2_securitygroup_allow_ingress_from_internet_to_* ***
          *** CHECKID: ec2_securitygroup_allow_wide_open_public_ipv4 ***
          • 0.0.0.0/0(전체 인바운드)로 오픈된 보안그룹 규칙이 탐지되어 삭제 조치하였습니다.
        action_desc: |
          1. 반드시 필요한 경우가 아니라면 0.0.0.0/0 인바운드 허용을 삼가주세요.
          2. 인바운드 규칙은 최소 권한 원칙에 따라 제한적으로 관리해 주세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}


  # CHECKID: ec2_securitygroup_from_launch_wizard
  # ACTIONPLAN: launch-wizard로 생성된 SG 실시간 자동 삭제
  - name: ec2_securitygroup_from_launch_wizard
    description: |
      Security groups created with launch-wizard (temporary/test/directly created) are detected in real time and automatically deleted immediately after creation.
    resource: aws.security-group
    mode:
      type: cloudtrail
      role: ${LAMBDA_ROLE}
      events:
        - source: ec2.amazonaws.com
          event: CreateSecurityGroup
          ids: "responseElements.groupId"
    filters:
      - type: value
        key: GroupName
        op: regex
        value: ^launch-wizard
    actions:
      - type: delete
      - type: notify
        slack_template: slack_default
        slack_msg_color: good
        subject: "[자동조치] launch-wizard 보안그룹이 실시간 삭제됨"
        violation_desc: |
          *** CHECKID: ec2_securitygroup_from_launch_wizard ***
          • launch-wizard로 생성된 보안그룹이 감지되어 삭제 조치하였습니다.
        action_desc: |
          1. 필요한 경우 EC2 콘솔에서 삭제 이력 및 보안그룹 생성 내역을 검토해 주세요.
          2. 불필요한 보안그룹 생성을 방지해 주세요.
        to:
          - ${GOOD_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_securitygroup_with_many_ingress_egress_rules
  # ACTIONPLAN: 인바운드/아웃바운드 규칙 개수 30개 이상 실시간 Slack 알림
  - name: ec2_securitygroup_with_many_ingress_egress_rules
    description: |
      Security groups with more than 30 inbound/outbound rules are difficult to manage and have high potential security risks, so Slack notifications are sent when detected in real time.
    resource: aws.security-group
    mode:
      type: cloudtrail
      role: ${LAMBDA_ROLE}
      events:
        - source: ec2.amazonaws.com
          event: AuthorizeSecurityGroupIngress
          ids: "requestParameters.groupId"
        - source: ec2.amazonaws.com
          event: AuthorizeSecurityGroupEgress
          ids: "requestParameters.groupId"
    filters:
      - or:
          - type: value
            key: "IpPermissions"
            value_type: size
            op: gte
            value: 30
          - type: value
            key: "IpPermissionsEgress"
            value_type: size
            op: gte
            value: 30
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_securitygroup_with_many_ingress_egress_rules ***
          • 보안그룹에 인바운드/아웃바운드 규칙이 30개 이상 존재하여 과도한 권한 설정이 감지되었습니다.
        action_desc: |
          1. 불필요한 인바운드/아웃바운드 규칙을 점검하여 최소화해 주세요.
          2. 보안그룹 권한은 최소 권한 원칙에 따라 관리해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # # CHECKID: ec2_securitygroup_default_restrict_traffic
  # # ACTIONPLAN: Default Security Group이 0.0.0.0/0 오픈시 Slack 알림 (삭제 X)
  - name: ec2_securitygroup_default_restrict_traffic
    description: |
      If the Default Security Group is opened to 0.0.0.0/0 (all external), it violates the recommended security settings, so send a real-time Slack notification when that rule is detected (for auditing/operational purposes, no deletion)
    resource: aws.security-group
    mode:
      type: cloudtrail
      role: ${LAMBDA_ROLE}
      events:
        - source: ec2.amazonaws.com
          event: AuthorizeSecurityGroupIngress
          ids: "requestParameters.groupId"
        - source: ec2.amazonaws.com
          event: AuthorizeSecurityGroupEgress
          ids: "requestParameters.groupId"
    filters:
      - type: value
        key: GroupName
        value: default
      - type: ingress
        Cidr:
          value: 0.0.0.0/0
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: danger
        violation_desc: |
          *** CHECKID: ec2_securitygroup_default_restrict_traffic ***
          • Default Security Group이 0.0.0.0/0(전체 외부)로 오픈된 상태가 감지되었습니다.
          • Default SG 오픈은 보안 정책 위반이며, 외부 공격에 취약해질 수 있습니다.
        action_desc: |
          1. Default SG의 인바운드 규칙을 점검하고, 불필요한 오픈은 즉시 제한해 주세요.
          2. 운영 환경에서는 Default SG 사용을 지양하고, 별도의 SG를 최소 권한 원칙에 따라 관리해 주세요.
        to:
          - ${DANGER_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}

  # CHECKID: ec2_securitygroup_not_used
  # ACTIONPLAN: 미사용 SG는 batch(run)로 일괄 삭제 (정기 실행만 가능)
  - name: ec2_securitygroup_not_used
    description: Unused security groups can be misused or contaminated, so a Slack notification is sent every month through scheduled batch execution.
    resource: aws.security-group
    mode:
      type: periodic
      schedule: "rate(30 days)" 
      role: ${LAMBDA_ROLE}
    filters:
      - unused
    actions:
      - type: notify
        slack_template: slack_default
        slack_msg_color: warning
        violation_desc: |
          *** CHECKID: ec2_securitygroup_not_used ***
          • 미사용 보안그룹이 감지되었습니다.  
          • 미사용 SG는 오남용·오염 위험이 있으니 반드시 필요성 검토 후 삭제를 고려해 주세요.
        action_desc: |
          1. EC2 콘솔에서 미사용 보안그룹 내역을 확인해 주세요.
          2. 실제 사용 목적이 없는 보안그룹만 신중히 삭제해 주세요.
        to:
          - ${WARNING_SLACK}
        transport:
          type: sqs
          queue: ${QUEUE_URL}
